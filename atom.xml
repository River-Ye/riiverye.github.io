<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://riverye.com/"/>
  <updated>2021-09-26T09:37:08.545Z</updated>
  <id>https://riverye.com/</id>
  
  <author>
    <name>River-Ye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Day19 - 匯入 excel-測試篇</title>
    <link href="https://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/"/>
    <id>https://riverye.com/2021/10/02/Day19-匯入-excel-測試篇/</id>
    <published>2021-10-01T16:00:00.000Z</published>
    <updated>2021-09-26T09:37:08.545Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>繼<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">上篇</a>匯入 Excel 實作，這篇以撰寫測試為主</p><h2><span id="實作">實作</span></h2><p>測試的寫法有蠻多種，這邊以其中一種為例，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/9" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/parser_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe ShopsExcel::Parser <span class="keyword">do</span></span><br><span class="line">  describe <span class="string">'execute'</span> <span class="keyword">do</span></span><br><span class="line">    let(<span class="symbol">:excel_file</span>) &#123; Tempfile.new(<span class="string">%w[shops_import .xlsx]</span>) &#125;</span><br><span class="line">    let(<span class="symbol">:excel</span>) <span class="keyword">do</span></span><br><span class="line">      file = excel_file</span><br><span class="line">      file.binmode</span><br><span class="line"></span><br><span class="line">      xlsx = Axlsx::Package.new</span><br><span class="line">      workbook = xlsx.workbook</span><br><span class="line">      workbook.add_worksheet(<span class="symbol">name:</span> <span class="string">'商家清單'</span>) <span class="keyword">do</span> <span class="params">|sheet|</span></span><br><span class="line">        sheet.add_row(excel_titles)</span><br><span class="line">        sheet.add_row(content_array1)</span><br><span class="line">        sheet.add_row(content_array2)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      xlsx.use_shared_strings = <span class="literal">true</span></span><br><span class="line">      xlsx.serialize(file)</span><br><span class="line"></span><br><span class="line">      file.rewind</span><br><span class="line">      file</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    let(<span class="symbol">:excel_titles</span>) &#123; ShopsExcel::Generator::TITLES &#125;</span><br><span class="line">    let(<span class="symbol">:content_array1</span>) &#123; [<span class="string">'shop_name_1'</span>, <span class="string">'river@riverye.com'</span>, <span class="string">'hello'</span>] &#125;</span><br><span class="line">    let(<span class="symbol">:content_array2</span>) &#123; [<span class="string">'shop_name_2'</span>, <span class="string">'test@riverye.com'</span>,  <span class="string">'world'</span>] &#125;</span><br><span class="line"></span><br><span class="line">    subject &#123; described_class.new.execute(excel) &#125;</span><br><span class="line"></span><br><span class="line">    context <span class="string">'create shops successfully'</span> <span class="keyword">do</span></span><br><span class="line">      it <span class="string">'data correctly'</span> <span class="keyword">do</span></span><br><span class="line">        expect &#123; subject &#125;.to change &#123; Shop.count &#125;.by(<span class="number">2</span>)</span><br><span class="line">        [content_array1, content_array2].each <span class="keyword">do</span> <span class="params">|content_array|</span></span><br><span class="line">          shop1 = Shop.find_by(<span class="symbol">name:</span> content_array[<span class="number">0</span>])</span><br><span class="line">          expect(shop1).to have_attributes(</span><br><span class="line">            <span class="symbol">name:</span> content_array[<span class="number">0</span>],</span><br><span class="line">            <span class="symbol">email:</span> content_array[<span class="number">1</span>],</span><br><span class="line">            <span class="symbol">note:</span> content_array[<span class="number">2</span>],</span><br><span class="line">          )</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    context <span class="string">'when return error'</span> <span class="keyword">do</span></span><br><span class="line">      let(<span class="symbol">:logger</span>) &#123; double &#125;</span><br><span class="line"></span><br><span class="line">      before <span class="keyword">do</span></span><br><span class="line">        allow(Rails).to receive(<span class="symbol">:logger</span>).and_return(logger)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">expect_error_message</span><span class="params">(error_message)</span></span></span><br><span class="line">        expect(logger).to receive(<span class="symbol">:error</span>).with(<span class="regexp">/\[ShopsExcel::Parser Error\] <span class="subst">#&#123;error_message&#125;</span>/</span>)</span><br><span class="line">        expect &#123; subject &#125;.to change &#123; Shop.count &#125;.by(<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when title is empty'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:excel_titles</span>) &#123; [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'輸入資料有誤，比對 Excel 標頭與預期不同'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when data is empty'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:content_array1</span>) &#123; [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; content_array1 &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'無資料'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when data is duplicate'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; content_array1 &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'有重複的商家名稱，請檢查'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when shop exists'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:shop</span>) &#123; create(<span class="symbol">:shop</span>) &#125;</span><br><span class="line">        let(<span class="symbol">:content_array1</span>) &#123; [shop.name, shop.email, shop.note] &#125;</span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; [<span class="string">'shop_name_2'</span>, <span class="string">'test@riverye.com'</span>, <span class="string">'world'</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">"有 1 筆已建立過: <span class="subst">#&#123;shop.name&#125;</span>"</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>這篇其實是與<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">上篇</a>一起先寫好 code ，接著才開始寫文章，在寫測試過程中，有發現原本寫的方法要微調，這也是撰寫測試的好處，能發現一些沒留意到的眉眉角角 <s>(說這麼多，就是擠牙膏嘛)</s></p><p>若有更好的寫法，歡迎留言和我說~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/roo-rb/roo" target="_blank" rel="noopener">Roo GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272599" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272599</a><br>medium 文章連結：<a href="https://link.medium.com/sYWyCHbyRjb" target="_blank" rel="noopener">https://link.medium.com/sYWyCHbyRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;繼&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10272591&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上篇&lt;/a&gt;匯入 Excel 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day18 - 匯入 excel-應用篇</title>
    <link href="https://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/"/>
    <id>https://riverye.com/2021/10/01/Day18-匯入-excel-應用篇/</id>
    <published>2021-09-30T16:00:00.000Z</published>
    <updated>2021-09-26T09:37:14.886Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>使用者除了有匯出報表的需求外，也會有需要大量匯入的情境，匯入會更需要驗證輸入的資料，有可能是空的資料、跟預期輸入 Excel 完全不同、重複的資料 (需看情境是否接受重複的資料)、部分資料輸入錯誤...等</p><h2><span id="實作">實作</span></h2><p>這邊會需要使用到 <a href="https://rubygems.org/gems/roo" target="_blank" rel="noopener">roo</a> 和 <a href="https://rubygems.org/gems/roo-xls" target="_blank" rel="noopener">roo-xls</a> 這 2 個 Gem ，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/8" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'roo'</span>, <span class="string">'~&gt; 2.8'</span>, <span class="string">'&gt;= 2.8.3'</span></span><br><span class="line">gem <span class="string">'roo-xls'</span>, <span class="string">'~&gt; 1.2'</span></span><br></pre></td></tr></table></figure></p><p>以下範例有做簡單的驗證，像是判斷輸入的 Excel 標題列是否一樣、是否有資料、是否有重複的資料、是否與 DB 資料重複</p><p>大量匯入時，可改用 <code>activerecord-import</code> 處理，可參考這篇<a href="https://ithelp.ithome.com.tw/articles/10264572" target="_blank" rel="noopener">文章</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/parser.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ShopsExcel</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">ParseError</span> &lt; StandardError;</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Parser</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(file_path)</span></span></span><br><span class="line">      list = read_excel(file_path)</span><br><span class="line">      sheet = list.sheet(<span class="number">0</span>)</span><br><span class="line">      validate_title_names!(sheet)</span><br><span class="line">      validate_shop_names!(sheet)</span><br><span class="line">      process_shops(sheet)</span><br><span class="line">    <span class="keyword">rescue</span> ParseError =&gt; e</span><br><span class="line">      subject = <span class="string">"[<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span> Error] <span class="subst">#&#123;e.message&#125;</span>, \nbacktrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">      Rails.logger.error subject</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_excel</span><span class="params">(file_path)</span></span></span><br><span class="line">      Roo::Spreadsheet.open(file_path)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_title_names!</span><span class="params">(sheet)</span></span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> sheet.row(<span class="number">1</span>) == ShopsExcel::Generator::TITLES</span><br><span class="line"></span><br><span class="line">      raise ParseError, <span class="string">'輸入資料有誤，比對 Excel 標頭與預期不同'</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_shop_names!</span><span class="params">(sheet)</span></span></span><br><span class="line">      all_shop_names = sheet.column(<span class="number">1</span>)[<span class="number">1</span>..-<span class="number">1</span>]</span><br><span class="line">      raise ParseError, <span class="string">'無資料'</span> <span class="keyword">if</span> all_shop_names.blank?</span><br><span class="line">      raise ParseError, <span class="string">'有重複的商家名稱，請檢查'</span> <span class="keyword">if</span> all_shop_names.uniq.size != all_shop_names.size</span><br><span class="line"></span><br><span class="line">      existed_shop_names = Shop.where(<span class="symbol">name:</span> all_shop_names).pluck(<span class="symbol">:name</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> existed_shop_names.blank?</span><br><span class="line"></span><br><span class="line">      raise ParseError, <span class="string">"有 <span class="subst">#&#123;existed_shop_names.size&#125;</span> 筆已建立過: <span class="subst">#&#123;existed_shop_names.join(<span class="string">', '</span>)&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_shops</span><span class="params">(sheet)</span></span></span><br><span class="line">      shops = []</span><br><span class="line">      (<span class="number">2</span>..sheet.last_row).each <span class="keyword">do</span> <span class="params">|index|</span></span><br><span class="line">        col_values = sheet_row(sheet, index)</span><br><span class="line">        shop = Shop.new(col_values)</span><br><span class="line">        shops &lt;&lt; shop</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      Shop.import(shops)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sheet_row</span><span class="params">(sheet, index)</span></span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="symbol">name:</span> sheet.row(index)[<span class="number">0</span>],  <span class="comment"># 商家名稱</span></span><br><span class="line">        <span class="symbol">email:</span> sheet.row(index)[<span class="number">1</span>], <span class="comment"># 信箱</span></span><br><span class="line">        <span class="symbol">note:</span> sheet.row(index)[<span class="number">2</span>],  <span class="comment"># 備註</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>在 <code>rails console</code> 輸入以下</p><p><a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/%E5%95%86%E5%AE%B6%E7%B8%BD%E8%A1%A8.xlsx" target="_blank" rel="noopener">範例的 Excel 檔</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">file = Rails.root.join(<span class="string">"data/商家總表.xlsx"</span>).to_s</span><br><span class="line">ShopsExcel::Parser.new.execute(file)</span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>匯入要做的基本驗證蠻多的，需考量各種情境，並盡可能地去預防處理，和匯出一樣，建議都是放 sidekiq 處理，完成後再寄信給使用者，告知匯入結果</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/roo-rb/roo" target="_blank" rel="noopener">Roo GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272591</a><br>medium 文章連結：<a href="https://link.medium.com/Teq2MzayRjb" target="_blank" rel="noopener">https://link.medium.com/Teq2MzayRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;使用者除了有匯出報表的需求外，也會有需要大量匯入的情境，匯入會更需要驗證輸入的資料，有可能是空的資料、跟預期輸入 Excel 完全不同、重複的資料 (需看情境是否接受重複的資料)、部分資料輸入錯誤...等&lt;/
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day17 - 匯出 excel-測試篇</title>
    <link href="https://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/"/>
    <id>https://riverye.com/2021/09/30/Day17-匯出-excel-測試篇/</id>
    <published>2021-09-29T16:00:00.000Z</published>
    <updated>2021-09-26T05:37:18.497Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p><a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">上篇</a>題到如何製作產 Excel 檔，這篇以撰寫測試為主</p><h2><span id="說明">說明</span></h2><p>延續<a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">上篇</a>完成的補寫測試，這邊還有額外安裝 <code>factory_bot_rails</code> <a href="https://rubygems.org/gems/factory_bot_rails" target="_blank" rel="noopener">Gem</a> 使用，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/7" target="_blank" rel="noopener">pr</a></p><h2><span id="實作">實作</span></h2><p>主要測試內容為: 工作列表名稱 (worksheet)、Excel 標題列、內容，確認資料正確性</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/generator_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe ShopsExcel::Generator <span class="keyword">do</span></span><br><span class="line">  subject &#123; described_class.new.execute &#125;</span><br><span class="line"></span><br><span class="line">  before <span class="keyword">do</span></span><br><span class="line">    @shop = create(<span class="symbol">:shop</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  it <span class="string">'generate rows correctly'</span> <span class="keyword">do</span></span><br><span class="line">    xlsx = subject</span><br><span class="line">    first_sheet = xlsx.workbook.worksheets[<span class="number">0</span>]</span><br><span class="line">    expect(first_sheet.name).to eq(<span class="string">'商家清單'</span>)</span><br><span class="line">    expect(first_sheet.rows[<span class="number">0</span>].cells.map(&amp;<span class="symbol">:value</span>)).to match_array(</span><br><span class="line">      <span class="string">%w[商家名稱 信箱 備註]</span></span><br><span class="line">    )</span><br><span class="line">    expect(first_sheet.rows[<span class="number">1</span>].cells.map(&amp;<span class="symbol">:value</span>)).to match_array(</span><br><span class="line">      [@shop.name, @shop.email, @shop.note]</span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>一開始不熟悉時，會做比較慢，蠻正常的，因為沒做過所以也沒頭緒，多做幾次後，就會逐漸上手，慢慢的就能變成先寫完測試，再開始實作內容了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/thoughtbot/factory_bot_rails" target="_blank" rel="noopener">factory_bot_rails GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272496" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272496</a><br>medium 文章連結：<a href="https://link.medium.com/H7KaCZbhRjb" target="_blank" rel="noopener">https://link.medium.com/H7KaCZbhRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10272151&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上篇&lt;/a&gt;題到如何製作產 Ex
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day16 - 匯出 excel-應用篇</title>
    <link href="https://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/"/>
    <id>https://riverye.com/2021/09/29/Day16-匯出-excel-應用篇/</id>
    <published>2021-09-28T16:00:00.000Z</published>
    <updated>2021-09-25T15:00:35.135Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>不論是產各式報表，都與 Excel 脫離不了關係，產 Excel 屬於必備技能之一，以下示範如何產 Excel 檔</p><h2><span id="實作">實作</span></h2><p>這邊以 <a href="https://rubygems.org/gems/axlsx" target="_blank" rel="noopener">axlsx</a> Gem 做範例，也有其他 Gem 也能做到，像是 <a href="https://rubygems.org/gems/xlsxtream" target="_blank" rel="noopener">xlsxtream</a> 等，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/6" target="_blank" rel="noopener">pr</a></p><p>直接用 <a href="https://rubygems.org/gems/axlsx" target="_blank" rel="noopener">axlsx</a> 最新版本直接 bundle 的話，會踩到雷，詳情，自己裝看看就知道了 XD</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'rubyzip'</span>, <span class="string">'~&gt; 2.3'</span>, <span class="string">'&gt;= 2.3.2'</span></span><br><span class="line">gem <span class="string">'axlsx_rails'</span>, <span class="string">'~&gt; 0.6.1'</span></span><br><span class="line">gem <span class="string">'axlsx'</span>, <span class="symbol">git:</span> <span class="string">"https://github.com/randym/axlsx.git"</span>,</span><br><span class="line">             <span class="symbol">ref:</span> <span class="string">"c8ac844572b25fda358cc01d2104720c4c42f450"</span></span><br></pre></td></tr></table></figure></p><p>將產 Excel 寫在 services，方便之後共用</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/generator.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ShopsExcel</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span></span><br><span class="line">    TITLES = <span class="string">%w[商家名稱 信箱 備註]</span>.freeze</span><br><span class="line">    ROW_TYPES = %i[string string string].freeze</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      shops = Shop.all</span><br><span class="line">      xlsx = Axlsx::Package.new</span><br><span class="line">      workbook = xlsx.workbook</span><br><span class="line">      workbook.add_worksheet(<span class="symbol">name:</span> <span class="string">'商家清單'</span>) <span class="keyword">do</span> <span class="params">|sheet|</span></span><br><span class="line">        sheet.add_row(TITLES)</span><br><span class="line">        shops.find_each <span class="keyword">do</span> <span class="params">|shop|</span></span><br><span class="line">          sheet.add_row(shop_row_data(shop), <span class="symbol">types:</span> ROW_TYPES)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      xlsx</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shop_row_data</span><span class="params">(shop)</span></span></span><br><span class="line">      [</span><br><span class="line">        shop.name,</span><br><span class="line">        shop.email,</span><br><span class="line">        shop.note</span><br><span class="line">      ]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/routes.rb</span></span><br><span class="line"></span><br><span class="line">get <span class="symbol">:export_shops_xlsx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># app/controllers/shops_controller.rb</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">export_shops_xlsx</span></span></span><br><span class="line">  <span class="comment"># 實務上，並不建議直接在 controller 直接產 Excel，若資料很多的話，使用者體驗會不好 (會等很久)</span></span><br><span class="line">  xlsx = ShopsExcel::Generator.new.execute</span><br><span class="line"></span><br><span class="line">  send_data(xlsx.to_stream.read, <span class="symbol">type:</span> <span class="string">'application/xlsx'</span>, <span class="symbol">filename:</span> <span class="string">'商家總表.xlsx'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>若只是單純產一次就不會再產的話，可以在 <code>rails console</code> 直接下 code，如下</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">xlsx = ShopsExcel::Generator.new.execute</span><br><span class="line">xlsx.use_shared_strings = <span class="literal">true</span></span><br><span class="line">xlsx_file = Rails.root.join(<span class="string">"data/test.xlsx"</span>)</span><br><span class="line">xlsx.serialize(xlsx_file)</span><br></pre></td></tr></table></figure></p><h3><span id="從網頁下載">從網頁下載</span></h3><p><img src="https://i.imgur.com/5hX8wyY.png" alt></p><h3><span id="產的-excel-內容">產的 Excel 內容</span></h3><p><img src="https://i.imgur.com/Y3Wu9vj.png" alt></p><h2><span id="小結">小結</span></h2><p>產 Excel 其實不難，難的是產的資料內容過於複雜且多時，可能會關聯超多 Model 、多個工作表 (worksheet)，還要考量是否會 Memory Bloat</p><p>實務上並不建議直接在 controller 直接產 Excel ，資料太多的話，使用者體驗會不好，會等很久，通常會放 sidekiq 處理，完成後，再寄信給使用者</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/randym/axlsx" target="_blank" rel="noopener">Axlsx GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272151</a><br>medium 文章連結：<a href="https://link.medium.com/GmNaDhwgQjb" target="_blank" rel="noopener">https://link.medium.com/GmNaDhwgQjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;不論是產各式報表，都與 Excel 脫離不了關係，產 Excel 屬於必備技能之一，以下示範如何產 Excel 檔&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;實作&quot;&gt;實作&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這邊以 &lt;a
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day15 - 匯出(下載) PDF</title>
    <link href="https://riverye.com/2021/09/28/Day15-%E5%8C%AF%E5%87%BA-%E4%B8%8B%E8%BC%89-PDF/"/>
    <id>https://riverye.com/2021/09/28/Day15-匯出-下載-PDF/</id>
    <published>2021-09-27T16:00:00.000Z</published>
    <updated>2021-09-25T10:08:58.920Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>使用者在操作頁面或輸入網址後，要下載檔案(不局限於 PDF 檔案)，可以使用 Ruby on Rails 內建的 <code>send_file</code> 來處理</p><h2><span id="實作">實作</span></h2><p>下載的檔案不局限於 PDF 檔，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/5" target="_blank" rel="noopener">pr</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/routes.rb</span></span><br><span class="line"></span><br><span class="line">resources <span class="symbol">:shops</span> <span class="keyword">do</span></span><br><span class="line">  collection <span class="keyword">do</span></span><br><span class="line">    get <span class="symbol">:download_pdf</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># app/controllers/shops_controller.rb</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_pdf</span></span></span><br><span class="line">  pdf_path = Rails.root.join(<span class="string">'data/river_demo_pdf.pdf'</span>)</span><br><span class="line"></span><br><span class="line">  send_file pdf_path</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># spec/requests/shops_spec.rb</span></span><br><span class="line"></span><br><span class="line">describe <span class="string">"GET /download_pdf"</span> <span class="keyword">do</span></span><br><span class="line">  subject &#123; get download_pdf_shops_path, <span class="symbol">params:</span> &#123; <span class="symbol">format:</span> <span class="symbol">:text</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line">  it <span class="string">"send correct file"</span> <span class="keyword">do</span></span><br><span class="line">    allow_any_instance_of(ShopsController).to receive(<span class="symbol">:send_file</span>).with(Rails.root.join(<span class="string">'data/river_demo_pdf.pdf'</span>))</span><br><span class="line">    subject</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h3><span id="實際畫面">實際畫面</span></h3><p><img src="https://i.imgur.com/1ftFejA.png" alt></p><h2><span id="小結">小結</span></h2><p>一開始不知道時，會想說該如何實作，才能讓使用者可以下載檔案，後來發現 Ruby on Rails 已經幫我們做了許多事情，讓我們在實作上，可以簡單幾行便實現該功能，真的非常快速又方便~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://apidock.com/rails/ActionController/DataStreaming/send_file" target="_blank" rel="noopener">apidock#send_file</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10271932" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10271932</a><br>medium 文章連結：<a href="https://link.medium.com/91hPYYFVPjb" target="_blank" rel="noopener">https://link.medium.com/91hPYYFVPjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/28/Day15-%E5%8C%AF%E5%87%BA-%E4%B8%8B%E8%BC%89-PDF/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;使用者在操作頁面或輸入網址後，要下載檔案(不局限於 PDF 檔案)，可以使用 Ruby on Rails 內建的 &lt;code&gt;send_file&lt;/code&gt; 來處理&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;實作
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day14 - PDF 加浮水印</title>
    <link href="https://riverye.com/2021/09/27/Day14-PDF-%E5%8A%A0%E6%B5%AE%E6%B0%B4%E5%8D%B0/"/>
    <id>https://riverye.com/2021/09/27/Day14-PDF-加浮水印/</id>
    <published>2021-09-26T16:00:00.000Z</published>
    <updated>2021-09-25T10:08:51.034Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>工作上在處理 API 取得的 PDF 後，要在上面增加浮水印，進而研究與紀錄的處理方式</p><h2><span id="實作">實作</span></h2><p>會需要用到 <a href="https://rubygems.org/gems/combine_pdf" target="_blank" rel="noopener">combine_pdf</a> 和 <a href="https://rubygems.org/gems/prawn" target="_blank" rel="noopener">prawn</a> 這兩個 Gem 處理</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'combine_pdf'</span>, <span class="string">'~&gt; 1.0'</span>, <span class="string">'&gt;= 1.0.21'</span></span><br><span class="line">gem <span class="string">'prawn'</span>, <span class="string">'~&gt; 2.4'</span></span><br></pre></td></tr></table></figure></p><p>將增加浮水寫成一個方法，範例的 <a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/river_demo_watermark.pdf" target="_blank" rel="noopener">PDF</a> ，和實作的 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/4" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/pdf/add_watermark_pdf.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Pdf</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">AddWatermarkPdf</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># input_file = Rails.root.join('data/river_demo_watermark.pdf')</span></span><br><span class="line">    <span class="comment"># output_file = input_file.dirname.join('done.pdf')</span></span><br><span class="line">    <span class="comment"># watermark_texts = %w[river_1 river_2 river_3]</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(input_file, output_file, watermark_texts = [])</span></span></span><br><span class="line">      tmp_watermark_file(input_file)              <span class="comment"># 暫存的浮水印 PDF path</span></span><br><span class="line">      generate_watermark_content(watermark_texts) <span class="comment"># 產浮水印的 PDF</span></span><br><span class="line">      combine_pdf(input_file, output_file)        <span class="comment"># 將 input_file 與浮水印 PDF 合併</span></span><br><span class="line">      FileUtils.rm_rf(@tmp_watermark_file)        <span class="comment"># 移除暫存的浮水印 PDF</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tmp_watermark_file</span><span class="params">(input_file)</span></span></span><br><span class="line">      @tmp_watermark_file <span class="params">||</span>= input_file.dirname.join(<span class="string">'tmp_watermark.pdf'</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可自行設定字型大小、顏色等</span></span><br><span class="line">    <span class="comment"># Prawn Documentation: https://prawnpdf.org/api-docs</span></span><br><span class="line">    <span class="comment"># Prawn example: https://prawnpdf.org/manual.pdf</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate_watermark_content</span><span class="params">(watermark_texts)</span></span></span><br><span class="line">      position, amount_per_page = watermark_args</span><br><span class="line">      Prawn::Document.generate(@tmp_watermark_file) <span class="keyword">do</span></span><br><span class="line">        watermark_texts.each_with_index <span class="keyword">do</span> <span class="params">|watermark_text, index|</span></span><br><span class="line">          page = index / amount_per_page + <span class="number">1</span></span><br><span class="line">          coordinate = position[index % amount_per_page]</span><br><span class="line">          start_new_page <span class="keyword">if</span> page != <span class="number">1</span> &amp;&amp; (index % amount_per_page).zero?</span><br><span class="line">          go_to_page(page)</span><br><span class="line">          float <span class="keyword">do</span></span><br><span class="line">            bounding_box(coordinate, <span class="symbol">height:</span> <span class="number">14</span>, <span class="symbol">width:</span> <span class="number">48</span>) <span class="keyword">do</span></span><br><span class="line">              fill_color <span class="string">'000000'</span></span><br><span class="line">              fill_rectangle [<span class="number">0</span>, bounds.height], bounds.width, bounds.height</span><br><span class="line">              stroke_bounds</span><br><span class="line">              fill_color <span class="string">'FFFFFF'</span></span><br><span class="line">              text watermark_text.to_s, <span class="symbol">align:</span> <span class="symbol">:center</span>, <span class="symbol">valign:</span> <span class="symbol">:center</span>, <span class="symbol">size:</span> <span class="number">12</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 浮水印在頁面上的位置、每頁的數量</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watermark_args</span></span></span><br><span class="line">      position = [[<span class="number">0</span>, <span class="number">769</span>], [<span class="number">0</span>, <span class="number">392</span>]] <span class="comment"># xy 軸座標 (需自行計算適合的位置)</span></span><br><span class="line">      amount_per_page = <span class="number">2</span>             <span class="comment"># 每頁的浮水印數量</span></span><br><span class="line"></span><br><span class="line">      [position, amount_per_page]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">combine_pdf</span><span class="params">(input_file, output_file)</span></span></span><br><span class="line">      pdf_pages = CombinePDF.load(@tmp_watermark_file).pages</span><br><span class="line">      pdf = CombinePDF.load(input_file)</span><br><span class="line">      pdf.pages.each_with_index &#123; <span class="params">|page, index|</span> page &lt;&lt; pdf_pages[index] &#125;</span><br><span class="line">      pdf.save(output_file)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>完成上述步驟後，接著在 <code>rails console</code> 輸入以下，便大功告成</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">input_file = Rails.root.join(<span class="string">'data/river_demo_watermark.pdf'</span>)</span><br><span class="line">output_file = input_file.dirname.join(<span class="string">'done.pdf'</span>)</span><br><span class="line">watermark_texts = <span class="string">%w[river_1 river_2 river_3]</span></span><br><span class="line">Pdf::AddWatermarkPdf.new.execute(input_file, output_file, watermark_texts)</span><br></pre></td></tr></table></figure></p><h3><span id="示範的-pdf">示範的 PDF</span></h3><p><img src="https://i.imgur.com/9S6hPc1.png" alt></p><h3><span id="加上浮水印後">加上浮水印後</span></h3><p><img src="https://i.imgur.com/PcWDrRl.png" alt></p><h2><span id="小結">小結</span></h2><p>上面的範例為一頁有多處需要加浮水印，且每個位置的浮水印內容皆不一樣，因此在處理上會略為複雜些，若每頁只需加一處且浮水印內容一樣，處理上會簡單一點</p><p>目前想到在 PDF 上加浮水印的做法是，將來源的 PDF、浮水印的 PDF 合併，合併後再把暫存浮水印 PDF 刪除，若有更好的做法，歡迎留言和我說</p><p>至於如何知道浮水印的位置，「trial and error」會是一個好方法 xD</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/boazsegev/combine_pdf" target="_blank" rel="noopener">combine_pdf GitHub</a></li><li><a href="https://github.com/prawnpdf/prawn" target="_blank" rel="noopener">Prawn GitHub</a></li><li><a href="https://prawnpdf.org/manual.pdf" target="_blank" rel="noopener">Prawn example</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10271878" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10271878</a><br>medium 文章連結：<a href="https://link.medium.com/uqXuO7EVPjb" target="_blank" rel="noopener">https://link.medium.com/uqXuO7EVPjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/27/Day14-PDF-%E5%8A%A0%E6%B5%AE%E6%B0%B4%E5%8D%B0/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;工作上在處理 API 取得的 PDF 後，要在上面增加浮水印，進而研究與紀錄的處理方式&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;實作&quot;&gt;實作&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;會需要用到 &lt;a href=&quot;https
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day13 - PDF 加密、解密的處理</title>
    <link href="https://riverye.com/2021/09/26/Day13-PDF-%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86%E7%9A%84%E8%99%95%E7%90%86/"/>
    <id>https://riverye.com/2021/09/26/Day13-PDF-加密、解密的處理/</id>
    <published>2021-09-25T16:00:00.000Z</published>
    <updated>2021-09-25T10:08:41.965Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在處理 PDF 增加密碼 (加密) 、移除解密 (解密) 時，可以使用 Ghostscript 處理，若不熟悉，可以先看下 <a href="https://zh.wikipedia.org/zh-tw/Ghostscript" target="_blank" rel="noopener">wiki</a> 或<a href="https://www.ghostscript.com/" target="_blank" rel="noopener">官方文件</a>的介紹</p><h2><span id="實作">實作</span></h2><p>首先需要先安裝 <code>ghostscript</code></p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for macOS</span></span><br><span class="line">brew install ghostscript</span><br></pre></td></tr></table></figure></p><p>這邊提供<a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/river_demo_pdf.pdf" target="_blank" rel="noopener">範例 PDF</a> ，和實作的 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/3" target="_blank" rel="noopener">pr</a>，參數細節設定，可以參考<a href="https://www.ghostscript.com/doc/current/Use.htm" target="_blank" rel="noopener">官方文件</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/processing_pdf.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProcessingPdf</span></span></span><br><span class="line">  <span class="comment"># ghostscript Documentation: https://www.ghostscript.com/doc/current/Use.htm</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">encryption</span><span class="params">(pwd, input_file, output_file)</span></span></span><br><span class="line">    _stdout_str, _stderr_str, _status = Open3.capture3(<span class="string">"gs -sDEVICE=pdfwrite -dBATCH -dNOPAUSE -dNOPROMPT -dQUIET \</span></span><br><span class="line"><span class="string">                                                        -sOwnerPassword=<span class="subst">#&#123;pwd&#125;</span> -sUserPassword=manan \</span></span><br><span class="line"><span class="string">                                                        -sOutputFile=<span class="subst">#&#123;output_file&#125;</span> <span class="subst">#&#123;input_file&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line">    &#123; <span class="symbol">success:</span> <span class="literal">true</span>, <span class="symbol">msg:</span> <span class="string">'PDF加密完成'</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">decrypt</span><span class="params">(pwd, input_file, output_file)</span></span></span><br><span class="line">    _stdout_str, stderr_str, _status = Open3.capture3(<span class="string">"gs -q -sDEVICE=pdfwrite -dBATCH -dNOPAUSE \</span></span><br><span class="line"><span class="string">                                                       -SPDFPassword=<span class="subst">#&#123;pwd&#125;</span> -sOutputFile=<span class="subst">#&#123;output_file&#125;</span> \</span></span><br><span class="line"><span class="string">                                                       -c 30000000 setvmthreshold -f <span class="subst">#&#123;input_file&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="symbol">error_msgs:</span> stderr_str.remove(<span class="string">"\n"</span>) &#125; <span class="keyword">if</span> stderr_str.present?</span><br><span class="line"></span><br><span class="line">    &#123; <span class="symbol">success:</span> <span class="literal">true</span>, <span class="symbol">msg:</span> <span class="string">'PDF解密完成'</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>將加密、解密寫在 services，方便之後使用，以下為實際測試加解密 PDF</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">source_pdf = Rails.root.join(<span class="string">"data/river_demo_pdf.pdf"</span>)</span><br><span class="line">encryption_pdf = Rails.root.join(<span class="string">"data/set_password_river_demo_pdf.pdf"</span>)</span><br><span class="line">password = <span class="string">"river_test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密 PDF</span></span><br><span class="line">encryption_result = ProcessingPdf.encryption(password, source_pdf, encryption_pdf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密 PDF</span></span><br><span class="line">input_pdf = encryption_pdf</span><br><span class="line">output_pdf = Rails.root.join(<span class="string">"data/decrypt_river_demo_pdf.pdf"</span>)</span><br><span class="line">decrypt_result = ProcessingPdf.decrypt(password, input_pdf, output_pdf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 處理解密時，若遇到輸入密碼錯誤，要在自行處理</span></span><br></pre></td></tr></table></figure></p><h3><span id="示範的-pdf">示範的 PDF</span></h3><p><img src="https://i.imgur.com/gTSXilY.png" alt></p><h3><span id="加密後的-pdf-開啟時會要求輸入密碼">加密後的 PDF (開啟時，會要求輸入密碼)</span></h3><p><img src="https://i.imgur.com/l5nKb5a.png" alt></p><h2><span id="小結">小結</span></h2><p>之前不知道 Ghostscript 前，會找各種 Gems 看是否有好用的解決方案，後來得知這套知名的老牌軟體後，支援的平台挺廣泛的，直接用這套就能搞定了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://www.ghostscript.com/" target="_blank" rel="noopener">Ghostscript 官網</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10271819" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10271819</a><br>medium 文章連結：<a href="https://link.medium.com/JoYN5HDVPjb" target="_blank" rel="noopener">https://link.medium.com/JoYN5HDVPjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/26/Day13-PDF-%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86%E7%9A%84%E8%99%95%E7%90%86/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在處理 PDF 增加密碼 (加密) 、移除解密 (解密) 時，可以使用 Ghostscript 處理，若不熟悉，可以先看下 &lt;a href=&quot;https://zh.wikipedia.org/zh-tw/Gh
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day12 - 解析圖片中的 QR Code 資料</title>
    <link href="https://riverye.com/2021/09/25/Day12-%E8%A7%A3%E6%9E%90%E5%9C%96%E7%89%87%E4%B8%AD%E7%9A%84-QR-Code-%E8%B3%87%E6%96%99/"/>
    <id>https://riverye.com/2021/09/25/Day12-解析圖片中的-QR-Code-資料/</id>
    <published>2021-09-24T16:00:00.000Z</published>
    <updated>2021-09-24T16:07:08.583Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>前篇講解如何產二維條碼 QR Code，這篇則是示範如何解析(解碼) QR Code，類似工具有 <a href="https://github.com/ZBar/ZBar" target="_blank" rel="noopener">ZBar</a>、<a href="https://github.com/zxing/zxing" target="_blank" rel="noopener">ZXing</a>..等，本篇以 ZBar 做示範</p><h2><span id="說明">說明</span></h2><p>情境說明，打 API 取回的圖片、PDF 中，有包含 QR Code，需要解析 QR Code 的訊息內容 (這邊不示範如何截圖指定位置，可用 <a href="https://github.com/rmagick/rmagick" target="_blank" rel="noopener">RMagick</a> 處理)</p><h2><span id="實作">實作</span></h2><p>需要安裝 <code>zbar</code>，也可以用 <a href="https://rubygems.org/gems/zbar" target="_blank" rel="noopener">zbar Gem</a>，這邊以 Homebrew 安裝為例</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for macOS</span></span><br><span class="line">brew install zbar</span><br></pre></td></tr></table></figure></p><p>先產一個 QR Code 的圖片檔，接著再用 <code>zbar</code> 來解析(編碼)</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 產一個 qr_code.png</span></span><br><span class="line">qrcode = RQRCode::QRCode.new(<span class="string">"https://riverye.com/"</span>)</span><br><span class="line">png = qrcode.as_png(<span class="symbol">size:</span> <span class="number">300</span>, <span class="symbol">border_modules:</span> <span class="number">2</span>, <span class="symbol">module_px_size:</span> <span class="number">2</span>)</span><br><span class="line">qrcode_path = Rails.root.join(<span class="string">"qrcode.png"</span>)</span><br><span class="line">IO.binwrite(qrcode_path, png.to_s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解碼 qrcode.png</span></span><br><span class="line">qrcode_path = Rails.root.join(<span class="string">"qrcode.png"</span>)</span><br><span class="line">decoded_qrcode = <span class="string">`zbarimg <span class="subst">#&#123;qrcode_path&#125;</span>`</span>                    <span class="comment"># "QR-Code:https://riverye.com/\n"</span></span><br><span class="line">result = decoded_qrcode.gsub(<span class="string">"QR-Code:"</span>, <span class="string">""</span>).gsub(<span class="string">"/\n"</span>, <span class="string">""</span>) <span class="comment"># "https://riverye.com"</span></span><br></pre></td></tr></table></figure></p><h2><span id="範例-qr-code">範例 QR Code</span></h2><p><img src="https://i.imgur.com/IW55kwR.png" alt></p><h2><span id="操作範例">操作範例</span></h2><p><img src="https://i.imgur.com/aQimKjK.png" alt></p><h2><span id="小結">小結</span></h2><p>最初是使用 <a href="https://rubygems.org/gems/zxing_cpp" target="_blank" rel="noopener">zxing_cpp Gem</a> 處理，也能解決問題，但總下載次數與熱門 Gem 動輒數百萬、數千萬次數相比，算是比較冷門的 Gem。</p><p>ZBar 與 ZXing 都能找到類似的 <a href="https://rubygems.org/" target="_blank" rel="noopener">Gem</a> 使用，有需要時，可以看哪個用比較上手~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/ZBar/ZBar" target="_blank" rel="noopener">ZBar GitHub</a></li><li><a href="https://github.com/zxing/zxing" target="_blank" rel="noopener">ZXing GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264602" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264602</a><br>medium 文章連結：<a href="https://link.medium.com/MDSrOdpGOjb" target="_blank" rel="noopener">https://link.medium.com/MDSrOdpGOjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/25/Day12-%E8%A7%A3%E6%9E%90%E5%9C%96%E7%89%87%E4%B8%AD%E7%9A%84-QR-Code-%E8%B3%87%E6%96%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;前篇講解如何產二維條碼 QR Code，這篇則是示範如何解析(解碼) QR Code，類似工具有 &lt;a href=&quot;https://github.com/ZBar/ZBar&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day11 - Gem-rqrcode 或 barby 產 QR Code</title>
    <link href="https://riverye.com/2021/09/24/Day11-Gem-rqrcode-%E6%88%96-barby-%E7%94%A2-QR-Code/"/>
    <id>https://riverye.com/2021/09/24/Day11-Gem-rqrcode-或-barby-產-QR-Code/</id>
    <published>2021-09-23T16:00:00.000Z</published>
    <updated>2021-09-23T16:32:03.399Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>本篇會示範如何在 Ruby on Rails 中產 QR Code，可透過 <a href="https://github.com/whomwah/rqrcode" target="_blank" rel="noopener">rqrcode</a> 或 <a href="https://github.com/toretore/barby" target="_blank" rel="noopener">barby</a> 來實現</p><h2><span id="說明">說明</span></h2><p>以下範例為在 erb 檔中產 svg 格式的 QR code</p><h2><span id="實作-rqrcode">實作 rqrcode</span></h2><p>在 Gemfile 中加入 <a href="https://rubygems.org/gems/rqrcode" target="_blank" rel="noopener">rqrcode</a> ，範例可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/2/commits/1d4387ab6d98dd6fa8e0651601624fd3a1cd9123" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qrcode = RQRCode::QRCode.new(<span class="string">"https://riverye.com/"</span>)</span><br><span class="line">qrcode.as_svg(<span class="symbol">color:</span> <span class="symbol">:black</span>, <span class="symbol">offset:</span> <span class="number">15</span>, <span class="symbol">shape_rendering:</span> <span class="string">"optimizeSpeed"</span>, <span class="symbol">module_size:</span> <span class="number">10</span>).html_safe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更多參數設定，請參考官方文件</span></span><br></pre></td></tr></table></figure></p><h2><span id="實作-barby">實作 barby</span></h2><p>在 Gemfile 中加入 <a href="https://rubygems.org/gems/barby" target="_blank" rel="noopener">barby</a> ，範例可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/2/commits/bb194544e772350747cb8db90a8ae2a804b87875" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">"barby/barcode/qr_code"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"barby/outputter/svg_outputter"</span></span><br><span class="line"></span><br><span class="line">Barby::QrCode.new(<span class="string">"https://riverye.com/"</span>).to_svg(<span class="symbol">xdim:</span> <span class="number">12</span>).html_safe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更多參數設定，請參考官方文件</span></span><br></pre></td></tr></table></figure></p><h2><span id="呈現效果如下">呈現效果如下</span></h2><p><img src="https://i.imgur.com/A9HwrIg.png" alt></p><h2><span id="小結">小結</span></h2><p>主要是示範如何產 QR code，若想要產一維條碼的話， <a href="https://github.com/toretore/barby" target="_blank" rel="noopener">barby</a> 也能做到，可直接看官方文件 <a href="https://github.com/toretore/barby/wiki/Outputters" target="_blank" rel="noopener">wiki</a>，這邊就不多加闡述了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/whomwah/rqrcode" target="_blank" rel="noopener">rqrcode GitHub</a></li><li><a href="https://github.com/toretore/barby" target="_blank" rel="noopener">barby GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264600" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264600</a><br>medium 文章連結：<a href="https://link.medium.com/ray451o2Mjb" target="_blank" rel="noopener">https://link.medium.com/ray451o2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/24/Day11-Gem-rqrcode-%E6%88%96-barby-%E7%94%A2-QR-Code/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;本篇會示範如何在 Ruby on Rails 中產 QR Code，可透過 &lt;a href=&quot;https://github.com/whomwah/rqrcode&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day10 - 如何用手機連 Ruby on Rails Local 開發中的專案</title>
    <link href="https://riverye.com/2021/09/23/Day10-%E5%A6%82%E4%BD%95%E7%94%A8%E6%89%8B%E6%A9%9F%E9%80%A3-Ruby-on-Rails-Local-%E9%96%8B%E7%99%BC%E4%B8%AD%E7%9A%84%E5%B0%88%E6%A1%88/"/>
    <id>https://riverye.com/2021/09/23/Day10-如何用手機連-Ruby-on-Rails-Local-開發中的專案/</id>
    <published>2021-09-22T16:00:00.000Z</published>
    <updated>2021-09-23T16:31:50.371Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在開發時，除了用 Chrome 開發者工具切成不同尺寸確認外，若想在手機上操作的話...</p><h2><span id="說明">說明</span></h2><h3><span id="1-首先電腦和手機都要在同區域網路-lan-白話意思就是連同個-wi-fi">1. 首先，電腦和手機都要在同 (白話意思就是連同個 Wi-Fi)</span></h3><h3><span id="2-電腦的-rails-server-要啟動著輸入以下">2. 電腦的 <code>rails server</code> 要啟動著，輸入以下</span></h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若想用別的 port 則把 4000 改掉</span></span><br><span class="line"></span><br><span class="line">rails s -p 4000 -b 0.0.0.0</span><br></pre></td></tr></table></figure></p><h3><span id="3-查詢電腦的區域網路的-ip-位址">3. 查詢電腦的區域網路的 IP 位址</span></h3><h4><span id="mac-查詢方式">Mac 查詢方式</span></h4><h5><span id="方法1">方法1</span></h5><p>在終端機輸入 <code>ipconfig getifaddr en0</code>，便會回傳 IP 位址</p><h5><span id="方法2">方法2</span></h5><p><img src="https://i.imgur.com/o515Uzn.png" alt></p><h4><span id="windows-查詢方式">Windows 查詢方式</span></h4><h5><span id="方法1">方法1</span></h5><p>在「命令提示字元」(cmd) 中，輸入 <code>ipconfig /all</code> ，找到「IPv4 位址」</p><p><img src="https://i.imgur.com/wphTCDU.png" alt></p><h5><span id="方法2">方法2</span></h5><p><img src="https://i.imgur.com/HIVn2P2.png" alt></p><h3><span id="4-手機輸入網址">4. 手機輸入網址</span></h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假設電腦的區域網路 IP 是 192.168.1.52</span></span><br><span class="line"></span><br><span class="line">http://192.168.1.52:4000/</span><br></pre></td></tr></table></figure></p><p>以上便大功告成，可以用手機連 Local 專案了</p><hr><p>若 routes 有設定特定 (constraints) 的 subdomain 才能連線的話，可以透過 <a href="https://nip.io/" target="_blank" rel="noopener">nip.io</a> 或 xip.io ...等 DNS services 處理，網址改輸入以下</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 無指定 subdomain</span></span><br><span class="line">http://192.168.1.52.nip.io:4000/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 subdomain</span></span><br><span class="line">http://river.192.168.1.52.nip.io:4000/</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 都是指向 192.168.1.52</span></span><br><span class="line">        192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line">    www.192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line"> mysite.192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line">foo.bar.192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line">        192.168.1.52.nip.io   resolves to   192.168.1.52</span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>在 Rails 6 以上，若遇到 Blocked host ，照著錯誤訊息提示跟著做便可解決，若都不驗證的話，直接加 <code>config.hosts.clear</code> 即可。</p><p>也可以使用 <a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok</a> 來實現同樣的目的</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/environments/development.rb</span></span><br><span class="line"></span><br><span class="line">Rails.application.configure <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># 增加特定白名單</span></span><br><span class="line">  config.hosts &lt;&lt; <span class="string">"river.192.168.1.52.nip.io"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 都不擋 </span></span><br><span class="line">  config.hosts.clear</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改完 config 的檔案，railse server 要重啟</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/wBQ8Ff1.png" alt></p><hr><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://stackoverflow.com/questions/2019884/how-to-connect-to-a-localhost-rails-site-via-mobile-device-locally" target="_blank" rel="noopener">How to connect to a localhost Rails site via mobile device locally?</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10195920" target="_blank" rel="noopener">第十七天：怎麼讓別人連到我作好的網站？</a></li><li><a href="https://ourcodeworld.com/articles/read/1510/xip-io-a-magic-domain-name-that-provides-wildcard-dns-for-any-ip-address" target="_blank" rel="noopener">XIP.IO: a magic domain name that provides wildcard DNS for any IP address</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264598" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264598</a><br>medium 文章連結：<a href="https://link.medium.com/wiiTrho2Mjb" target="_blank" rel="noopener">https://link.medium.com/wiiTrho2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/23/Day10-%E5%A6%82%E4%BD%95%E7%94%A8%E6%89%8B%E6%A9%9F%E9%80%A3-Ruby-on-Rails-Local-%E9%96%8B%E7%99%BC%E4%B8%AD%E7%9A%84%E5%B0%88%E6%A1%88/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在開發時，除了用 Chrome 開發者工具切成不同尺寸確認外，若想在手機上操作的話...&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;1-首先電腦和手
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day09 - Gem-jwt 介紹與應用</title>
    <link href="https://riverye.com/2021/09/22/Day09-Gem-jwt-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/"/>
    <id>https://riverye.com/2021/09/22/Day09-Gem-jwt-介紹與應用/</id>
    <published>2021-09-21T16:00:00.000Z</published>
    <updated>2021-09-23T16:30:54.765Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>JWT 是 <a href="https://jwt.io/" target="_blank" rel="noopener">JSON Web Token</a> 的縮寫。在寫此篇時，發現已經有許多相關文章可參考，故本篇以實作為主，若想知道更深入部分，可直接看參考資料</p><h2><span id="jwt組成">JWT組成</span></h2><p>由 <code>Header</code> 、<code>Payload</code>、 <code>Signature</code> 所組成的字串，中間以 <code>.</code> 做間隔</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 寫成一行的話，組成如下</span></span><br><span class="line">Header.Payload.Signature</span><br><span class="line"></span><br><span class="line"><span class="comment"># 實際範例如下 (中間以 . 做間隔)</span></span><br><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>組成</th><th>說明</th></tr></thead><tbody><tr><td>Header</td><td>通常由演算法簽章、 Token 類型所組成的 JSON，再做 Base64 URL 編碼</td></tr><tr><td>Payload</td><td>需傳遞的資料放這</td></tr><tr><td>Signature</td><td>Header、Payload、密鑰 (secret) 透過雜湊演算法所產生</td></tr></tbody></table><h2><span id="最終資料呈現如下方圖左是一個字串">最終資料呈現如下方圖左，是一個字串</span></h2><p><img src="https://i.imgur.com/laWFn0S.png" alt></p><h2><span id="動手做看看">動手做看看</span></h2><p><a href="https://jwt.io/" target="_blank" rel="noopener">官方 JWT</a> 首頁已有範例，這邊以 Ruby 做演練</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 irb 中操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">"json"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"base64"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"openssl"</span></span><br><span class="line"></span><br><span class="line">header = &#123; <span class="string">"alg"</span> =&gt; <span class="string">"HS256"</span>, <span class="string">"typ"</span> =&gt; <span class="string">"JWT"</span> &#125;</span><br><span class="line">header_json = header.to_json <span class="comment"># or JSON(header)</span></span><br><span class="line">encoded_header = Base64.urlsafe_encode64(header_json, <span class="symbol">padding:</span> <span class="literal">false</span>) <span class="comment"># Base64 編碼 header</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &#123; <span class="string">"sub"</span> =&gt; <span class="string">"1234567890"</span>, <span class="string">"name"</span> =&gt; <span class="string">"John Doe"</span>, <span class="string">"iat"</span> =&gt; <span class="number">1516239022</span> &#125;</span><br><span class="line">payload_json = payload.to_json <span class="comment"># or JSON(payload)</span></span><br><span class="line">encoded_payload = Base64.urlsafe_encode64(payload_json, <span class="symbol">padding:</span> <span class="literal">false</span>) <span class="comment"># Base64 編碼 payload</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">secret_key = <span class="string">"your-256-bit-secret"</span></span><br><span class="line">data = <span class="string">"<span class="subst">#&#123;encoded_header&#125;</span>.<span class="subst">#&#123;encoded_payload&#125;</span>"</span></span><br><span class="line">digest = OpenSSL::Digest::SHA256.new <span class="comment"># 使用 SHA256 演算法</span></span><br><span class="line">signature = OpenSSL::HMAC.digest(digest, secret_key, data) <span class="comment"># 透過 HMAC 演算法簽章</span></span><br><span class="line">encoded_signature = Base64.urlsafe_encode64(signature, <span class="symbol">padding:</span> <span class="literal">false</span>) <span class="comment"># Base64 編碼 signature</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">token = <span class="string">"<span class="subst">#&#123;encoded_header&#125;</span>.<span class="subst">#&#123;encoded_payload&#125;</span>.<span class="subst">#&#123;encoded_signature&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 驗證，與 JWT 首頁範例一樣</span></span><br><span class="line">token == <span class="string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"</span></span><br></pre></td></tr></table></figure></p><h2><span id="使用-rubygems">使用 RubyGems</span></h2><p>上述為手動實作，透過實作能更清楚如何運作也可直接使用 <a href="https://rubygems.org/gems/jwt" target="_blank" rel="noopener">jwt gem</a> 來處理，一切變得簡單多了，有興趣可看下 <a href="https://github.com/jwt/ruby-jwt/blob/master/lib/jwt.rb" target="_blank" rel="noopener">source code</a> 部分</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 ruby-jwt gem 實作</span></span><br><span class="line"></span><br><span class="line">hmac_secret = <span class="string">"your-256-bit-secret"</span></span><br><span class="line">payload = &#123; <span class="string">"sub"</span> =&gt; <span class="string">"1234567890"</span>, <span class="string">"name"</span> =&gt; <span class="string">"John Doe"</span>, <span class="string">"iat"</span> =&gt; <span class="number">1516239022</span> &#125;</span><br><span class="line"></span><br><span class="line">token = JWT.encode payload, hmac_secret, <span class="string">"HS256"</span></span><br><span class="line"></span><br><span class="line">decoded_token = JWT.decode token, hmac_secret, <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">"HS256"</span> &#125;</span><br><span class="line"><span class="comment"># # Array (payload + header)</span></span><br><span class="line"><span class="comment"># [</span></span><br><span class="line"><span class="comment">#   &#123;</span></span><br><span class="line"><span class="comment">#     "sub" =&gt; "1234567890",</span></span><br><span class="line"><span class="comment">#     "name" =&gt; "John Doe",</span></span><br><span class="line"><span class="comment">#     "iat" =&gt; 1516239022</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   &#123;</span></span><br><span class="line"><span class="comment">#     "alg" =&gt; "HS256"</span></span><br><span class="line"><span class="comment">#   &#125;</span></span><br><span class="line"><span class="comment"># ]</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>JWT 的特色有「JSON 通用性的關係，可跨語言使用」、「構造簡單，size 小，便於傳輸」...等</p><p>在使用 JWT 時，不建議把敏感資料放裡面，只要解碼 Base64 便能看到原本的資料</p><p>推薦下面參考資料可以都看過一輪</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></li><li><a href="https://en.wikipedia.org/wiki/JSON_Web_Token" target="_blank" rel="noopener">JSON Web Token Wiki</a></li><li><a href="https://github.com/jwt/ruby-jwt" target="_blank" rel="noopener">ruuby-jwt</a></li><li><a href="https://5xruby.tw/posts/what-is-jwt" target="_blank" rel="noopener">是誰在敲打我窗？什麼是 JWT ？</a></li><li><a href="https://dev.to/kevinluo201/jwt-27ng" target="_blank" rel="noopener">見令如見人，介紹 JWT</a></li><li><a href="https://link.medium.com/BFwUDzHKkib" target="_blank" rel="noopener">[筆記] 透過 JWT 實作驗證機制</a></li><li><a href="https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">JSON Web Token 入门教程</a></li><li><a href="https://mgleon08.github.io/blog/2018/07/16/jwt/" target="_blank" rel="noopener">JSON Web Token(JWT) 簡單介紹</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264580" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264580</a><br>medium 文章連結：<a href="https://link.medium.com/OYkJftn2Mjb" target="_blank" rel="noopener">https://link.medium.com/OYkJftn2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/22/Day09-Gem-jwt-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;JWT 是 &lt;a href=&quot;https://jwt.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JSON Web Token&lt;/a&gt; 的縮寫。在寫此篇時，發現已經有許多相關文章可
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day08 - Gem-sidekiq-grouping 允許單個 sidekiq 處理多個相似(一樣)的 jobs</title>
    <link href="https://riverye.com/2021/09/21/Day08-Gem-sidekiq-grouping-%E5%85%81%E8%A8%B1%E5%96%AE%E5%80%8B-sidekiq-%E8%99%95%E7%90%86%E5%A4%9A%E5%80%8B%E7%9B%B8%E4%BC%BC-%E4%B8%80%E6%A8%A3-%E7%9A%84-jobs/"/>
    <id>https://riverye.com/2021/09/21/Day08-Gem-sidekiq-grouping-允許單個-sidekiq-處理多個相似-一樣-的-jobs/</id>
    <published>2021-09-20T16:00:00.000Z</published>
    <updated>2021-09-23T16:27:23.571Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><blockquote><p>Allows identical sidekiq jobs to be processed with a single background call</p></blockquote><p>上述引用自 <a href="https://rubygems.org/gems/sidekiq-grouping" target="_blank" rel="noopener">sidekiq-grouping</a>，能將多個同 queue 的 worker 整合成一個處理</p><h2><span id="說明">說明</span></h2><p>直接以情境舉例，假如要打 API 更新第三方庫存數量，由於更新商品數量有加也有減，因此先 grouped 起來，整合成一個 job 處理</p><h2><span id="實作">實作</span></h2><p>在 Gemfile 中加入該 <a href="https://rubygems.org/gems/sidekiq-grouping" target="_blank" rel="noopener">sidekiq-grouping</a>，範例可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/1" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/routes.rb</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"sidekiq/grouping/web"</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># app/worker/flush_worker.rb</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlushWorker</span></span></span><br><span class="line">  <span class="keyword">include</span> Sidekiq::Worker</span><br><span class="line"></span><br><span class="line">  sidekiq_options(</span><br><span class="line">  <span class="symbol">retry:</span> <span class="literal">false</span>,</span><br><span class="line">  <span class="symbol">batch_flush_size:</span> <span class="number">5</span>,      <span class="comment"># 當 Jobs 數量超過 5 個時，將合併作業</span></span><br><span class="line">  <span class="symbol">batch_flush_interval:</span> <span class="number">30</span>, <span class="comment"># 每 30 秒合併作業一次</span></span><br><span class="line">  <span class="symbol">batch_unique:</span> <span class="literal">true</span>,       <span class="comment"># 同參數是否要 unique，無指定預設為 false</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">perform</span><span class="params">(groups = <span class="literal">nil</span>)</span></span></span><br><span class="line">    puts <span class="string">"args: <span class="subst">#&#123;groups&#125;</span>"</span></span><br><span class="line">    puts <span class="string">"execute <span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>接著在 <code>rails console</code> 輸入<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 當 batch_unique: true</span></span><br><span class="line"><span class="number">10</span>.times &#123; FlushWorker.perform_async(<span class="number">1</span>) &#125;</span><br><span class="line"><span class="comment"># args: [[1]]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 當 batch_unique: false or 沒指定</span></span><br><span class="line"><span class="number">10</span>.times &#123; FlushWorker.perform_async(<span class="number">1</span>) &#125;</span><br><span class="line"><span class="comment"># args: [[1], [1], [1], [1], [1]]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">10</span>.times &#123; <span class="params">|t|</span> FlushWorker.perform_async(t) &#125;</span><br><span class="line"><span class="comment"># args: [[0], [1], [2], [3], [4]]</span></span><br><span class="line"><span class="comment"># args: [[5], [6], [7], [8], [9]]</span></span><br></pre></td></tr></table></figure></p><h3><span id="當-batch_unique-true">當 <code>batch_unique: true</code></span></h3><p><img src="https://i.imgur.com/BnqUF82.png" alt></p><h3><span id="當-batch_unique-false-或沒寫">當 <code>batch_unique: false</code> 或沒寫</span></h3><p><img src="https://i.imgur.com/qPFkcx6.png" alt></p><h2><span id="web-ui">Web UI</span></h2><p>在 <code>routes.rb</code> 檔案中加入 <code>require &quot;sidekiq/grouping/web&quot;</code><img src="https://i.imgur.com/izBR53X.png" alt></p><h2><span id="小結">小結</span></h2><p>蠻好上手的一個 <a href="https://rubygems.org/gems/sidekiq-grouping" target="_blank" rel="noopener">Gem</a>，在 <a href="https://github.com/gzigzigzeo/sidekiq-grouping" target="_blank" rel="noopener">GitHub</a> 的範例也寫得淺顯易懂，連測試也有範例，這邊就不多加贅述</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/gzigzigzeo/sidekiq-grouping" target="_blank" rel="noopener">sidekiq-grouping GitHub</a></li><li><a href="https://hant.kaifa99.com/GitHub/article_119365" target="_blank" rel="noopener">sidekiq-grouping, 允許使用單個後台調用處理相同的sidekiq作業</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264578" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264578</a><br>medium 文章連結：<a href="https://link.medium.com/0SSdkIm2Mjb" target="_blank" rel="noopener">https://link.medium.com/0SSdkIm2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/21/Day08-Gem-sidekiq-grouping-%E5%85%81%E8%A8%B1%E5%96%AE%E5%80%8B-sidekiq-%E8%99%95%E7%90%86%E5%A4%9A%E5%80%8B%E7%9B%B8%E4%BC%BC-%E4%B8%80%E6%A8%A3-%E7%9A%84-jobs">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Allows identical sidekiq jobs to be processed with a single background call&lt;/p&gt;
&lt;/blockquot
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day07 - Gem-sidekiq-limit_fetch 限制 sidekiq queue 執行數量</title>
    <link href="https://riverye.com/2021/09/20/Day07-Gem-sidekiq-limit-fetch-%E9%99%90%E5%88%B6-sidekiq-queue-%E5%9F%B7%E8%A1%8C%E6%95%B8%E9%87%8F/"/>
    <id>https://riverye.com/2021/09/20/Day07-Gem-sidekiq-limit-fetch-限制-sidekiq-queue-執行數量/</id>
    <published>2021-09-19T16:00:00.000Z</published>
    <updated>2021-09-23T16:27:08.212Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>上篇介紹如何監控 Sidekiq，這篇介紹如何限制每個 queue 的上限，若是 <a href="https://sidekiq.org/products/enterprise.html" target="_blank" rel="noopener">Sidekiq ENTERPRISE</a> 可以左轉離開了，本身就有提供，免另外透過第三方 Gem 處理</p><h2><span id="說明">說明</span></h2><p>比方說有個 worker 負責處理影像轉檔 (可參考去年<a href="https://ithelp.ithome.com.tw/articles/10247454" target="_blank" rel="noopener">鐵人賽文章</a>)，轉檔時會吃比較多資源，擔心影響 server 其它服務，除了限制 CPU 使用量外，也要限制同時執行的數量，故可透過 <a href="https://rubygems.org/gems/sidekiq-limit_fetch" target="_blank" rel="noopener">sidekiq-limit_fetch Gem</a> 來完成</p><h2><span id="示意圖">示意圖</span></h2><p><img src="https://i.imgur.com/89IaLWc.png" alt></p><h2><span id="實作">實作</span></h2><p>從<a href="https://github.com/brainopia/sidekiq-limit_fetch" target="_blank" rel="noopener">官方文件</a>中得知，在需要使用的 worker 中加入 <code>require 'sidekiq-limit_fetch'</code>，並在 <code>sidekiq.yml</code> 檔案中增加 <code>limits</code> 即可，範例可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/commit/8da34278f07bbf8a90f3d53a3f8eb7096628b04d" target="_blank" rel="noopener">commit</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 欲使用的　worker</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'sidekiq-limit_fetch'</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># config/sidekiq.yml</span></span><br><span class="line"><span class="comment"># 若沒幫 worker queue 命名，會使用預設 default</span></span><br><span class="line">  <span class="symbol">:limits</span><span class="symbol">:</span></span><br><span class="line">    <span class="symbol">queue_name1:</span> <span class="number">5</span></span><br><span class="line">    <span class="symbol">queue_name2:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>起初是為了影像轉檔時，想到要限制 queue(佇列) 的使用上限而使用。</p><p>後續在打 API 至第三方時，遇到會連續觸發 N 個 worker (超過設定最多同時 10 個 concurrency)，同時對方又回應比較慢時 (ex: 每個都數十秒甚至更長時間才回應)，進而影響到其它服務，確認該 worker 不用即時處理時，便透過這個 Gem 來解決問題</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/brainopia/sidekiq-limit_fetch" target="_blank" rel="noopener">sidekiq-limit_fetch GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264576" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264576</a><br>medium 文章連結：<a href="https://link.medium.com/WH74csl2Mjb" target="_blank" rel="noopener">https://link.medium.com/WH74csl2Mjb</a><br>本文同步發布於 <a href="https://riverye.com/2021/09/20/Day07-Gem-sidekiq-limit-fetch-%E9%99%90%E5%88%B6-sidekiq-queue-%E5%9F%B7%E8%A1%8C%E6%95%B8%E9%87%8F/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;上篇介紹如何監控 Sidekiq，這篇介紹如何限制每個 queue 的上限，若是 &lt;a href=&quot;https://sidekiq.org/products/enterprise.html&quot; target=&quot;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day06 - 監控 Sidekiq 有無正常運作(或執行超過多久)</title>
    <link href="https://riverye.com/2021/09/19/Day06-%E7%9B%A3%E6%8E%A7-Sidekiq-%E6%9C%89%E7%84%A1%E6%AD%A3%E5%B8%B8%E9%81%8B%E4%BD%9C-%E6%88%96%E5%9F%B7%E8%A1%8C%E8%B6%85%E9%81%8E%E5%A4%9A%E4%B9%85/"/>
    <id>https://riverye.com/2021/09/19/Day06-監控-Sidekiq-有無正常運作-或執行超過多久/</id>
    <published>2021-09-18T16:00:00.000Z</published>
    <updated>2021-09-23T16:26:55.440Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>去年介紹過 <a href="https://ithelp.ithome.com.tw/articles/10246607" target="_blank" rel="noopener">Day25 - Ruby on Rails 中的 Sidekiq 的介紹與應用</a> ，這次延伸介紹如何自行寫腳本監控 Sidekiq 是否正常運作，以及監控執行超過多久的方法 <s>(絕不承認是擠牙膏策略</s></p><h2><span id="說明">說明</span></h2><p>網站上線後，若有使用像是 Sidekiq 或 Resque 等，非同步處理任務的 Gem 時，不會希望某個服務掛掉而影響使用者，這時可以自行寫腳本監控，看是否正常運作</p><h2><span id="示意圖">示意圖</span></h2><p><img src="https://i.imgur.com/IlrJEdS.png" alt></p><h2><span id="實作">實作</span></h2><p>從 <code>ps aux</code> 中可以看到是否有運作<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判斷是否有正常運作</span></span><br><span class="line"></span><br><span class="line">out = <span class="string">`ps aux`</span></span><br><span class="line">total_sidekiq_count = <span class="number">1</span></span><br><span class="line"><span class="comment"># Normal: `sidekiq 6.2.1 wms [0 of 10 busy]`</span></span><br><span class="line"><span class="comment"># Quiet:  `sidekiq 6.2.1 wms [0 of 10 busy] stopping`</span></span><br><span class="line">sidekiq_matcher = <span class="regexp">/sidekiq 6\.2\.1 ironman_13th_2021 \[\d+ of \d+ busy\]\s*$/</span></span><br><span class="line">sidekiq_cnt = out.each_line.count &#123; <span class="params">|line|</span> sidekiq_matcher.match(line) &#125;</span><br><span class="line"><span class="keyword">if</span> sidekiq_cnt != total_sidekiq_count</span><br><span class="line">  msg = <span class="string">"Sidekiq 有 <span class="subst">#&#123;sidekiq_cnt&#125;</span> 個，應該是 <span class="subst">#&#123;total_sidekiq_count&#125;</span> 個，請檢查。"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 想做的處理，ex: Slack 通知、寄信...等</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>能知道 Sidekiq 是否正常運作，相對也能判斷每個 Job 執行多久<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 執行超過 10 分鐘的 Sidekiq job 要有提醒</span></span><br><span class="line"></span><br><span class="line">current_time = Time.now.to_i</span><br><span class="line">workers = Sidekiq::Workers.new</span><br><span class="line">sidekiq_over_ten_min = <span class="number">0</span></span><br><span class="line"><span class="comment"># workers.first = [</span></span><br><span class="line"><span class="comment">#   [0] "local:41435:a7fojn24m345",</span></span><br><span class="line"><span class="comment">#   [1] "ounxdxzrw",</span></span><br><span class="line"><span class="comment">#   [2] &#123;</span></span><br><span class="line"><span class="comment">#         "queue" =&gt; "default",</span></span><br><span class="line"><span class="comment">#       "payload" =&gt; &#123;</span></span><br><span class="line"><span class="comment">#                 "class" =&gt; "xxx",</span></span><br><span class="line"><span class="comment">#                  "args" =&gt; [],</span></span><br><span class="line"><span class="comment">#                 "retry" =&gt; 0,</span></span><br><span class="line"><span class="comment">#                 "queue" =&gt; "default",</span></span><br><span class="line"><span class="comment">#                   "jid" =&gt; "46b49fg192950dda552h21a0",</span></span><br><span class="line"><span class="comment">#            "created_at" =&gt; 1600743892.457303,</span></span><br><span class="line"><span class="comment">#           "enqueued_at" =&gt; 1600743892.457865</span></span><br><span class="line"><span class="comment">#       &#125;,</span></span><br><span class="line"><span class="comment">#        "run_at" =&gt; 1600743892</span></span><br><span class="line"><span class="comment">#   &#125;</span></span><br><span class="line"><span class="comment"># ]</span></span><br><span class="line">workers.each &#123; <span class="params">|_process_id, _thread_id, work|</span> sidekiq_over_ten_min += <span class="number">1</span> <span class="keyword">if</span> current_time - work[<span class="string">"run_at"</span>] &gt; <span class="number">600</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sidekiq_over_ten_min.positive?</span><br><span class="line">  msg = <span class="string">"Sidekiq 有 <span class="subst">#&#123;sidekiq_over_ten_min&#125;</span> 個執行超過 10 分鐘，請檢查。"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 想做的處理，ex: Slack 通知、寄信...等</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>透過腳本監控，搭配 Slack 、寄信通知，當系統異常時，可以第一時間發現並處理，避免災情擴大，但如果所有人都睡著且沒留意到手機通知，結果還是一樣 (笑</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/mperham/sidekiq/wiki/API#workers" target="_blank" rel="noopener">Sidekiq GitHub Wiki</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264574" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264574</a><br>medium 文章連結：<a href="https://link.medium.com/mtoj9Ck2Mjb" target="_blank" rel="noopener">https://link.medium.com/mtoj9Ck2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/19/Day06-%E7%9B%A3%E6%8E%A7-Sidekiq-%E6%9C%89%E7%84%A1%E6%AD%A3%E5%B8%B8%E9%81%8B%E4%BD%9C-%E6%88%96%E5%9F%B7%E8%A1%8C%E8%B6%85%E9%81%8E%E5%A4%9A%E4%B9%85/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;去年介紹過 &lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10246607&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Day25 - Ru
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day05 - Gem-paranoia 軟刪除介紹與應用</title>
    <link href="https://riverye.com/2021/09/18/Day05-Gem-paranoia-%E8%BB%9F%E5%88%AA%E9%99%A4%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/"/>
    <id>https://riverye.com/2021/09/18/Day05-Gem-paranoia-軟刪除介紹與應用/</id>
    <published>2021-09-17T16:00:00.000Z</published>
    <updated>2021-09-23T16:26:33.375Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>對 ActiveReord 進行<a href="https://zh.wikipedia.org/wiki/%E9%82%8F%E8%BC%AF%E5%88%AA%E9%99%A4" target="_blank" rel="noopener">軟刪除</a> (Soft Deletion) 時，可透過自行實作 (ex: table 增加一欄，判斷是否被軟刪除)，或直接用現成的 <a href="https://rubygems.org/gems/paranoia/" target="_blank" rel="noopener">Gem</a> 來處理</p><h2><span id="如何安裝">如何安裝</span></h2><p>在 Gemfile 中加入該 <a href="https://github.com/rubysherpas/paranoia" target="_blank" rel="noopener">paranoia</a> <a href="https://rubygems.org/gems/paranoia/" target="_blank" rel="noopener">Gem</a></p><p>需要增加軟刪除的 table 要加 <code>deleted_at:datetime</code>，並在該 model 中加入 <code>acts_as_paranoid</code> 即，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/commit/0e731afc480828b521167299d4d4300e5809e803" target="_blank" rel="noopener">commit</a></p><p>推薦至 <a href="https://github.com/rubysherpas/paranoia" target="_blank" rel="noopener">GitHub</a> 看文件，寫得很清楚，且有提供範例</p><h2><span id="如何使用">如何使用</span></h2><p>在 <code>rails console --sandbox</code> 中演練示範</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$ rails c -s</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; Shop.count</span><br><span class="line">  TRANSACTION (<span class="number">1.1</span>ms)  <span class="keyword">BEGIN</span></span><br><span class="line">   (<span class="number">16.6</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL</span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="number">2</span>] pry(main)&gt; Shop.create(<span class="symbol">name:</span> <span class="string">'riverye'</span>, <span class="symbol">email:</span> <span class="string">'river@riverye.com'</span>);</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Exists? (<span class="number">0</span>.<span class="number">7</span>ms)  SELECT <span class="number">1</span> AS one FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"name"</span> = $1 AND <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL LIMIT $2  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  Shop Create (<span class="number">1.8</span>ms)  INSERT INTO <span class="string">"shops"</span> (<span class="string">"name"</span>, <span class="string">"email"</span>, <span class="string">"created_at"</span>, <span class="string">"updated_at"</span>) VALUES ($1, $2, $3, $4) RETURNING <span class="string">"id"</span>  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"email"</span>, <span class="string">"river@riverye.com"</span>], [<span class="string">"created_at"</span>, <span class="string">"2021-07-18 06:07:26.190110"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:07:26.190110"</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">2</span>ms)  RELEASE SAVEPOINT active_record_1</span><br><span class="line">[<span class="number">3</span>] pry(main)&gt; Shop.count</span><br><span class="line">   (<span class="number">0</span>.<span class="number">6</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL</span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="number">4</span>] pry(main)&gt; Shop.first.destroy</span><br><span class="line">  Shop Load (<span class="number">0</span>.<span class="number">5</span>ms)  SELECT <span class="string">"shops"</span>.* FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL ORDER BY <span class="string">"shops"</span>.<span class="string">"id"</span> ASC LIMIT $1  [[<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Update (<span class="number">0</span>.<span class="number">7</span>ms)  UPDATE <span class="string">"shops"</span> SET <span class="string">"deleted_at"</span> = $1, <span class="string">"updated_at"</span> = $2 WHERE <span class="string">"shops"</span>.<span class="string">"id"</span> = $3  [[<span class="string">"deleted_at"</span>, <span class="string">"2021-07-18 06:07:43.934539"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:07:43.934564"</span>], [<span class="string">"id"</span>, <span class="number">1</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">2</span>ms)  RELEASE SAVEPOINT active_record_1</span><br><span class="line"><span class="comment">#&lt;Shop:0x00007fa2ec4d0468&gt; &#123;</span></span><br><span class="line">            <span class="symbol">:id</span> =&gt; <span class="number">1</span>,</span><br><span class="line">          <span class="symbol">:name</span> =&gt; <span class="string">"riverye"</span>,</span><br><span class="line">         <span class="symbol">:email</span> =&gt; <span class="string">"river@riverye.com"</span>,</span><br><span class="line">          <span class="symbol">:note</span> =&gt; <span class="literal">nil</span>,</span><br><span class="line">    <span class="symbol">:created_at</span> =&gt; Sun, <span class="number">18</span> Jul <span class="number">2021</span> <span class="number">14</span><span class="symbol">:</span><span class="number">07</span><span class="symbol">:</span><span class="number">26.190110000</span> CST +08<span class="symbol">:</span><span class="number">00</span>,</span><br><span class="line">    <span class="symbol">:updated_at</span> =&gt; Sun, <span class="number">18</span> Jul <span class="number">2021</span> <span class="number">14</span><span class="symbol">:</span><span class="number">07</span><span class="symbol">:</span><span class="number">43.934564000</span> CST +08<span class="symbol">:</span><span class="number">00</span>,</span><br><span class="line">    <span class="symbol">:deleted_at</span> =&gt; Sun, <span class="number">18</span> Jul <span class="number">2021</span> <span class="number">14</span><span class="symbol">:</span><span class="number">07</span><span class="symbol">:</span><span class="number">43.934539400</span> CST +08<span class="symbol">:</span><span class="number">00</span></span><br><span class="line">&#125;</span><br><span class="line">[<span class="number">5</span>] pry(main)&gt; Shop.count</span><br><span class="line">   (<span class="number">0</span>.<span class="number">6</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL</span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="number">6</span>] pry(main)&gt; Shop.with_deleted.count</span><br><span class="line">   (<span class="number">0</span>.<span class="number">4</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上述步驟說明:</span></span><br><span class="line"><span class="comment"># 1. 一開始 Shop.count        # 0</span></span><br><span class="line"><span class="comment"># 2. 建立一個 Shop</span></span><br><span class="line"><span class="comment"># 3. Shop.count              # 1</span></span><br><span class="line"><span class="comment"># 4. 刪除建立的 Shop</span></span><br><span class="line"><span class="comment"># 5. Shop.count              # 0</span></span><br><span class="line"><span class="comment"># 6. Shop.with_deleted.count # 1</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/LDFyhNC.png" alt></p><h2><span id="注意">注意</span></h2><p>當 table 有 unique key 時，軟刪除的資料並沒有真的被刪除，此時會有問題<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ rails c -s</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; Shop.create!(<span class="symbol">name:</span> <span class="string">'riverye'</span>, <span class="symbol">email:</span> <span class="string">'river@riverye.com'</span>);</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  <span class="keyword">BEGIN</span></span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">5</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Exists? (<span class="number">16.5</span>ms)  SELECT <span class="number">1</span> AS one FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"name"</span> = $1 AND <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL LIMIT $2  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  Shop Create (<span class="number">1.6</span>ms)  INSERT INTO <span class="string">"shops"</span> (<span class="string">"name"</span>, <span class="string">"email"</span>, <span class="string">"created_at"</span>, <span class="string">"updated_at"</span>) VALUES ($1, $2, $3, $4) RETURNING <span class="string">"id"</span>  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"email"</span>, <span class="string">"river@riverye.com"</span>], [<span class="string">"created_at"</span>, <span class="string">"2021-07-18 06:35:26.540395"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:35:26.540395"</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  RELEASE SAVEPOINT active_record_1</span><br><span class="line">[<span class="number">2</span>] pry(main)&gt; Shop.first.destroy;</span><br><span class="line">  Shop Load (<span class="number">0</span>.<span class="number">8</span>ms)  SELECT <span class="string">"shops"</span>.* FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL ORDER BY <span class="string">"shops"</span>.<span class="string">"id"</span> ASC LIMIT $1  [[<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Update (<span class="number">0</span>.<span class="number">9</span>ms)  UPDATE <span class="string">"shops"</span> SET <span class="string">"deleted_at"</span> = $1, <span class="string">"updated_at"</span> = $2 WHERE <span class="string">"shops"</span>.<span class="string">"id"</span> = $3  [[<span class="string">"deleted_at"</span>, <span class="string">"2021-07-18 06:35:40.312456"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:35:40.312482"</span>], [<span class="string">"id"</span>, <span class="number">1</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  RELEASE SAVEPOINT active_record_1</span><br><span class="line">[<span class="number">3</span>] pry(main)&gt; Shop.create!(<span class="symbol">name:</span> <span class="string">'riverye'</span>, <span class="symbol">email:</span> <span class="string">'river@riverye.com'</span>);</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Exists? (<span class="number">0</span>.<span class="number">4</span>ms)  SELECT <span class="number">1</span> AS one FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"name"</span> = $1 AND <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL LIMIT $2  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  Shop Create (<span class="number">1.9</span>ms)  INSERT INTO <span class="string">"shops"</span> (<span class="string">"name"</span>, <span class="string">"email"</span>, <span class="string">"created_at"</span>, <span class="string">"updated_at"</span>) VALUES ($1, $2, $3, $4) RETURNING <span class="string">"id"</span>  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"email"</span>, <span class="string">"river@riverye.com"</span>], [<span class="string">"created_at"</span>, <span class="string">"2021-07-18 06:35:59.189116"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:35:59.189116"</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">2</span>ms)  ROLLBACK TO SAVEPOINT active_record_1</span><br><span class="line"><span class="comment"># ActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "index_shops_on_name"</span></span><br><span class="line"><span class="comment"># DETAIL:  Key (name)=(riverye) already exists.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># from /xxx/yyy/.rvm/gems/ruby-3.0.1/gems/rack-mini-profiler-2.3.2/lib/patches/db/pg.rb:69:in `exec_params'</span></span><br><span class="line"><span class="comment"># Caused by PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint "index_shops_on_name"</span></span><br><span class="line"><span class="comment"># DETAIL:  Key (name)=(riverye) already exists.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># from /xxx/yyy/.rvm/gems/ruby-3.0.1/gems/rack-mini-profiler-2.3.2/lib/patches/db/pg.rb:69:in `exec_params'</span></span><br><span class="line">[<span class="number">4</span>] pry(main)&gt; Shop.with_deleted.first.really_destroy!;</span><br><span class="line">  Shop Load (<span class="number">0</span>.<span class="number">4</span>ms)  SELECT <span class="string">"shops"</span>.* FROM <span class="string">"shops"</span> ORDER BY <span class="string">"shops"</span>.<span class="string">"id"</span> ASC LIMIT $1  [[<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">2</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Update (<span class="number">0</span>.<span class="number">4</span>ms)  UPDATE <span class="string">"shops"</span> SET <span class="string">"deleted_at"</span> = $1, <span class="string">"updated_at"</span> = $2 WHERE <span class="string">"shops"</span>.<span class="string">"id"</span> = $3  [[<span class="string">"deleted_at"</span>, <span class="string">"2021-07-18 06:36:08.980456"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:36:08.980466"</span>], [<span class="string">"id"</span>, <span class="number">1</span>]]</span><br><span class="line">  Shop Destroy (<span class="number">0</span>.<span class="number">5</span>ms)  DELETE FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"id"</span> = $1  [[<span class="string">"id"</span>, <span class="number">1</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">4</span>ms)  RELEASE SAVEPOINT active_record_1</span><br><span class="line">[<span class="number">5</span>] pry(main)&gt; Shop.create!(<span class="symbol">name:</span> <span class="string">'riverye'</span>, <span class="symbol">email:</span> <span class="string">'river@riverye.com'</span>);</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">4</span>ms)  SAVEPOINT active_record_1</span><br><span class="line">  Shop Exists? (<span class="number">0</span>.<span class="number">5</span>ms)  SELECT <span class="number">1</span> AS one FROM <span class="string">"shops"</span> WHERE <span class="string">"shops"</span>.<span class="string">"name"</span> = $1 AND <span class="string">"shops"</span>.<span class="string">"deleted_at"</span> IS NULL LIMIT $2  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"LIMIT"</span>, <span class="number">1</span>]]</span><br><span class="line">  Shop Create (<span class="number">0</span>.<span class="number">4</span>ms)  INSERT INTO <span class="string">"shops"</span> (<span class="string">"name"</span>, <span class="string">"email"</span>, <span class="string">"created_at"</span>, <span class="string">"updated_at"</span>) VALUES ($1, $2, $3, $4) RETURNING <span class="string">"id"</span>  [[<span class="string">"name"</span>, <span class="string">"riverye"</span>], [<span class="string">"email"</span>, <span class="string">"river@riverye.com"</span>], [<span class="string">"created_at"</span>, <span class="string">"2021-07-18 06:36:48.398434"</span>], [<span class="string">"updated_at"</span>, <span class="string">"2021-07-18 06:36:48.398434"</span>]]</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">3</span>ms)  RELEASE SAVEPOINT active_record_1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上述步驟說明:</span></span><br><span class="line"><span class="comment"># 1. 建立一個 Shop</span></span><br><span class="line"><span class="comment"># 2. 軟刪除建立的 Shop</span></span><br><span class="line"><span class="comment"># 3. 建立一個 Shop (與第一個 name 一樣) # 建立失敗</span></span><br><span class="line"><span class="comment"># 4. 真的刪除軟刪除的 Shop</span></span><br><span class="line"><span class="comment"># 5. 建立一個 Shop (與第一個 name 一樣) # 建立成功</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/29RBbm1.png" alt></p><h2><span id="小結">小結</span></h2><p>實務上，常用的 Gem 之一，簡易好上手</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/rubysherpas/paranoia" target="_blank" rel="noopener">paranoia GitHub</a></li><li><a href="https://ihower.tw/rails/rails-recipes-back-end.html#activereord-soft-deletion-%E5%92%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B7%A8%E8%BC%AF%E5%92%8C%E5%88%AA%E9%99%A4%E5%BE%8C%E9%82%84%E5%8F%AF%E4%BB%A5%E7%95%99%E4%B8%8B%E7%B4%80%E9%8C%84%E5%92%8C%E9%82%84%E5%8E%9F" target="_blank" rel="noopener">Rails 實戰聖經</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264573" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264573</a><br>medium 文章連結：<a href="https://link.medium.com/ay1JSdj2Mjb" target="_blank" rel="noopener">https://link.medium.com/ay1JSdj2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/18/Day05-Gem-paranoia-%E8%BB%9F%E5%88%AA%E9%99%A4%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;對 ActiveReord 進行&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%82%8F%E8%BC%AF%E5%88%AA%E9%99%A4&quot; target=&quot;_bl
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day04 - Gem-activerecord-import 批次建立介紹與應用</title>
    <link href="https://riverye.com/2021/09/17/Day04-Gem-activerecord-import-%E6%89%B9%E6%AC%A1%E5%BB%BA%E7%AB%8B%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/"/>
    <id>https://riverye.com/2021/09/17/Day04-Gem-activerecord-import-批次建立介紹與應用/</id>
    <published>2021-09-16T16:00:00.000Z</published>
    <updated>2021-09-23T16:26:16.345Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>當需要大量建立資料時，可以選擇逐筆建立，但會有 N+1 insert problem</p><p>透過 <code>activerecord-import</code> <a href="https://rubygems.org/gems/activerecord-import" target="_blank" rel="noopener">Gem</a> 只要幾條 SQL 便解決</p><h2><span id="如何安裝">如何安裝</span></h2><p>放在 Gemfile 檔案中，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/commit/0afee00dc9b3f50356eac3e040c48a0aed5ca155" target="_blank" rel="noopener">commit</a></p><p>推薦至 <a href="https://github.com/zdennis/activerecord-import" target="_blank" rel="noopener">GitHub</a> 看文件，寫得很清楚，且有提供範例</p><h2><span id="使用方法">使用方法</span></h2><p>在 <code>rails console --sandbox</code> 中演練示範</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console --sandbox 可縮寫成 rails c -s</span></span><br><span class="line"><span class="comment"># 不建議在 production 使用 sandbox ， 可能會造成 DB Lock，詳情自行上網查</span></span><br><span class="line"></span><br><span class="line">$ rails c -s</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; Shop.count</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">2</span>ms)  <span class="keyword">BEGIN</span></span><br><span class="line">   (<span class="number">11.7</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="number">2</span>] pry(main)&gt; shops = []</span><br><span class="line">[]</span><br><span class="line">[<span class="number">3</span>] pry(main)&gt; <span class="number">10</span>.times &#123; <span class="params">|i|</span> shops &lt;&lt; &#123; <span class="symbol">name:</span> <span class="string">"test_<span class="subst">#&#123;i&#125;</span>"</span>, <span class="symbol">email:</span> <span class="string">'test'</span>, <span class="symbol">note:</span> <span class="literal">nil</span> &#125; &#125;</span><br><span class="line"><span class="number">10</span></span><br><span class="line">[<span class="number">4</span>] pry(main)&gt; Shop.import(shops)</span><br><span class="line">  Shop Create Many (<span class="number">1.0</span>ms)  INSERT INTO <span class="string">"shops"</span> (<span class="string">"name"</span>,<span class="string">"email"</span>,<span class="string">"note"</span>,<span class="string">"created_at"</span>,<span class="string">"updated_at"</span>) VALUES (<span class="string">'test_0'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_1'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_2'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_3'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_4'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_5'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_6'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_7'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_8'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>),(<span class="string">'test_9'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:09:50.230104'</span>,<span class="string">'2021-07-11 06:09:50.230104'</span>) RETURNING <span class="string">"id"</span></span><br><span class="line"><span class="comment">#&lt;Struct:ActiveRecord::Import::Result:0x00008098</span></span><br><span class="line">    failed_instances = [],</span><br><span class="line">    ids = [</span><br><span class="line">        [<span class="number">0</span>] <span class="number">1</span>,</span><br><span class="line">        [<span class="number">1</span>] <span class="number">2</span>,</span><br><span class="line">        [<span class="number">2</span>] <span class="number">3</span>,</span><br><span class="line">        [<span class="number">3</span>] <span class="number">4</span>,</span><br><span class="line">        [<span class="number">4</span>] <span class="number">5</span>,</span><br><span class="line">        [<span class="number">5</span>] <span class="number">6</span>,</span><br><span class="line">        [<span class="number">6</span>] <span class="number">7</span>,</span><br><span class="line">        [<span class="number">7</span>] <span class="number">8</span>,</span><br><span class="line">        [<span class="number">8</span>] <span class="number">9</span>,</span><br><span class="line">        [<span class="number">9</span>] <span class="number">10</span></span><br><span class="line">    ],</span><br><span class="line">    num_inserts = <span class="number">1</span>,</span><br><span class="line">    results = []</span><br><span class="line">&gt;</span><br><span class="line">[<span class="number">5</span>] pry(main)&gt; Shop.count</span><br><span class="line">   (<span class="number">0</span>.<span class="number">4</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/D3tjABy.png" alt></p><h2><span id="注意">注意</span></h2><p>在使用 <code>import</code> 時，須留意不會檢查 <code>ActiveRecord</code> 的 <code>validates</code> 與觸發 <code>callback</code>，可參考這篇 <a href="https://github.com/zdennis/activerecord-import/issues/430" target="_blank" rel="noopener">GitHub Issue</a></p><p>以下為還原情境<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/shop.rb</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shop</span> &lt; ApplicationRecord</span></span><br><span class="line">  strip_attributes</span><br><span class="line">  validates <span class="symbol">:name</span>, <span class="symbol">uniqueness:</span> <span class="literal">true</span></span><br><span class="line">  after_commit <span class="symbol">:say_hello</span></span><br><span class="line"></span><br><span class="line">  private</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">say_hello</span></span></span><br><span class="line">    puts <span class="string">"hello"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">$ rails c -s</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; Shop.count</span><br><span class="line">  TRANSACTION (<span class="number">0</span>.<span class="number">2</span>ms)  <span class="keyword">BEGIN</span></span><br><span class="line">   (<span class="number">1.1</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line">[<span class="number">2</span>] pry(main)&gt; shops = []</span><br><span class="line">[]</span><br><span class="line">[<span class="number">3</span>] pry(main)&gt; <span class="number">10</span>.times &#123; <span class="params">|i|</span> shops &lt;&lt; &#123; <span class="symbol">name:</span> <span class="string">"test"</span>, <span class="symbol">email:</span> <span class="string">"test"</span>, <span class="symbol">note:</span> <span class="literal">nil</span> &#125; &#125;</span><br><span class="line"><span class="number">10</span></span><br><span class="line">[<span class="number">4</span>] pry(main)&gt; Shop.import(shops)</span><br><span class="line">  Shop Create Many (<span class="number">1.8</span>ms)  INSERT INTO <span class="string">"shops"</span> (<span class="string">"name"</span>,<span class="string">"email"</span>,<span class="string">"note"</span>,<span class="string">"created_at"</span>,<span class="string">"updated_at"</span>) VALUES (<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>),(<span class="string">'test'</span>,<span class="string">'test'</span>,NULL,<span class="string">'2021-07-11 06:41:34.694983'</span>,<span class="string">'2021-07-11 06:41:34.694983'</span>) RETURNING <span class="string">"id"</span></span><br><span class="line"><span class="comment">#&lt;Struct:ActiveRecord::Import::Result:0x000083b8</span></span><br><span class="line">    failed_instances = [],</span><br><span class="line">    ids = [</span><br><span class="line">        [<span class="number">0</span>] <span class="number">1</span>,</span><br><span class="line">        [<span class="number">1</span>] <span class="number">2</span>,</span><br><span class="line">        [<span class="number">2</span>] <span class="number">3</span>,</span><br><span class="line">        [<span class="number">3</span>] <span class="number">4</span>,</span><br><span class="line">        [<span class="number">4</span>] <span class="number">5</span>,</span><br><span class="line">        [<span class="number">5</span>] <span class="number">6</span>,</span><br><span class="line">        [<span class="number">6</span>] <span class="number">7</span>,</span><br><span class="line">        [<span class="number">7</span>] <span class="number">8</span>,</span><br><span class="line">        [<span class="number">8</span>] <span class="number">9</span>,</span><br><span class="line">        [<span class="number">9</span>] <span class="number">10</span></span><br><span class="line">    ],</span><br><span class="line">    num_inserts = <span class="number">1</span>,</span><br><span class="line">    results = []</span><br><span class="line">&gt;</span><br><span class="line">[<span class="number">5</span>] pry(main)&gt; Shop.count</span><br><span class="line">   (<span class="number">0</span>.<span class="number">5</span>ms)  SELECT COUNT(*) FROM <span class="string">"shops"</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line">[<span class="number">6</span>] pry(main)&gt; Shop.pluck(<span class="symbol">:name</span>)</span><br><span class="line">   (<span class="number">0</span>.<span class="number">3</span>ms)  SELECT <span class="string">"shops"</span>.<span class="string">"name"</span> FROM <span class="string">"shops"</span></span><br><span class="line">[</span><br><span class="line">    [<span class="number">0</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">1</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">2</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">3</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">4</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">5</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">6</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">7</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">8</span>] <span class="string">"test"</span>,</span><br><span class="line">    [<span class="number">9</span>] <span class="string">"test"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/8tEd4JA.png" alt></p><h2><span id="避免踩到-unique-解法">避免踩到 <code>unique</code> 解法</span></h2><p>Database 增加 <code>unique</code> ，便可避免建立重複的資料，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/commit/7eeeeff773f39e0847133a91512462b256b01c5c" target="_blank" rel="noopener">commit</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_index <span class="symbol">:shops</span>, <span class="symbol">:name</span>, <span class="symbol">unique:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/d2kV4T3.png" alt></p><h2><span id="小結">小結</span></h2><p>大量資料存入 Database 時，<code>import</code> 是很好用的工具，同時也須留意眉角，避免踩雷。</p><p>note: Callbacks 解法可參考 <a href="https://github.com/zdennis/activerecord-import#callbacks" target="_blank" rel="noopener">GitHub README</a></p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/zdennis/activerecord-import" target="_blank" rel="noopener">activerecord-import GitHub</a></li><li><a href="https://kakas.github.io/Rails/%E6%AF%94%E8%BC%83%E5%90%84%E7%A8%AE%E6%96%B9%E5%BC%8F%E5%9C%A8-Rails-DB-%E4%B8%AD%E5%AF%AB%E5%85%A5%E5%A4%A7%E7%AD%86%E8%B3%87%E6%96%99%E7%9A%84%E9%80%9F%E5%BA%A6/" target="_blank" rel="noopener">比較各種方式在 Rails DB 中寫入大筆資料的速度</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264572" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264572</a><br>medium 文章連結：<a href="https://link.medium.com/GX2nvti2Mjb" target="_blank" rel="noopener">https://link.medium.com/GX2nvti2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/17/Day04-Gem-activerecord-import-%E6%89%B9%E6%AC%A1%E5%BB%BA%E7%AB%8B%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;當需要大量建立資料時，可以選擇逐筆建立，但會有 N+1 insert problem&lt;/p&gt;
&lt;p&gt;透過 &lt;code&gt;activerecord-import&lt;/code&gt; &lt;a href=&quot;https://r
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day03 - Gem-strip_attributes 介紹與應用</title>
    <link href="https://riverye.com/2021/09/16/Day03-Gem-strip-attributes-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/"/>
    <id>https://riverye.com/2021/09/16/Day03-Gem-strip-attributes-介紹與應用/</id>
    <published>2021-09-15T16:00:00.000Z</published>
    <updated>2021-09-23T16:25:59.434Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>當使用者輸入資料時，若不小心輸入跳脫字元 <a href="https://zh.wikipedia.org/wiki/%E8%B7%B3%E8%84%AB%E5%AD%97%E5%85%83" target="_blank" rel="noopener">Escape Character</a>，如 <code>\n</code> or <code>\t</code> 等時，在資料處理與儲存時，應該要過濾，避免日後使用者查不到該資料 (或其它問題)，進而衍伸客服 (or Bug)</p><h2><span id="方法-1">方法 1</span></h2><p>Ruby 內建 <code>strip</code> 這<a href="https://apidock.com/ruby/String/strip" target="_blank" rel="noopener">方法</a>，可以用過該方法過濾</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ irb</span><br><span class="line"></span><br><span class="line"><span class="string">"  hello\t"</span></span><br><span class="line"><span class="comment"># "  hello\t"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"  hello\t"</span>.strip</span><br><span class="line"><span class="comment"># "hello"</span></span><br></pre></td></tr></table></figure></p><h2><span id="方法-2">方法 2</span></h2><p>使用 <code>strip_attributes</code> <a href="https://rubygems.org/gems/strip_attributes" target="_blank" rel="noopener">Gem</a>，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/commit/cb3894b95b5319b1e088af71750378e364f8bc8f" target="_blank" rel="noopener">commit</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在想使用的 Model 中加入 (以 shop 為例)</span></span><br><span class="line"><span class="comment"># app/models/shop.rb</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shop</span> &lt; ApplicationRecord</span></span><br><span class="line">  strip_attributes</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 寫個測試覆蓋</span></span><br><span class="line"><span class="comment"># spec/models/shop_spec.rb</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe Shop, <span class="symbol">type:</span> <span class="symbol">:model</span> <span class="keyword">do</span></span><br><span class="line">  describe <span class="string">"#strip_attributes"</span> <span class="keyword">do</span></span><br><span class="line">    context <span class="string">"note"</span> <span class="keyword">do</span></span><br><span class="line">      subject <span class="keyword">do</span></span><br><span class="line">        shop = Shop.new(<span class="symbol">name:</span> <span class="string">"TEST"</span>, <span class="symbol">email:</span> <span class="string">"TEST"</span>, <span class="symbol">note:</span> <span class="string">"TEST\n"</span>)</span><br><span class="line">        shop.valid?</span><br><span class="line">        shop.note</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      it &#123; is_expected.to eq(<span class="string">"TEST"</span>) &#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://apidock.com/ruby/String/strip" target="_blank" rel="noopener">strip (String) - APIdock</a></li><li><a href="https://github.com/rmm5t/strip_attributes" target="_blank" rel="noopener">strip_attributes GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264570" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264570</a><br>medium 文章連結：<a href="https://link.medium.com/tBNoHEh2Mjb" target="_blank" rel="noopener">https://link.medium.com/tBNoHEh2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/16/Day03-Gem-strip-attributes-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;當使用者輸入資料時，若不小心輸入跳脫字元 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%B7%B3%E8%84%AB%E5%AD%97%E5%85%83&quot; target
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day02 - 修改 Rails console edit 編輯模式</title>
    <link href="https://riverye.com/2021/09/15/Day02-%E4%BF%AE%E6%94%B9-Rails-console-edit-%E7%B7%A8%E8%BC%AF%E6%A8%A1%E5%BC%8F/"/>
    <id>https://riverye.com/2021/09/15/Day02-修改-Rails-console-edit-編輯模式/</id>
    <published>2021-09-14T16:00:00.000Z</published>
    <updated>2021-09-23T16:24:53.694Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在 <code>rails console</code> 中，若一次貼行數較多的 code 時，有時會失敗，變成要逐段複製貼上，若過程中有貼錯，則需要重來...</p><p>此時可以在 <code>rails console</code> 中輸入 <code>edit</code> ，預設是使用 <code>nano</code> 編輯器，若想換成 <code>vim</code> 或其他編輯器，也可以透過以下方式修改</p><p>note: 預設沒有 <code>edit</code> 這方法，需要使用 <code>pry-rails</code> <a href="https://rubygems.org/gems/pry-rails" target="_blank" rel="noopener">Gem</a></p><h2><span id="方法-1">方法 1</span></h2><p>在 Rails 專案的 <code>.pryrc</code> 檔案中，新增 <code>Pry.config.editor = &quot;vim&quot;</code><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .pryrc</span></span><br><span class="line"></span><br><span class="line">Pry.config.editor = <span class="string">"vim"</span> <span class="comment"># 或改成其他編輯器</span></span><br></pre></td></tr></table></figure></p><h2><span id="方法-2">方法 2</span></h2><p>透過環境變數，調整 <code>EDITOR</code></p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim ~/.bashrc</span></span><br><span class="line"><span class="comment"># 或放其它地方</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set default rails console edit mode</span></span><br><span class="line"><span class="built_in">export</span> EDITOR=<span class="string">"vim"</span></span><br></pre></td></tr></table></figure></p><h2><span id="差異比較">差異比較</span></h2><p>上述兩種方法擇一使用即可</p><p>方法 1 只侷限於該專案<br>方法 2 可針對所有 Rails 專案調整</p><p>傾向使用方法 2 ，不用每個專案都設定，多人協作開發時，其他人要改只需要在 <code>rails console</code> 中輸入 <code>Pry.editor = &quot;xxx&quot;</code> 改成想要的編輯器即可</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://kevinjalbert.com/editing-with-pry/" target="_blank" rel="noopener">Editing with Pry</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264100" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264100</a><br>medium 文章連結：<a href="https://link.medium.com/L7ujeSg2Mjb" target="_blank" rel="noopener">https://link.medium.com/L7ujeSg2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/15/Day02-%E4%BF%AE%E6%94%B9-Rails-console-edit-%E7%B7%A8%E8%BC%AF%E6%A8%A1%E5%BC%8F">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;rails console&lt;/code&gt; 中，若一次貼行數較多的 code 時，有時會失敗，變成要逐段複製貼上，若過程中有貼錯，則需要重來...&lt;/p&gt;
&lt;p&gt;此時可以在 &lt;code&gt;rail
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day01 - 鐵人賽我又來囉</title>
    <link href="https://riverye.com/2021/09/14/Day01-%E9%90%B5%E4%BA%BA%E8%B3%BD%E6%88%91%E5%8F%88%E4%BE%86%E5%9B%89/"/>
    <id>https://riverye.com/2021/09/14/Day01-鐵人賽我又來囉/</id>
    <published>2021-09-13T16:00:00.000Z</published>
    <updated>2021-09-23T16:24:29.446Z</updated>
    
    <content type="html"><![CDATA[<p>避免像去年一樣焦頭爛額，這次提前至 7 月開始準備鐵人賽，<br>即便提早準備，也不知要寫什麼...<br>只準備了幾篇文章的庫存，<br>期許這次能迎刃有餘的完賽。</p><hr><h2><span id="目前想到的-30-天內容如下">目前想到的 30 天內容如下：</span></h2><p>Day01 - 參賽心得<br>Day02 - 修改 Rails console edit 編輯模式<br>Day03 - Gem-strip_attributes 介紹與應用<br>Day04 - Gem-activerecord-import 批次建立介紹與應用<br>Day05 - Gem-paranoia 軟刪除介紹與應用<br>Day06 - 監控 Sidekiq 有無正常運作(或執行超過多久)<br>Day07 - Gem-sidekiq-limit_fetch 限制 sidekiq queue 執行數量<br>Day08 - Gem-sidekiq-grouping 允許單個 sidekiq 處理多個相似(一樣)的 jobs<br>Day09 - Gem-jwt 介紹與應用<br>Day10 - 如何用手機連 Ruby on Rails Local 開發中的專案<br>Day11 - Gem-rqrcode 或 barby 產 QR Code<br>Day12 - 解析圖片中的 QR Code 資料<br>Day13 - Gem-grape 介紹與應用 3-1 應用篇<br>Day14 - Gem-grape 介紹與應用 3-2 應用篇<br>Day15 - Gem-grape 介紹與應用 3-3 應用篇<br>Day16 - Gem-grape 測試篇<br>Day17 - Gem-grape 測試篇<br>Day18 - PDF 解密與處理<br>Day19 - PDF 加浮水印<br>Day20 - 匯出 PDF<br>Day21 - 匯入 excel-應用篇<br>Day22 - 匯入 excel-測試篇<br>Day23 - 匯出 excel-應用篇<br>Day24 - 匯出 excel-測試篇<br>Day25 - 簡訊 API-三竹-應用篇<br>Day26 - 簡訊 API-三竹-測試篇<br>Day27 - 簡訊 API-Every8d-應用篇<br>Day28 - 簡訊 API-Every8d-測試篇<br>Day29 - 簡訊服務不中斷，自動切換<br>Day30 - 完賽心得</p><h3><span id="備註-以上標題-順序僅供參考依當天發文為主-xd">備註: 以上標題、順序僅供參考，依當天發文為主 XD</span></h3><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264068" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264068</a><br>medium 文章連結：<a href="https://link.medium.com/rhBstgf2Mjb" target="_blank" rel="noopener">https://link.medium.com/rhBstgf2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/14/Day01-%E9%90%B5%E4%BA%BA%E8%B3%BD%E6%88%91%E5%8F%88%E4%BE%86%E5%9B%89/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;避免像去年一樣焦頭爛額，這次提前至 7 月開始準備鐵人賽，&lt;br&gt;
即便提早準備，也不知要寫什麼...&lt;br&gt;
只準備了幾篇文章的庫存，&lt;br&gt;
期許這次能迎刃有餘的完賽。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;目前想到的-30-天內容如下&quot;&gt;目前想到的 30 天內
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>在 Windows 10 底下的 Ubuntu 18.04 LTS 執行 Ruby on Rails 的 RSpec Capybara 能顯示 Chrome 瀏覽器 (selenium-webdriver) 跑 E2E 測試</title>
    <link href="https://riverye.com/2020/10/13/%E5%9C%A8-Windows-10-%E5%BA%95%E4%B8%8B%E7%9A%84-Ubuntu-18-04-LTS-%E5%9F%B7%E8%A1%8C-Ruby-on-Rails-%E7%9A%84-RSpec-Capybara-%E8%83%BD%E9%A1%AF%E7%A4%BA-Chrome-%E7%80%8F%E8%A6%BD%E5%99%A8-selenium-webdriver-%E8%B7%91-E2E-%E6%B8%AC%E8%A9%A6/"/>
    <id>https://riverye.com/2020/10/13/在-Windows-10-底下的-Ubuntu-18-04-LTS-執行-Ruby-on-Rails-的-RSpec-Capybara-能顯示-Chrome-瀏覽器-selenium-webdriver-跑-E2E-測試/</id>
    <published>2020-10-12T16:00:00.000Z</published>
    <updated>2020-10-12T17:35:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><blockquote><p>在 Windows 10 底下的 Ubuntu 18.04 LTS 執行 Ruby on Rails 的 RSpec Capybara 能顯示 Chrome 瀏覽器 (selenium-webdriver) 跑 E2E 測試</p></blockquote><p>這標題真的很長 XD</p><p>希望在 Windows 環境下的 Ruby on Rails 文章能多些 (雷真的很多...)，別老是霸凌 Windows 啊... (雖然我工作上也是用 Mac)</p><p>之前看 Mac 電腦，直接執行 <code>rspec spec</code> 就能有效果，換成在 Windows 上時，卻變得很艱辛，過程中很多環境的雷，且相關資源真的很少，之前搞過一陣子，如今終於可以順利執行 (撒花</p><p>此篇為鐵人賽加碼文章，本文章會以此 <a href="https://github.com/River-Ye/ironman_12th_2020" target="_blank" rel="noopener">repo 作為範例</a></p><h2><span id="環境介紹">環境介紹</span></h2><p>以下為個人在 Windows 電腦使用的環境，Ruby on Rails 相關版本，可參考 <a href="https://github.com/River-Ye/ironman_12th_2020/blob/master/Gemfile.lock" target="_blank" rel="noopener">repo 中的 Gemfile.lock</a></p><p>備註: 若還沒在 Windows 安裝 Ruby on Rails 環境，<a href="https://riverye.com/2019/10/12/Windows%2010%20%E5%AE%89%E8%A3%9D%20Ruby%20+%20Rails%20+%20Node.js%20+%20Git%20+%20postgresql/">可參考這篇文章</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">作業系統: Windows 10 家用版 1909 版 (OS 組建 18363.1082)</span><br><span class="line"></span><br><span class="line">Ubuntu: Ubuntu 18.04 LTS</span><br><span class="line"></span><br><span class="line">瀏覽器: Google Chrome 版本 86.0.4240.75 (正式版本) (64 位元)</span><br></pre></td></tr></table></figure></p><h2><span id="如何安裝">如何安裝</span></h2><p>以 Ruby on Rails -v 6.0.3.3 版本為例，建立專案時，在 <code>Gemfile</code> 的 <code>test</code> group 中，已經有 <code>capybara</code> 、 <code>selenium-webdriver</code> 、 <code>webdrivers</code> 這三個 Gem，可參考 <a href="https://github.com/River-Ye/ironman_12th_2020/blob/master/Gemfile#L68" target="_blank" rel="noopener">repo 中的 Gemfile</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile 檔案</span></span><br><span class="line"></span><br><span class="line">group <span class="symbol">:test</span> <span class="keyword">do</span></span><br><span class="line">  gem <span class="string">'capybara'</span>, <span class="string">'&gt;= 2.15'</span></span><br><span class="line">  gem <span class="string">'selenium-webdriver'</span></span><br><span class="line">  gem <span class="string">'webdrivers'</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 記得要 bundle</span></span><br></pre></td></tr></table></figure></p><h2><span id="如何設定">如何設定</span></h2><p>可將下方寫在 <code>spec/support/capybara.rb</code> 的設定，統一寫在 <code>spec/rails_helper.rb</code> 的檔案中，兩種方式都可以，或參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/19/commits/a2e90488c50a3c61389baa735c9c0ca4d87e9db3" target="_blank" rel="noopener">commit</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/rails_helper.rb</span></span><br><span class="line">Dir[Rails.root.join(<span class="string">'spec'</span>, <span class="string">'support'</span>, <span class="string">'**'</span>, <span class="string">'*.rb'</span>)].sort.each &#123; <span class="params">|f|</span> <span class="keyword">require</span> f &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># spec/support/capybara.rb</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'capybara'</span></span><br><span class="line"></span><br><span class="line">Capybara.register_driver <span class="symbol">:chrome</span> <span class="keyword">do</span> <span class="params">|app|</span></span><br><span class="line">  Capybara::Selenium::Driver.new(app, <span class="symbol">browser:</span> <span class="symbol">:chrome</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Capybara.javascript_driver = <span class="symbol">:chrome</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># .travis.yml</span></span><br><span class="line">  - xvfb</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># spec/features/sign_in_spec.rb</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.feature <span class="string">'test'</span>, <span class="symbol">type:</span> <span class="symbol">:feature</span>, <span class="symbol">driver:</span> <span class="symbol">:chrome</span>, <span class="symbol">js:</span> <span class="literal">true</span>, <span class="symbol">slow:</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">  describe <span class="string">'Feature spec/功能測試'</span> <span class="keyword">do</span></span><br><span class="line">    before(<span class="symbol">:each</span>) <span class="keyword">do</span></span><br><span class="line">      visit users_path</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    scenario <span class="string">'User CRUD'</span> <span class="keyword">do</span></span><br><span class="line">      expect(User.count).to eq(<span class="number">0</span>)</span><br><span class="line">      click_on(<span class="string">'New User'</span>)</span><br><span class="line">      fill_in(<span class="string">'Name'</span>, <span class="symbol">with:</span> <span class="string">'小菜'</span>)</span><br><span class="line">      fill_in(<span class="string">'Email'</span>, <span class="symbol">with:</span> <span class="string">'river@riverye.com'</span>)</span><br><span class="line">      fill_in(<span class="string">'Phone'</span>, <span class="symbol">with:</span> <span class="string">'0987654321'</span>)</span><br><span class="line">      fill_in(<span class="string">'Address'</span>, <span class="symbol">with:</span> <span class="string">'某個地方'</span>)</span><br><span class="line">      click_button(<span class="string">'Create User'</span>)</span><br><span class="line">      expect(User.count).to eq(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="travis-ci-設定">Travis CI 設定</span></h2><p>實際 Travis CI 跑的 log 紀錄可參考這個 <a href="https://travis-ci.com/github/River-Ye/ironman_12th_2020/builds/189393212" target="_blank" rel="noopener">Job log 紀錄</a></p><p>更多設定可參考 <a href="https://docs.travis-ci.com/user/chrome" target="_blank" rel="noopener">Travis CI Docs</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .travis.yml</span></span><br><span class="line">  - xvfb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 別懷疑，就是這麼簡單 XD</span></span><br></pre></td></tr></table></figure></p><h2><span id="在-windows-的-ubuntu-執行-rspec-會顯示-chrome-瀏覽器模擬操作">在 Windows 的 Ubuntu 執行 RSpec 會顯示 Chrome 瀏覽器模擬操作</span></h2><p>備註: <a href="https://youtu.be/uNOmOK2FOYs" target="_blank" rel="noopener">影片版</a><br><img src="https://i.imgur.com/hyyNxeZ.gif" alt></p><h2><span id="參考資料">參考資料</span></h2><p><a href="https://qiita.com/jnchito/items/c7e6e7abf83598a6516d" target="_blank" rel="noopener">rspec-rails 3.7の新機能！System Specを使ってみた</a></p><h2><span id="小結">小結</span></h2><p>此方法也有在 MacOS 測試過，確認能在 Windows 、 MacOS 環境執行，前面鐵人賽文章幾乎都是在 MacOS 環境寫的，偶爾要替 Windows 平反下 XD</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10252686" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10252686</a><br>medium 文章連結：<a href="https://link.medium.com/hn69TJ6Qwab" target="_blank" rel="noopener">https://link.medium.com/hn69TJ6Qwab</a><br>本文同步發布於 <a href="https://riverye.com/2020/10/13/%E5%9C%A8-Windows-10-%E5%BA%95%E4%B8%8B%E7%9A%84-Ubuntu-18-04-LTS-%E5%9F%B7%E8%A1%8C-Ruby-on-Rails-%E7%9A%84-RSpec-Capybara-%E8%83%BD%E9%A1%AF%E7%A4%BA-Chrome-%E7%80%8F%E8%A6%BD%E5%99%A8-selenium-webdriver-%E8%B7%91-E2E-%E6%B8%AC%E8%A9%A6/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Windows 10 底下的 Ubuntu 18.04 LTS 執行 Ruby on Rails 的 RSpec Capybara 能顯示 Chrome 瀏覽器 (seleniu
      
    
    </summary>
    
    
      <category term="環境建置" scheme="https://riverye.com/categories/%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE/"/>
    
    
      <category term="Rails" scheme="https://riverye.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="https://riverye.com/tags/Ruby/"/>
    
      <category term="Ubuntu" scheme="https://riverye.com/tags/Ubuntu/"/>
    
      <category term="RSpec" scheme="https://riverye.com/tags/RSpec/"/>
    
      <category term="Windows" scheme="https://riverye.com/tags/Windows/"/>
    
      <category term="Capybara" scheme="https://riverye.com/tags/Capybara/"/>
    
      <category term="selenium-webdriver" scheme="https://riverye.com/tags/selenium-webdriver/"/>
    
  </entry>
  
</feed>
