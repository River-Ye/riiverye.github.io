<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://riverye.com/"/>
  <updated>2020-09-21T23:59:55.513Z</updated>
  <id>https://riverye.com/</id>
  
  <author>
    <name>River-Ye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Day17 - Ruby on Rails 中的 awesome_print 讓你的 console 更好閱讀</title>
    <link href="https://riverye.com/2020/09/22/Day17-Ruby-on-Rails-%E4%B8%AD%E7%9A%84-awesome-print-%E8%AE%93%E4%BD%A0%E7%9A%84-console-%E6%9B%B4%E5%A5%BD%E9%96%B1%E8%AE%80/"/>
    <id>https://riverye.com/2020/09/22/Day17-Ruby-on-Rails-中的-awesome-print-讓你的-console-更好閱讀/</id>
    <published>2020-09-21T16:00:00.000Z</published>
    <updated>2020-09-21T23:59:55.513Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>awesome_print 這套蠻實用的，對客戶來說無感，對工程師卻是有感的存在 (至少對我來說是啦 XD)，能讓 console 畫面比較美，看起來也比較賞心悅目，當 table 欄位比較多時，也比較好閱讀</p><p>後續的文章會以此 <a href="https://github.com/River-Ye/ironman_12th_2020" target="_blank" rel="noopener">repo 作為範例</a></p><hr><h2 id="awesome-print">Awesome Print</h2><p><a href="https://github.com/awesome-print/awesome_print" target="_blank" rel="noopener">官方網站</a>有提到即將發佈的 2.0 版本<br>將只支援 Ruby v1.9.3 之後及 Rails v3.0 之後，若本身專案使用的版本比較舊的話，要特別留意</p><h2 id="如何安裝">如何安裝</h2><p>在 Gemfile 加入，可參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/2/commits/f95351f95ce0ea2cbf2560f60a090e3016b38ef0" target="_blank" rel="noopener">commit</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile 檔案</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'awesome_print'</span>, <span class="string">'~&gt; 1.8'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 記得要 bundle</span></span><br></pre></td></tr></table></figure></p><h2 id="讓-console-預設使用-awesome-print">讓 console 預設使用 Awesome Print</h2><p><a href="https://github.com/awesome-print/awesome_print" target="_blank" rel="noopener">官方網站</a>內文有寫如何設定，或參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/2/commits/45c73c4e88cf177a57eec65ac2695f7c58efac53" target="_blank" rel="noopener">commit</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .gitignore</span></span><br><span class="line">.irb_history</span><br><span class="line"></span><br><span class="line"><span class="comment"># .irbrc</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'awesome_print'</span></span><br><span class="line">AwesomePrint.irb!</span><br><span class="line"></span><br><span class="line"><span class="comment"># config/initializers/awesome_print.rb</span></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">AwesomePrint</span></span></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">Formatters</span></span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BaseFormatter</span></span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">indented</span><span class="params">(&amp;block)</span></span></span><br><span class="line">        inspector.increase_indentation(&amp;block)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Inspector</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_indentation</span><span class="params">(&amp;block)</span></span></span><br><span class="line">      indentator.indent(&amp;block)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2 id="如何使用">如何使用</h2><p>與一般操作一樣，差別在於看起來比較賞心悅目 XD</p><p>直接看以下圖片，便知其差異</p><h4 id="console-預設-無-awesome_print">console 預設 (無 awesome_print)</h4><p><img src="https://i.imgur.com/WYUTX3L.png" alt></p><h4 id="有開啟-awesome_print">有開啟 awesome_print</h4><p><img src="https://i.imgur.com/YNNzysx.png" alt></p><hr><h2 id="小結">小結</h2><p>可讀性變高以後，心情也會跟著上升，眼睛也比較不會這麼吃力，開發也跟著變快惹(!?</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10241726" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10241726</a><br>medium 文章連結：<a href="https://link.medium.com/RDfLdOCrY9" target="_blank" rel="noopener">https://link.medium.com/RDfLdOCrY9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/22/Day17-Ruby-on-Rails-%E4%B8%AD%E7%9A%84-awesome-print-%E8%AE%93%E4%BD%A0%E7%9A%84-console-%E6%9B%B4%E5%A5%BD%E9%96%B1%E8%AE%80/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;awesome_print 這套蠻實用的，對客戶來說無感，對工程師卻是有感的存在 (至少對我來說是啦 XD)，能讓 console 畫面比較美，看起來也比較賞心悅目，當 table 欄位比較多時，也比較好閱讀&lt;/p&gt;
&lt;p&gt;後續的文章
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day16 - Ruby on Rails 中的風格管理套件 RuboCop</title>
    <link href="https://riverye.com/2020/09/21/Day16-Ruby-on-Rails-%E4%B8%AD%E7%9A%84%E9%A2%A8%E6%A0%BC%E7%AE%A1%E7%90%86%E5%A5%97%E4%BB%B6-RuboCop/"/>
    <id>https://riverye.com/2020/09/21/Day16-Ruby-on-Rails-中的風格管理套件-RuboCop/</id>
    <published>2020-09-20T16:00:00.000Z</published>
    <updated>2020-09-20T16:03:21.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>多人協作時，通常會規範 style，像是統一使用單引號、雙引號、每個方法最多不能超過幾行、每行的長度限制等<br>這時就需要透過 RuboCop 來進行把關</p><p>後續的文章會以此 <a href="https://github.com/River-Ye/ironman_12th_2020" target="_blank" rel="noopener">repo 作為範例</a></p><hr><h2 id="rubocop">Rubocop</h2><blockquote><p>Role models are important.-- Officer Alex J. Murphy / RoboCop</p></blockquote><p>進入<a href="https://github.com/rubocop-hq/rubocop" target="_blank" rel="noopener">官方網站</a>便能看到這段話，由此可見風格規範的重要性</p><h2 id="如何安裝">如何安裝</h2><p>如文件所說直接在終端機輸入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install rubocop</span><br></pre></td></tr></table></figure></p><p>接著放在 development 中，test 和 production 不需使用<br>或不放 Gemfile 中，只針對 CI 處理即可</p><p>可參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/commit/f44bdc052ccbf0c195bb9c7e154abb72788ebc8f" target="_blank" rel="noopener">commit</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile 檔案</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'rubocop'</span>, <span class="string">'~&gt; 0.90.0'</span></span><br></pre></td></tr></table></figure></p><h2 id="如何執行">如何執行</h2><p>在專案目錄下的終端機輸入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查全部的檔案</span></span><br><span class="line">rubocop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只針對特定檔案、資料夾檢查</span></span><br><span class="line">rubocop path/to/file path/to/directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">rubocop app/controllers/application_controller.rb</span><br></pre></td></tr></table></figure></p><p>備註: 善用 <code>tldr</code> 可看下 <code>rubocop</code> 怎麼使用<br><img src="https://i.imgur.com/0MFURaa.png" alt></p><h2 id="如何客製化-rubocop-設定">如何客製化 RuboCop 設定</h2><p>可參考 <a href="https://docs.rubocop.org/rubocop/0.85/cops_style.html" target="_blank" rel="noopener">Cop Documentation Style</a><br>裡面有提供各種範例的設定，可針對專案需求進行調整，<br>並將設定檔寫在 <code>.rubocop.yml</code> 中，可參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/commit/db549bd5145f1555dc3a20cddc9a8639a5223ac3" target="_blank" rel="noopener">commit</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is the configuration used to check the rubocop source code.</span></span><br><span class="line"><span class="comment"># url: https://docs.rubocop.org/rubocop/0.85/cops_style.html</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">AllCops:</span></span><br><span class="line">  <span class="symbol">Exclude:</span></span><br><span class="line">    - <span class="string">'config/routes.rb'</span></span><br><span class="line">    - <span class="string">'db/schema.rb'</span></span><br><span class="line">  <span class="symbol">TargetRubyVersion:</span> <span class="number">2.7</span>.<span class="number">1</span></span><br><span class="line">  <span class="symbol">TargetRailsVersion:</span> <span class="number">6.0</span>.<span class="number">3.3</span></span><br><span class="line"></span><br><span class="line">  <span class="symbol">Rails:</span></span><br><span class="line">    <span class="symbol">Enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  Rails/<span class="symbol">UnknownEnv:</span></span><br><span class="line">    <span class="symbol">Environments:</span></span><br><span class="line">      - production</span><br><span class="line">      - staging</span><br><span class="line">      - development</span><br><span class="line">      - test</span><br><span class="line"></span><br><span class="line"><span class="comment"># modern editors and terminal fit more than 120 characters.</span></span><br><span class="line">Metrics/<span class="symbol">LineLength:</span></span><br><span class="line">  <span class="symbol">Max:</span> <span class="number">120</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Class length is not critical to code quality</span></span><br><span class="line">Metrics/<span class="symbol">ClassLength:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Module length is not critical to code quality</span></span><br><span class="line">Metrics/<span class="symbol">ModuleLength:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Block length is ok to be long in DSLs like 'rspec' or 'rake'</span></span><br><span class="line">Metrics/<span class="symbol">BlockLength:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># defualt '10 line' is too strict to us, and may clutter the class</span></span><br><span class="line">Metrics/<span class="symbol">MethodLength:</span></span><br><span class="line">  <span class="symbol">Max:</span> <span class="number">25</span></span><br><span class="line"></span><br><span class="line">Metrics/<span class="symbol">AbcSize:</span></span><br><span class="line">  <span class="symbol">Max:</span> <span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Most Rails generated class are not doced, and not needed</span></span><br><span class="line">Style/<span class="symbol">Documentation:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 'return' makes code more readable in some cases</span></span><br><span class="line">Style/<span class="symbol">RedundantReturn:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Style/<span class="symbol">AsciiComments:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Guard is not always good to readablity</span></span><br><span class="line"><span class="comment"># Note: It does not mean we don't use guard to reduce block levels</span></span><br><span class="line"><span class="comment"># In short methods, using guard is not necessary, e.g.</span></span><br><span class="line"><span class="comment">#   def foo(x)   | def foo(x)</span></span><br><span class="line"><span class="comment">#     if xxx?(x) |   return unless xxx?(x)</span></span><br><span class="line"><span class="comment">#       bar(x)   |   bar(x)</span></span><br><span class="line"><span class="comment">#     end        | end</span></span><br><span class="line"><span class="comment">#   end          |</span></span><br><span class="line">Style/<span class="symbol">GuardClause:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The rule expects</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   if xxxxxx</span></span><br><span class="line"><span class="comment">#     a_very_long_method_or_somethings_like_that......</span></span><br><span class="line"><span class="comment">#   end</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># to be</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   a_very_long_method_or_somethings_like_that...... if xxxxxx</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is not good looking at all.</span></span><br><span class="line">Style/<span class="symbol">IfUnlessModifier:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # bad</span></span><br><span class="line"><span class="comment"># a = [1, 2,]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # good</span></span><br><span class="line"><span class="comment"># a = [</span></span><br><span class="line"><span class="comment">#   1, 2,</span></span><br><span class="line"><span class="comment">#   3,</span></span><br><span class="line"><span class="comment"># ]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # good</span></span><br><span class="line"><span class="comment"># a = [</span></span><br><span class="line"><span class="comment">#   1,</span></span><br><span class="line"><span class="comment">#   2,</span></span><br><span class="line"><span class="comment"># ]</span></span><br><span class="line">Style/<span class="symbol">TrailingCommaInArrayLiteral:</span></span><br><span class="line">  <span class="symbol">EnforcedStyleForMultiline:</span> consistent_comma</span><br><span class="line"></span><br><span class="line"><span class="comment"># # good</span></span><br><span class="line"><span class="comment"># foo(</span></span><br><span class="line"><span class="comment">#   1,</span></span><br><span class="line"><span class="comment">#   2,</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line">Style/<span class="symbol">TrailingCommaInArguments:</span></span><br><span class="line">  <span class="symbol">EnforcedStyleForMultiline:</span> consistent_comma</span><br><span class="line"></span><br><span class="line"><span class="comment"># # good</span></span><br><span class="line"><span class="comment"># a = &#123;</span></span><br><span class="line"><span class="comment">#   1,</span></span><br><span class="line"><span class="comment">#   2,</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line">Style/<span class="symbol">TrailingCommaInHashLiteral:</span></span><br><span class="line">  <span class="symbol">EnforcedStyleForMultiline:</span> consistent_comma</span><br><span class="line"></span><br><span class="line"><span class="comment"># good</span></span><br><span class="line"><span class="comment"># class Foo</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   def bar</span></span><br><span class="line"><span class="comment">#     ...</span></span><br><span class="line"><span class="comment">#   end</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># bad</span></span><br><span class="line"><span class="comment"># class Foo</span></span><br><span class="line"><span class="comment">#   def bar</span></span><br><span class="line"><span class="comment">#     ...</span></span><br><span class="line"><span class="comment">#   end</span></span><br><span class="line"><span class="comment"># end</span></span><br><span class="line"></span><br><span class="line">Style/<span class="symbol">ClassAndModuleChildren:</span></span><br><span class="line">  <span class="symbol">Enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bad</span></span><br><span class="line"><span class="comment"># "No special symbols"</span></span><br><span class="line"><span class="comment"># "No string interpolation"</span></span><br><span class="line"><span class="comment"># "Just text"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># good</span></span><br><span class="line"><span class="comment"># 'No special symbols'</span></span><br><span class="line"><span class="comment"># 'No string interpolation'</span></span><br><span class="line"><span class="comment"># 'Just text'</span></span><br><span class="line"><span class="comment"># "Wait! What's #&#123;this&#125;!"</span></span><br><span class="line"><span class="comment"># Style/StringLiterals:</span></span><br><span class="line"><span class="comment">#   EnforcedStyle: single_quotes (default)</span></span><br></pre></td></tr></table></figure></p><h2 id="如何只針對修改的檔案進行檢查就好">如何只針對修改的檔案進行檢查就好</h2><p>改了好多檔案，逐步檢查好麻煩，有什麼方法可以只針對修改的檔案檢查就好?<br>在自己 Local branch 的終端機輸入以下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若有更好的設定方式，歡迎留言交流 :)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">rubocop $(git diff master --name-only)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">git diff-tree -r --no-commit-id --name-only head..origin/master | xargs rubocop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 備註: xargs 是 Linux 指令</span></span><br></pre></td></tr></table></figure></p><p>或不想每次發 Pull requests (簡稱: pr) 都檢查全部的檔案</p><h3 id="只想針對修改的檔案進行檢查就好可參考此-commit-或此-commit">只想針對修改的檔案進行檢查就好，可參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/6/commits/1a368ad8619e2c690da4012d6d5b42ff429ce6c1" target="_blank" rel="noopener">commit</a> 或此 <a href="https://github.com/River-Ye/ironman_12th_2020/commit/e83a65f01c7a83d15220381a754044a890d744c5" target="_blank" rel="noopener">commit</a></h3><h3 id="只想針對修改的行數進行檢查就好可參考此-pr">只想針對修改的行數進行檢查就好，可參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/9" target="_blank" rel="noopener">pr</a></h3><p>備註: 安裝「<a href="https://rubygems.org/gems/pronto-rubocop" target="_blank" rel="noopener">pronto-rubocop</a>」時，應該會踩到安裝失敗的雷，有相依「<a href="https://rubygems.org/gems/thor" target="_blank" rel="noopener">thor</a>」比較舊的版本，可參考上面 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/9" target="_blank" rel="noopener">pr</a> 的解決方式<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若有更好的設定方式，歡迎留言交流 :)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 Travis CI 為例</span></span><br><span class="line"><span class="comment"># .travis.yml</span></span><br><span class="line">git fetch origin master &amp;&amp; master_sha1=<span class="string">"$(cut -c -40&lt;&lt;&lt;"</span>$(cat .git/FETCH_HEAD)<span class="string">")"</span> &amp;&amp; pronto run -c $master_sha1 --exit-code</span><br><span class="line"></span><br><span class="line"><span class="comment"># 欲使用 pronto 這指令，需安裝「pronto-rubocop」</span></span><br><span class="line"><span class="comment"># 有安裝「pronto-rubocop」的話，這段也能直接在終端機輸入</span></span><br></pre></td></tr></table></figure></p><h2 id="某些行數不想被檢查可以跳過檢查嗎">某些行數不想被檢查，可以跳過檢查嗎</h2><p>基於某些原因，某些 code 不想被 RuboCop 檢查 <s>(說白就是不想處理 XD</s></p><p>想跳過檢查的話，可參考此 <a href="https://github.com/River-Ye/ironman_12th_2020/pull/1/commits/34a64825f160f9dc5d711e178ce4c49ff0da1d60" target="_blank" rel="noopener">commit</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 依照 RuboCop 提醒，後面 oo_xx 改成對應的內容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rubocop:disable oo_xx</span></span><br><span class="line">your code</span><br><span class="line"><span class="comment"># rubocop:enable oo_xx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rubocop:disable Style/TrailingCommaInHashLiteral</span></span><br><span class="line">your code</span><br><span class="line"><span class="comment"># rubocop:enable Style/TrailingCommaInHashLiteral</span></span><br></pre></td></tr></table></figure></p><h2 id="vs-code-套件">VS code 套件</h2><p>每次都要輸入 <code>rubocop</code> 才知道哪些要改，好麻煩，<br>有沒有視覺化的工具可以協助呢?</p><h4 id="vs-code-有套件推薦使用ruby-rubocop">VS code 有套件推薦使用「ruby-rubocop」</h4><h4 id="套件名稱-ruby-rubocop">套件名稱: ruby-rubocop</h4><h4 id="套件連結-httpsmarketplacevisualstudiocomitemsitemnamemisogiruby-rubocop">套件連結: <a href="https://marketplace.visualstudio.com/items?itemName=misogi.ruby-rubocop" target="_blank" rel="noopener">https://marketplace.visualstudio.com/items?itemName=misogi.ruby-rubocop</a></h4><p><img src="https://i.imgur.com/tpuARTz.png" alt></p><h4 id="vs-code-示範畫面">VS code 示範畫面</h4><p><img src="https://i.imgur.com/pe4dE6c.gif" alt></p><hr><h2 id="參考">參考</h2><p><a href="https://5xruby.tw/posts/rubocop-intro/" target="_blank" rel="noopener">機器戰警 RuboCop</a></p><h2 id="小結">小結</h2><p>RuboCop 真的是又愛又恨的套件，好處是讓大家風格一致，壞處是處理時挺花時間的，遇到不知怎解決的問題時，Goolge 會是你的好朋友，<s>再不行就跳過檢查(誤</s></p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10240956" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10240956</a><br>medium 文章連結：<a href="https://link.medium.com/fx6sSkzeW9" target="_blank" rel="noopener">https://link.medium.com/fx6sSkzeW9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/21/Day16-Ruby-on-Rails-%E4%B8%AD%E7%9A%84%E9%A2%A8%E6%A0%BC%E7%AE%A1%E7%90%86%E5%A5%97%E4%BB%B6-RuboCop/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;多人協作時，通常會規範 style，像是統一使用單引號、雙引號、每個方法最多不能超過幾行、每行的長度限制等&lt;br&gt;
這時就需要透過 RuboCop 來進行把關&lt;/p&gt;
&lt;p&gt;後續的文章會以此 &lt;a href=&quot;https://gith
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day15 - 如何看自己打出去的 request 完整資訊，以 PostBin 和 Webhook.site 為例</title>
    <link href="https://riverye.com/2020/09/20/Day15-%E5%A6%82%E4%BD%95%E7%9C%8B%E8%87%AA%E5%B7%B1%E6%89%93%E5%87%BA%E5%8E%BB%E7%9A%84-request-%E5%AE%8C%E6%95%B4%E8%B3%87%E8%A8%8A%EF%BC%8C%E4%BB%A5-PostBin-%E5%92%8C-Webhook-site-%E7%82%BA%E4%BE%8B/"/>
    <id>https://riverye.com/2020/09/20/Day15-如何看自己打出去的-request-完整資訊，以-PostBin-和-Webhook-site-為例/</id>
    <published>2020-09-19T16:00:00.000Z</published>
    <updated>2020-09-20T15:49:48.336Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>串接 API 時，通常會取得對方的文件，沒有就...通靈吧 XD</p><p>若想看自己發送的 request 完整資訊，可使用 <a href="https://postb.in/" target="_blank" rel="noopener">PostBin</a> 或 <a href="https://webhook.site/" target="_blank" rel="noopener">Webhook.site</a> 這兩個網站進行查看</p><p>以下分別使用 Runy on Rails 的 <code>Net::HTTP</code> 、 <code>REST Client</code> 、 <code>HTTP</code> 進行示範，皆能做到一樣的事情</p><hr><h2 id="nethttp">Net::HTTP</h2><p>為 Ruby 內建的 library ，無需額外安裝 gem<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'net/http'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 網址要記得換</span></span><br><span class="line">url = <span class="string">"https://postb.in/ooo-xxx"</span></span><br><span class="line">uri = URI.parse(url)</span><br><span class="line">params = &#123; <span class="symbol">name:</span> <span class="string">'river'</span>, <span class="symbol">content:</span> <span class="string">'hello world'</span> &#125;</span><br><span class="line">response = Net::HTTP.post_form(uri, params)</span><br><span class="line">response.code</span><br></pre></td></tr></table></figure></p><h4 id="示範在-irb-中使用-nethttp-打-api-到-postbin">示範在 <code>irb</code> 中使用 <code>Net::HTTP</code> 打 API 到 PostBin</h4><p><img src="https://i.imgur.com/NHIf31U.gif" alt></p><h4 id="示範在-irb-中使用-nethttp-打-api-到-webhooksite">示範在 <code>irb</code> 中使用 <code>Net::HTTP</code> 打 API 到 Webhook.site</h4><p><img src="https://i.imgur.com/JLgMxSv.gif" alt></p><h4 id="由於另外-2-套操作手感與截圖大同小異故不另外製作-gif-操作範例">由於另外 2 套操作手感與截圖大同小異，故不另外製作 Gif 操作範例</h4><p>參考資料: <a href="https://ruby-doc.org/stdlib-2.7.0/libdoc/net/http/rdoc/Net/HTTP.html" target="_blank" rel="noopener">Net::HTTP</a></p><hr><h2 id="rest-client">REST Client</h2><p>在 <a href="https://rubygems.org/gems/rest-client" target="_blank" rel="noopener">RubyGems</a> 的下載高達 1.5 億次以上，非常驚人的下載次數!!</p><p>且官方 GitHub 有提供範例，非常清楚易懂</p><p>備註: <a href="https://github.com/rest-client/rest-client" target="_blank" rel="noopener">官方網站</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 Ruby on Rails 專案中的 Gemfile 加入以下這段</span></span><br><span class="line">gem <span class="string">'rest-client'</span>, <span class="string">'~&gt; 2.1'</span></span><br><span class="line"><span class="comment"># 記得要 bundle 才能使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下為在 rails console 操作</span></span><br><span class="line"><span class="comment"># 網址要記得換</span></span><br><span class="line">url = <span class="string">"https://postb.in/ooo-xxx"</span></span><br><span class="line">payload = &#123; <span class="symbol">name:</span> <span class="string">'river'</span>, <span class="symbol">content:</span> <span class="string">'hello world'</span> &#125;</span><br><span class="line">response = RestClient.post(url, payload.to_json, <span class="symbol">content_type:</span> <span class="symbol">:json</span>, <span class="symbol">accept:</span> <span class="symbol">:json</span>, <span class="symbol">user_agent:</span> <span class="string">'myagent'</span>)</span><br><span class="line">response.code</span><br></pre></td></tr></table></figure></p><hr><h2 id="http">HTTP</h2><p>在 <a href="https://rubygems.org/gems/http" target="_blank" rel="noopener">RubyGems</a> 的下載超過 3600 萬次以上，也是很驚人的下載次數</p><p>最後更新時間比 REST Client 還新，且 <a href="https://github.com/httprb/http" target="_blank" rel="noopener">GitHub</a> 上有將 Ruby 生態圈中常見的 HTTP library 比較一輪</p><p>三個相比下，也是我個人比較常用的 Gem</p><p>備註: <a href="https://github.com/httprb/http" target="_blank" rel="noopener">官方網站</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 Ruby on Rails 專案中的 Gemfile 加入以下這段</span></span><br><span class="line">gem <span class="string">'http'</span>, <span class="string">'~&gt; 4.4'</span>, <span class="string">'&gt;= 4.4.1'</span></span><br><span class="line"><span class="comment"># 記得要 bundle 才能使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下為在 rails console 操作</span></span><br><span class="line"><span class="comment"># 網址要記得換</span></span><br><span class="line">url = <span class="string">'https://postb.in/ooo-xxx'</span></span><br><span class="line">body = &#123; <span class="symbol">name:</span> <span class="string">'river'</span>, <span class="symbol">content:</span> <span class="string">'hello world'</span> &#125;</span><br><span class="line">response = HTTP.post(url, <span class="symbol">json:</span> body)</span><br><span class="line">response.code</span><br></pre></td></tr></table></figure></p><h2 id="小結">小結</h2><p>主要是介紹如何透過工具查詢自己 request 的完整資訊 (Headers、Body等)</p><p>並沒有針對 response 的處理說明，畢竟 <code>response.body</code> 每個 API 回傳皆不同</p><p>先從拿到 HTTP 200 開始，後續怎處理 response 依需求而定</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10240421" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10240421</a><br>medium 文章連結：<a href="https://link.medium.com/jTboFdd7U9" target="_blank" rel="noopener">https://link.medium.com/jTboFdd7U9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/20/Day15-%E5%A6%82%E4%BD%95%E7%9C%8B%E8%87%AA%E5%B7%B1%E6%89%93%E5%87%BA%E5%8E%BB%E7%9A%84-request-%E5%AE%8C%E6%95%B4%E8%B3%87%E8%A8%8A%EF%BC%8C%E4%BB%A5-PostBin-%E5%92%8C-Webhook-site-%E7%82%BA%E4%BE%8B/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;串接 API 時，通常會取得對方的文件，沒有就...通靈吧 XD&lt;/p&gt;
&lt;p&gt;若想看自己發送的 request 完整資訊，可使用 &lt;a href=&quot;https://postb.in/&quot; target=&quot;_blank&quot; rel=&quot;no
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day14 - 在 Ruby 中使用 Benchmark 比較哪個方法比較快</title>
    <link href="https://riverye.com/2020/09/19/Day14-%E5%9C%A8-Ruby-%E4%B8%AD%E4%BD%BF%E7%94%A8-Benchmark-%E6%AF%94%E8%BC%83%E5%93%AA%E5%80%8B%E6%96%B9%E6%B3%95%E6%AF%94%E8%BC%83%E5%BF%AB/"/>
    <id>https://riverye.com/2020/09/19/Day14-在-Ruby-中使用-Benchmark-比較哪個方法比較快/</id>
    <published>2020-09-18T16:00:00.000Z</published>
    <updated>2020-09-18T16:04:13.261Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>總算開始進入 Ruby 程式語言的世界中，再不寫點什麼，都快與鐵人賽報名的題目不相干，變成標題殺人惹 XD</p><p>後續 Ruby on Rails 的相關文章，假定讀者為已經有 CRUD 基礎上(或有工作經驗)，進而分享，故不從環境建置等開始說起 (若有興趣想從頭學，可參考這篇環境建置 <a href="https://riverye.com/2019/10/12/Windows%2010%20%E5%AE%89%E8%A3%9D%20Ruby%20+%20Rails%20+%20Node.js%20+%20Git%20+%20postgresql/">Windows 10 安裝 Ruby + Rails + Node.js + Git + postgresql</a>，然後自學)</p><hr><h2 id="benchmark">Benchmark</h2><p>中文翻譯為「基準測試」，為 Ruby 內建的 <code>module</code>，用於評估程式的效能</p><h3 id="情境">情境</h3><p>寫了一段程式，想到幾種寫法皆能做到一樣的事情，但想知道哪個效能比較好的話，可以用 Benchmark，在 Ruby 或 Ruby on Rails 中皆能使用</p><h3 id="如何測試">如何測試</h3><p>以下這段有 3 種方法可以測試：</p><ol><li>在 Ruby 的 <code>irb</code> 模式中，貼上以下的程式碼</li><li>在 Ruby on Rails 的 <code>rails console</code> (可縮寫成 <code>rails c</code>) 中，貼上以下的程式碼</li><li>將以下這段存成 <code>test.rb</code> 檔，在終端機輸入 <code>ruby test.rb</code><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'benchmark'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="comment"># n 為要測試的次數</span></span><br><span class="line">  n = <span class="number">5000000</span></span><br><span class="line">  y = Benchmark.bm <span class="keyword">do</span> <span class="params">|x|</span></span><br><span class="line">    x.report(<span class="string">"&lt;&lt;    "</span>) &#123; n.times &#123; [] &lt;&lt; <span class="string">'river'</span> &#125; &#125;</span><br><span class="line">    x.report(<span class="string">"push  "</span>) &#123; n.times &#123; [].push(<span class="string">'river'</span>) &#125; &#125;</span><br><span class="line">    x.report(<span class="string">"concat"</span>) &#123; n.times &#123; [].concat([<span class="string">'river'</span>]) &#125; &#125;</span><br><span class="line">    x.report(<span class="string">"+     "</span>) &#123; n.times &#123; [] + [<span class="string">'river'</span>] &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="顯示如下">顯示如下</h4><table><thead><tr><th>name</th><th>user</th><th>system</th><th>total</th><th>real</th></tr></thead><tbody><tr><td>&lt;&lt;</td><td>0.600000</td><td>0.000000</td><td>0.600000</td><td>(  0.615966)</td></tr><tr><td>push</td><td>0.650000</td><td>0.000000</td><td>0.650000</td><td>(  0.658296)</td></tr><tr><td>concat</td><td>1.230000</td><td>0.010000</td><td>1.240000</td><td>(  1.234671)</td></tr><tr><td>+</td><td>1.010000</td><td>0.000000</td><td>1.010000</td><td>(  1.034694)</td></tr></tbody></table><h4 id="irb-測試的畫面"><code>irb</code> 測試的畫面</h4><p><img src="https://i.imgur.com/rznoF2B.png" alt></p><h4 id="rails-c-測試的畫面"><code>rails c</code> 測試的畫面</h4><p><img src="https://i.imgur.com/63OEQ41.png" alt></p><h2 id="小結">小結</h2><p>從上述情境中可以發現使用 <code>&lt;&lt;</code> 效能比較好<br>但不等於 <code>&lt;&lt;</code> 這方法是最好的，端看情境應用<br>尤其在 SQL Query 時，更是明顯</p><h2 id="參考資料">參考資料</h2><p><a href="https://ruby-doc.org/stdlib-2.5.0/libdoc/benchmark/rdoc/Benchmark.html" target="_blank" rel="noopener">Benchmark</a></p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10239641" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10239641</a><br>medium 文章連結：<a href="https://link.medium.com/epApulKUS9" target="_blank" rel="noopener">https://link.medium.com/epApulKUS9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/19/Day14-%E5%9C%A8-Ruby-%E4%B8%AD%E4%BD%BF%E7%94%A8-Benchmark-%E6%AF%94%E8%BC%83%E5%93%AA%E5%80%8B%E6%96%B9%E6%B3%95%E6%AF%94%E8%BC%83%E5%BF%AB/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;總算開始進入 Ruby 程式語言的世界中，再不寫點什麼，都快與鐵人賽報名的題目不相干，變成標題殺人惹 XD&lt;/p&gt;
&lt;p&gt;後續 Ruby on Rails 的相關文章，假定讀者為已經有 CRUD 基礎上(或有工作經驗)，進而分享，故不
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day12 - 一些 Linux 套件 - 7-7 - 不實用篇 (cowsay、cmatrix)</title>
    <link href="https://riverye.com/2020/09/17/Day12-%E4%B8%80%E4%BA%9B-Linux-%E5%A5%97%E4%BB%B6-7-7-%E4%B8%8D%E5%AF%A6%E7%94%A8%E7%AF%87-cowsay%E3%80%81cmatrix/"/>
    <id>https://riverye.com/2020/09/17/Day12-一些-Linux-套件-7-7-不實用篇-cowsay、cmatrix/</id>
    <published>2020-09-16T16:00:00.000Z</published>
    <updated>2020-09-17T15:58:09.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>此為 Linux 相關的 7-7 篇，有實用篇，當然也有不實用篇 (笑<br>這篇的套件不裝也沒關係，裝了也不能幹嘛<br>有時自己會邊看邊笑 (廢到笑的那種 XD</p><h2 id="cowsay">cowsay</h2><p>透過 ASCII 產生一個角色 (預設為母牛)，並說出一段話</p><p>(謎之聲，套件名稱試著用台語發音看看 XD</p><p>備註：需另外安裝 <a href="https://github.com/tnalpgge/rank-amateur-cowsay" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS、Linux 原生不支援這指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install cowsay</span><br><span class="line"></span><br><span class="line">cowsay -l</span><br><span class="line">cowsay <span class="string">'hello world'</span></span><br><span class="line">cowsay -f dragon <span class="string">"一條龍laaa"</span></span><br><span class="line">cowsay -f kitty 根本不像kitty的的kitty</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>列出所有可用的角色： <code>-l</code><br>切換角色： <code>-f character</code></p><h4 id="cowsay-示意圖"><code>cowsay</code> 示意圖</h4><p><img src="https://i.imgur.com/xzOSTQh.png" alt></p><h2 id="cmatrix">cmatrix</h2><p>像駭客任務那樣的電腦螢幕畫面<br>很炫炮，然後..就沒有然後了 XD</p><p>備註：需另外安裝 <a href="https://github.com/abishekvashok/cmatrix" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS、Linux 原生不支援這指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install cmatrix</span><br><span class="line"></span><br><span class="line">cmatrix</span><br><span class="line">cmatrix -C red</span><br><span class="line">cmatrix -C yellow</span><br><span class="line">cmatrix -r</span><br></pre></td></tr></table></figure></p><p>離開方式： <code>鍵盤Q</code></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>設定顯示的顏色： <code>-C color</code><br>彩虹模式： <code>-r</code></p><h4 id="cmatrix-示意圖"><code>cmatrix</code> 示意圖</h4><p><img src="https://i.imgur.com/Accuqgc.gif" alt></p><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>cowsay</td><td>透過 ASCII 產生一個角色 (預設為母牛)，並說出一段話</td><td><code>cowsay -f dragon 安安</code></td></tr><tr><td>cmatrix</td><td>像駭客任務那樣的電腦螢幕畫面</td><td><code>cmatrix</code></td></tr></tbody></table><h2 id="小結">小結</h2><p>Linux 指令系列的最後一篇，以歡樂的方式收尾<br>有其它廢到笑或不實用的套件，歡迎留言交流~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10238183" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10238183</a><br>medium 文章連結：<a href="https://link.medium.com/IaMPuOTAP9" target="_blank" rel="noopener">https://link.medium.com/IaMPuOTAP9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/17/Day12-%E4%B8%80%E4%BA%9B-Linux-%E5%A5%97%E4%BB%B6-7-7-%E4%B8%8D%E5%AF%A6%E7%94%A8%E7%AF%87-cowsay%E3%80%81cmatrix/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;此為 Linux 相關的 7-7 篇，有實用篇，當然也有不實用篇 (笑&lt;br&gt;
這篇的套件不裝也沒關係，裝了也不能幹嘛&lt;br&gt;
有時自己會邊看邊笑 (廢到笑的那種 XD&lt;/p&gt;
&lt;h2 id=&quot;cowsay&quot;&gt;cowsay&lt;/h2&gt;

      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day11 - 一些 Linux 套件 - 6-7 - 實用篇 (fzf、tldr)</title>
    <link href="https://riverye.com/2020/09/16/Day11-%E4%B8%80%E4%BA%9B-Linux-%E5%A5%97%E4%BB%B6-6-7-%E5%AF%A6%E7%94%A8%E7%AF%87-fzf%E3%80%81tldr/"/>
    <id>https://riverye.com/2020/09/16/Day11-一些-Linux-套件-6-7-實用篇-fzf、tldr/</id>
    <published>2020-09-15T16:00:00.000Z</published>
    <updated>2020-09-16T15:47:00.368Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>此為 Linux 相關的 6-7 篇，後 2 篇我自己是比較期待 <s>(才不會承認是因為需要寫得比較少呢</s><br>本篇以實用套件為主，幾乎每天都在使用的</p><h2 id="fzf">fzf</h2><p>指令模糊搜尋器<br>能快速搜尋「曾經輸入過」的指令<br>像平常起 rails server 指令是 <code>./bin/rails s -p 4000</code><br>輸入全部實在太長了<br>透過 <code>fzf</code> 只需輸入 <code>sp4</code> 就能快速找到</p><p>備註：需另外安裝 <a href="https://github.com/junegunn/fzf" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS、Linux 原生不支援這指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install fzf</span><br></pre></td></tr></table></figure></p><p>使用方式： <code>Control（或 Ctrl）鍵 ⌃</code> + <code>R</code> + <code>command</code>離開方式： <code>ESC</code></p><h4 id="透過-fzf-搜尋曾輸入過的指令">透過 <code>fzf</code> 搜尋曾輸入過的指令</h4><p><img src="https://i.imgur.com/cIjlXSZ.gif" alt></p><h2 id="tldr">tldr</h2><p>查詢指令簡易說明與範例的工具<br>不瞞各位說，這 7 篇文章中，許多參數和範例，是透過 <code>tldr</code> 在參考的 XD</p><p>備註：需另外安裝 <a href="https://github.com/tldr-pages/tldr" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS、Linux 原生不支援這指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install tldr</span><br><span class="line"></span><br><span class="line">tldr <span class="built_in">command</span></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">tldr tldr</span><br><span class="line">tldr cat</span><br><span class="line">tldr ps</span><br><span class="line">tldr grep</span><br></pre></td></tr></table></figure></p><h4 id="tldr-查詢的畫面"><code>tldr</code> 查詢的畫面</h4><p><img src="https://i.imgur.com/SU1mdpo.png" alt></p><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>fzf</td><td>指令模糊搜尋器</td><td><code>Control（或 Ctrl）鍵 ⌃</code> + <code>R</code> + <code>command</code></td></tr><tr><td>tldr</td><td>查詢指令簡易說明與範例的工具</td><td><code>tldr cat</code></td></tr></tbody></table><h2 id="小結">小結</h2><p>除了用 <code>fzf</code> 快速找曾經輸入過的指令外<br>也可將常用指令寫成 alias (像我自己將 <code>git status</code> 改成只需輸入 <code>git s</code> 即可)<br>若有不錯的套件，也歡迎在下方留言交流喔</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10237413" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10237413</a><br>medium 文章連結：<a href="https://link.medium.com/W5OE67YVN9" target="_blank" rel="noopener">https://link.medium.com/W5OE67YVN9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/16/Day11-%E4%B8%80%E4%BA%9B-Linux-%E5%A5%97%E4%BB%B6-6-7-%E5%AF%A6%E7%94%A8%E7%AF%87-fzf%E3%80%81tldr/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;此為 Linux 相關的 6-7 篇，後 2 篇我自己是比較期待 &lt;s&gt;(才不會承認是因為需要寫得比較少呢&lt;/s&gt;&lt;br&gt;
本篇以實用套件為主，幾乎每天都在使用的&lt;/p&gt;
&lt;h2 id=&quot;fzf&quot;&gt;fzf&lt;/h2&gt;
&lt;p&gt;指令模糊搜尋
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day10 - 一些常用 Linux 指令 - 5-7 (lsof、dig、curl、nc、nice、cpulimit)</title>
    <link href="https://riverye.com/2020/09/15/Day10-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-5-7-lsof%E3%80%81dig%E3%80%81curl%E3%80%81nc%E3%80%81nice%E3%80%81cpulimit/"/>
    <id>https://riverye.com/2020/09/15/Day10-一些常用-Linux-指令-5-7-lsof、dig、curl、nc、nice、cpulimit/</id>
    <published>2020-09-14T16:00:00.000Z</published>
    <updated>2020-09-15T15:59:12.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>此為 Linux 相關的 5-7 篇，終於進入 Linux 後半部，寫到有點厭世 XD</p><h2 id="lsof">lsof</h2><p>全名為 List Open Files，列出當前被開啟的文件資訊<br>非常實用的監控、查詢、診斷工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">lsof path</span><br><span class="line">lsof -u username</span><br><span class="line">lsof +d path</span><br><span class="line">lsof +D path</span><br><span class="line">lsof -p PID</span><br><span class="line">lsof -i :port</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">lsof ~/Documents/demo</span><br><span class="line">lsof -u root</span><br><span class="line">lsof +d ~/Documents/demo</span><br><span class="line">lsof +D ~/Documents/demo</span><br><span class="line">lsof -p 9527</span><br><span class="line">lsof -i :80</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>列出指定使用者打開的文件訊息： <code>-u username</code><br>列出目錄下被開啟的文件訊息： <code>+d path</code><br>列出目錄下被開啟的文件訊息 (含底下的目錄)： <code>+D path</code><br>列出指定 PID 所開啟的文件訊息： <code>-p PID</code><br>列出指定 port 的連線訊息： <code>-i :port</code></p><h2 id="dig">dig</h2><p>domain 查詢工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dig domain</span><br><span class="line">dig -x target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">dig www.google.com</span><br><span class="line">dig -x 8.8.8.8</span><br><span class="line">dig -x riverye.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將輸出結果存成檔案</span></span><br><span class="line">dig www.google.com &gt; info.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>反解析： <code>-x target</code><br>追蹤網域經過哪些節點： <code>+trace domain</code></p><h2 id="curl">curl</h2><p>與 server 雙向傳輸資料的工具</p><p>發現已經有許多不錯的文章可以參考<br><s>故省略 (威，又偷懶惹</s></p><p>僅寫下比較常用小技巧<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 將 https://riverye.com 查詢結果儲存成 riverye.html 檔案</span></span><br><span class="line">curl https://riverye.com &gt; ~/Documents/demo/riverye.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># -vvv 為顯示詳細資訊</span></span><br><span class="line">curl -vvv ifconfig.me</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查詢電腦的 IP</span></span><br><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure></p><h4 id="參考資料">參考資料</h4><ol><li><a href="https://blog.techbridge.cc/2019/02/01/linux-curl-command-tutorial/" target="_blank" rel="noopener">Linux Curl Command 指令與基本操作入門教學</a></li><li><a href="https://link.medium.com/J2F0UXTFy9" target="_blank" rel="noopener">[curl] 基本操作與指令 — 搭配 Lidemy HTTP Challenge 實作</a></li></ol><h2 id="nc">nc</h2><p>全名為 netcat，處理 TCP/UDP 的工具<br>非常實用，可以做許多事情，像是通訊埠掃描、簡易聊天室、檔案傳輸等</p><p>備註: 對於不熟悉的指令，皆可透過 <code>man</code> 來看文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">nc -l port</span><br><span class="line">nc ip_address port</span><br><span class="line">nc -w timeout_in_seconds ipaddress port</span><br><span class="line">nc -v -z ip_address port</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">nc -l localhost 8888</span><br><span class="line">nc localhost 8888</span><br><span class="line">nc -w 10 localhost 9527</span><br><span class="line">nc -n -v -z 192.168.1.1 80-100</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>監聽模式： <code>-l</code><br>設定 Timeout (單位: sec)： <code>-w timeout_in_seconds</code><br>不進行 DNS 查詢： <code>-n</code><br>顯示掃描訊息： <code>-v</code><br>只掃描無資料傳輸： <code>-z</code></p><p>簡易聊天室<br><img src="https://i.imgur.com/yvX4LH1.gif" alt></p><p>傳送檔案<br><img src="https://i.imgur.com/3PoWi7p.gif" alt></p><h4 id="參考資料">參考資料</h4><ol><li><a href="https://myapollo.com.tw/zh-tw/linux-command-nc/" target="_blank" rel="noopener">Linunx 指令 nc 用法</a></li><li><a href="https://blog.gtwang.org/linux/linux-utility-netcat-examples/" target="_blank" rel="noopener">Netcat（Linux nc 指令）網路管理者工具實用範例</a></li></ol><h2 id="nice">nice</h2><p>設定程式執行的優先權 (範圍是 -20 ~ 19)<br>-20 為最高優先權<br>19 為最低優先權</p><p>備註: 輸入小於 0 ，要有 root 權限，如果範圍超過 19，則會做為 19<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nice -n count <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">sudo nice -n 15 chromedriver</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>設定優先權 (N 範圍是 -20 ~ 19)： <code>-n N</code></p><h2 id="cpulimit">cpulimit</h2><p>限制 CPU 使用量</p><p>備註: 需另外安裝 <a href="https://github.com/opsengine/cpulimit" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS、Linux 原生不支援這指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install cpulimit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 限制 CPU 使用上限為 70%</span></span><br><span class="line">cpulimit -l 70 <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">cpulimit -l 70 rg <span class="string">'hello'</span></span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>限制 CPU 上限 (必填，N 範圍是 0 ~ 400)： <code>-l N</code> or <code>--limit=N</code><br>顯示控制統計： <code>-v</code> or <code>--verbose</code></p><p>(謎之聲，未來會有文章分享 <code>nice</code> 和 <code>cpulimit</code> 的應用</p><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>lsof</td><td>列出當前被開啟的文件資訊</td><td><code>lsof ~/Documents/demo</code></td></tr><tr><td>dig</td><td>domain 查詢工具</td><td><code>dig www.google.com</code></td></tr><tr><td>curl</td><td>與 server 雙向傳輸資料的工具</td><td><code>curl -vvv ifconfig.me</code></td></tr><tr><td>nc</td><td>處理 TCP/UDP 的工具</td><td><code>nc -v www.google.com 80</code></td></tr><tr><td>nice</td><td>設定程式執行的優先權 (範圍是 -20 ~ 19)</td><td><code>nice -n 19 htop</code></td></tr><tr><td>cpulimit</td><td>限制 CPU 使用量</td><td><code>cpulimit -l 50 htop</code></td></tr></tbody></table><h2 id="小結">小結</h2><p>發現這篇每個指令都可以寫成一篇，<br>網路搜尋能找到許多相關範例應用的教學文章，<br>由於本篇想以常用應用為主，<s>其實是不想寫太長</s><br>更多的應用可以透過 <code>man</code> 或上網查詢<br>也歡迎在下方留言互相交流</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10236845" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10236845</a><br>medium 文章連結：<a href="https://link.medium.com/It3HtR6gM9" target="_blank" rel="noopener">https://link.medium.com/It3HtR6gM9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/15/Day10-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-5-7-lsof%E3%80%81dig%E3%80%81curl%E3%80%81nc%E3%80%81nice%E3%80%81cpulimit/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;此為 Linux 相關的 5-7 篇，終於進入 Linux 後半部，寫到有點厭世 XD&lt;/p&gt;
&lt;h2 id=&quot;lsof&quot;&gt;lsof&lt;/h2&gt;
&lt;p&gt;全名為 List Open Files，列出當前被開啟的文件資訊&lt;br&gt;
非常實用的
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day09 - 一些常用 Linux 指令 - 4-7 (grep、rg、luit、iconv、cal、date)</title>
    <link href="https://riverye.com/2020/09/14/Day09-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-4-7-grep%E3%80%81rg%E3%80%81luit%E3%80%81iconv%E3%80%81cal%E3%80%81date/"/>
    <id>https://riverye.com/2020/09/14/Day09-一些常用-Linux-指令-4-7-grep、rg、luit、iconv、cal、date/</id>
    <published>2020-09-13T16:00:00.000Z</published>
    <updated>2020-09-13T16:10:55.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>此為 Linux 相關的 4-7 篇，有準備情境讓大家可以練習，開始會有組合技的使用技巧</p><h4 id="情境練習">情境練習</h4><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 將以下資訊儲存成 demo.log</span></span><br><span class="line"></span><br><span class="line">INFO [2099-01-11 13:14:40]: order_id: 0001, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-11 14:15:41]: 其它資訊</span><br><span class="line">INFO [2099-01-11 14:18:42]: order_id: 0002, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-12 10:00:10]: order_id: 0003, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-12 10:00:13]: 其它資訊</span><br><span class="line">INFO [2099-01-12 11:22:40]: order_id: ----, message: <span class="string">"建立失敗"</span></span><br><span class="line">INFO [2099-01-15 14:15:40]: order_id: 0004, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-15 23:34:10]: order_id: 0005, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-15 14:15:32]: order_id: 0006, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-15 14:15:33]: 其它資訊</span><br><span class="line">INFO [2099-01-16 14:15:24]: order_id: 0007, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-16 14:15:25]: order_id: ----, message: <span class="string">"建立失敗"</span></span><br><span class="line">INFO [2099-01-16 14:15:29]: order_id: 0008, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-01-16 14:15:30]: 其它資訊</span><br><span class="line">INFO [2099-01-16 14:15:30]: order_id: ----, message: <span class="string">"建立失敗"</span></span><br><span class="line">INFO [2099-12-25 08:15:40]: order_id: 0009, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-12-25 09:15:40]: 其它資訊</span><br><span class="line">INFO [2099-12-25 10:15:40]: order_id: 0010, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-12-25 11:15:40]: order_id: 0011, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-12-25 11:15:40]: order_id: 0012, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-12-25 15:15:40]: 其它資訊</span><br><span class="line">INFO [2099-12-25 16:15:40]: order_id: ----, message: <span class="string">"建立失敗"</span></span><br><span class="line">INFO [2099-12-25 17:15:40]: order_id: 0013, message: <span class="string">"建立成功"</span></span><br><span class="line">INFO [2099-12-25 20:15:40]: 其它資訊</span><br></pre></td></tr></table></figure></p><h2 id="grep">grep</h2><p>找出符合搜尋條件的訊息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 關鍵字 路徑</span></span><br><span class="line">grep search_pattern path</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出正在運行中的程式，關鍵字為 line</span></span><br><span class="line">ps aux | grep line</span><br><span class="line"></span><br><span class="line"><span class="comment"># 符合條件的上文也顯示 15 行</span></span><br><span class="line">grep -A 15 <span class="string">"成功"</span> demo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 符合條件的下文也顯示 20 行</span></span><br><span class="line">grep -B 20 <span class="string">"成功"</span> demo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 符合條件的下下各顯示 5 行</span></span><br><span class="line">grep -C 5 <span class="string">"成功"</span> demo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 計算關鍵字出現的次數</span></span><br><span class="line">grep -c <span class="string">"成功"</span> demo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 過濾除了關鍵字的訊息</span></span><br><span class="line">grep -v <span class="string">"其它"</span> demo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出符合 A or B 關鍵字的訊息</span></span><br><span class="line">grep -E <span class="string">"2099|成功"</span> demo.log</span><br><span class="line">grep -E <span class="string">'2099|成功'</span> demo.log</span><br><span class="line">grep <span class="string">'2099\|成功'</span> demo.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出符合 A and B 的關鍵字訊息</span></span><br><span class="line">grep <span class="string">"2099"</span> demo.log | grep 成功</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出 2099-01-16 建立成功的訂單數量</span></span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">grep <span class="string">'2099-01-16'</span> demo.log | grep -c 建立成功</span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">grep <span class="string">'2099-01-16'</span> demo.log | grep 建立成功 | wc -l</span><br><span class="line"><span class="comment"># 方法3</span></span><br><span class="line">grep <span class="string">'2099-01-16'</span> demo.log | grep -v -c <span class="string">'建立失敗\|其它資訊'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找出 2099-01-16 建立成功的資訊，並反轉印出</span></span><br><span class="line">grep <span class="string">'2099-01-16'</span> demo.log | grep 建立成功 | tac</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>符合條件的上文也顯示 n 行： <code>-A n</code><br>符合條件的下文也顯示 n 行： <code>-B n</code><br>符合條件的上下各顯示 n 行： <code>-C n</code><br>計算符合條件的數量： <code>-c</code><br>除了關鍵字以外的訊息，其它全顯示： <code>-v</code><br>用正規表示式搜尋 (regexp)： <code>-E</code></p><h2 id="rg">rg</h2><p>全名為 ripgrep ，為 <code>grep</code> 加強版，<br>用起來手感與 <code>grep</code> 差不多，搜尋速度更快，個人習慣以 <code>rg</code> 取代 <code>grep</code></p><p>備註: 需另外安裝 <a href="https://github.com/BurntSushi/ripgrep" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS、Linux 原生不支援這指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install ripgrep</span><br><span class="line"></span><br><span class="line">rg 建立成功</span><br><span class="line">rg -uu 建立成功</span><br><span class="line">rg -C 7 建立失敗</span><br><span class="line">rg <span class="string">'2099|成功'</span> demo.log</span><br><span class="line">rg <span class="string">"2099"</span> demo.log | rg 成功</span><br><span class="line">rg -t <span class="built_in">log</span> 成功</span><br><span class="line"></span><br><span class="line">rg -z <span class="string">"成功"</span></span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>符合條件的上文也顯示 n 行： <code>-A n</code><br>符合條件的下文也顯示 n 行： <code>-B n</code><br>符合條件的上下各顯示 n 行： <code>-C n</code><br>計算符合條件的數量： <code>-c</code><br>除了關鍵字以外的訊息，其它全顯示： <code>-v</code><br>隱藏檔案及 <code>.gitignore</code> 檔也一併搜尋： <code>-uu</code><br>針對特定副檔名搜尋： <code>-t type</code><br>壓縮檔也一併搜尋： <code>-z</code> (支援格式 gzip、bzip2、xz、LZ4、LZMA、Brotli、Zstd)</p><p>(謎之聲，習慣在終端機直接輸入 <code>rg 關鍵字</code>，快速找該目錄底下所有符合條件的檔案及內容</p><h2 id="luit">luit</h2><p>將文件編碼轉換成另一種格式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS 原生不支援這指令</span></span><br><span class="line"><span class="comment"># Ubuntu 有支援</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install luit</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">luit -encoding big5 cat demo.txt</span><br><span class="line">luit -encoding big5 rg <span class="string">'訂單'</span> demo.txt</span><br></pre></td></tr></table></figure></p><h2 id="iconv">iconv</h2><p>多種國際編碼格式之間進行文字內碼的轉換<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iconv -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">cat order_info.txt | iconv -f big5</span><br><span class="line">iconv -f UTF-16 demo.log &gt; hello.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>顯示所有支援的編碼格式： <code>-l</code><br>將檔案進行編碼轉檔後，另存新檔案： <code>-f from_encoding input_file &gt; output_file</code></p><h4 id="以-big5-編碼檔案為例">以 BIG5 編碼檔案為例</h4><p><img src="https://i.imgur.com/akmeLJ3.png" alt></p><h2 id="cal">cal</h2><p>顯示行事曆資訊<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cal</span><br><span class="line">cal -3</span><br><span class="line">cal -m 12</span><br><span class="line">cal -y 2012</span><br><span class="line">cal 1 2012</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>顯示當月的前後一個月： <code>-3</code><br>顯示當年指定月份 (month 為 1-12)： <code>-m month</code><br>顯示指定年份月曆 (year 為 1..9999)： <code>-y year</code><br>顯示特定月份日曆 (參數範圍如上)： <code>month year</code></p><h2 id="date">date</h2><p>顯示系統日期時間資訊<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date</span><br><span class="line">date +%s</span><br><span class="line">date -r 1598937256</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>將當下時間轉成 Unix timestamp： <code>+%s</code><br>將 Unix timestamp 轉成人類看得懂的： <code>-r timestamp</code></p><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>grep</td><td>找出符合搜尋條件的訊息</td><td><code>rails routes | grep admin</code></td></tr><tr><td>rg</td><td><code>grep</code> 加強版</td><td><code>rg 訂單名稱</code></td></tr><tr><td>luit</td><td>將文件編碼轉換成另一種格式</td><td><code>luit -encoding big5 cat demo.txt</code></td></tr><tr><td>iconv</td><td>多種國際編碼格式之間進行文字內碼的轉換</td><td><code>cat order_info.txt | iconv -f big5</code></td></tr><tr><td>cal</td><td>顯示行事曆資訊</td><td><code>cal -m 7</code></td></tr><tr><td>date</td><td>顯示系統日期時間資訊</td><td><code>date</code></td></tr></tbody></table><h2 id="小結">小結</h2><p>這篇花蠻多時間在想情境及準備假資料，透過範例，能更快上手並學會組合技，<br>若覺得受用歡迎在下方留言或交流喔</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10236391" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10236391</a><br>medium 文章連結：<a href="https://link.medium.com/YFjvigcCK9" target="_blank" rel="noopener">https://link.medium.com/YFjvigcCK9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/14/Day09-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-4-7-grep%E3%80%81rg%E3%80%81luit%E3%80%81iconv%E3%80%81cal%E3%80%81date/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;此為 Linux 相關的 4-7 篇，有準備情境讓大家可以練習，開始會有組合技的使用技巧&lt;/p&gt;
&lt;h4 id=&quot;情境練習&quot;&gt;情境練習&lt;/h4&gt;
&lt;p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day08 - 一些常用 Linux 指令 - 3-7 (cat、tac、head、tail、vi、sed)</title>
    <link href="https://riverye.com/2020/09/13/Day08-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-3-7-cat%E3%80%81tac%E3%80%81head%E3%80%81tail%E3%80%81vi%E3%80%81sed/"/>
    <id>https://riverye.com/2020/09/13/Day08-一些常用-Linux-指令-3-7-cat、tac、head、tail、vi、sed/</id>
    <published>2020-09-12T16:00:00.000Z</published>
    <updated>2020-09-12T16:02:12.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>此為 Linux 相關的 3-7 篇，都是很常用的指令，每天學一點，並常使用，便會記下成為反射動作之一</p><h2 id="cat">cat</h2><p>將該檔案內容印在終端機上<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> | cat</span><br><span class="line">cat -n file</span><br><span class="line">cat file</span><br><span class="line">cat file1 file2</span><br><span class="line">cat file1 &gt; target_file</span><br><span class="line">cat file1 &gt;&gt; target_file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">git <span class="built_in">log</span> | cat</span><br><span class="line">cat -n 001.log</span><br><span class="line">cat 001.log &gt; 002.log</span><br><span class="line">cat 001.log &gt;&gt; 002.log</span><br><span class="line">cat 001.log 002.log &gt; 003.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>將輸入指令執行結果顯示在終端機上： <code>| cat</code><br>顯示行數： <code>-n</code><br>將多個文件覆蓋到目標文件中： <code>&gt;</code><br>將多個文件追加到目標文件中： <code>&gt;&gt;</code><br>備註: 目標文件若原本不存在，則直接建立新檔案</p><h2 id="tac">tac</h2><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tac file</span><br><span class="line"><span class="built_in">command</span> | tac</span><br><span class="line">tac file1 file2 &gt; target_file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">git <span class="built_in">log</span> --oneline --all --graph | tac</span><br><span class="line">tac 001.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>將輸入指令執行結果顯示在終端機上： <code>| tac</code><br>將多個文件覆蓋到目標文件中： <code>&gt;</code><br>將多個文件追加到目標文件中： <code>&gt;&gt;</code><br>備註: 目標文件若原本不存在，則直接建立新檔案</p><h2 id="head">head</h2><p>看該檔案頭部 (預設為 10 行)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">head file</span><br><span class="line">head -n 30 file</span><br><span class="line">head -c 25 file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">head 001.log</span><br><span class="line">head -n 30 001.log</span><br><span class="line">head -c 25 001.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>顯示前 N 行的訊息 (N 為數字)： <code>-n 30</code><br>顯示前 N bytes 的字元 (N 為數字)： <code>-c 25</code></p><h2 id="tail">tail</h2><p>看該檔案尾部 (預設為 10 行)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tail file</span><br><span class="line">tail -n 15 file</span><br><span class="line">tail -f file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">tail 001.log</span><br><span class="line">tail -n 001.log</span><br><span class="line">tail -f 001.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>顯示最後 N 行的訊息 (N 為數字)： <code>-n 30</code><br>持續讀取檔案，直到按 <code>Ctrl + c</code> 為止 (可觀察檔案持續更新的內容)： <code>-f</code></p><h2 id="vi">vi</h2><p>vi 編輯器，可新增、修改檔案、搜尋並取代文字等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi 001.log</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用指令說明">幾個常用指令說明：</h4><p>新增、編輯檔案： <code>vi file_name</code><br>編輯模式： 進入 vi 後，鍵盤 <code>i</code><br>離開編輯模式 (並非離開 vi 編輯器喔)： <code>ESC</code><br>不儲存離開 vi： <code>:q</code><br>不儲存強制離開 vi： <code>:q!</code><br>儲存且離開 vi ： <code>:wq</code><br>將檔案還原到最初狀態(進入 vi 後一開始的樣貌) ： <code>:e!</code><br>針對特定行數，搜尋並取代： <code>:s/string/new_string/g</code><br>針對整份文件，搜尋並取代： <code>:%s/string/new_string/g</code></p><h3 id="示範如何針對特定行數及整份文件進行搜尋並取代文字">示範如何針對特定行數及整份文件進行搜尋並取代文字</h3><p><img src="https://i.imgur.com/drxy63J.gif" alt></p><p>備註:  除了 vi 編輯器外，Linux 上知名編輯器還有 vim、nano</p><h2 id="sed">sed</h2><p>檔案處理工具，是一個管道命令，以行為單位處理，能做到字串取代、複製、刪除等<br>在寫這段時，發現網路上已經有許多不錯的文章及詳細說明，故省略撰寫 XD<br>挑了幾篇覺得不錯的，放下方參考文件，跟著練習，會更有感覺及上手喔 :)</p><h4 id="參考資料">參考資料</h4><ol><li><a href="http://linux.vbird.org/linux_basic/0330regularex.php#sed" target="_blank" rel="noopener">鳥哥的 Linux 私房菜 -- 第十一章、正規表示法與文件格式化處理</a></li><li><a href="https://codertw.com/%E5%89%8D%E7%AB%AF%E9%96%8B%E7%99%BC/392291/" target="_blank" rel="noopener">Linux中 sed 和 awk的用法詳解</a></li><li><a href="https://terryl.in/zh/linux-sed-command/" target="_blank" rel="noopener">Linux 指令 SED 用法教學、取代範例、詳解</a></li></ol><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>cat</td><td>將該檔案內容印在終端機上</td><td><code>cat demo.html</code></td></tr><tr><td>tac</td><td>反過來印出 cat 的內容</td><td><code>tac demo.html</code></td></tr><tr><td>head</td><td>看該檔案頭部 (預設為 10 行)</td><td><code>head -n 3 demo.html</code></td></tr><tr><td>tail</td><td>看該檔案尾部 (預設為 10 行)</td><td><code>tail -n 5 demo.html</code></td></tr><tr><td>vi</td><td>vi 編輯器，可新增、修改檔案、搜尋並取代文字等</td><td><code>vi demo.html</code></td></tr><tr><td>sed</td><td>檔案處理工具，是一個管道命令，以行為單位處理，能做到字串取代、複製、刪除等</td><td><code>sed -n '$p'</code></td></tr></tbody></table><h2 id="小結">小結</h2><p>在搜尋取代整份文件時，習慣以 <code>vi</code> 進行操作，<code>sed</code> 反而比較少用，<br>之前在批次改 SQL 資料庫的某字串時，覺得蠻方便的，與使用習慣有關</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10236105" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10236105</a><br>medium 文章連結：<a href="https://link.medium.com/4hDsZdhXI9" target="_blank" rel="noopener">https://link.medium.com/4hDsZdhXI9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/13/Day08-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-3-7-cat%E3%80%81tac%E3%80%81head%E3%80%81tail%E3%80%81vi%E3%80%81sed/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;此為 Linux 相關的 3-7 篇，都是很常用的指令，每天學一點，並常使用，便會記下成為反射動作之一&lt;/p&gt;
&lt;h2 id=&quot;cat&quot;&gt;cat&lt;/h2&gt;
&lt;p&gt;將該檔案內容印在終端機上&lt;br&gt;
&lt;figure class=&quot;high
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day07 - 一些常用 Linux 指令 - 2-7 (ps、top、htop、free、df、du、kill)</title>
    <link href="https://riverye.com/2020/09/12/Day07-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-2-7-ps%E3%80%81top%E3%80%81htop%E3%80%81free%E3%80%81df%E3%80%81du%E3%80%81kill/"/>
    <id>https://riverye.com/2020/09/12/Day07-一些常用-Linux-指令-2-7-ps、top、htop、free、df、du、kill/</id>
    <published>2020-09-11T16:00:00.000Z</published>
    <updated>2020-09-11T16:02:59.189Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>此為 Linux 相關的 2-7 篇，除了內建指令外，開始會介紹些不錯套件，需另外安裝的，會備註並附上官方連結</p><h2 id="ps">ps</h2><p>顯示運行中的程式相關資訊<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br><span class="line">ps aux</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只顯示符合 chrome 關鍵字的資訊</span></span><br><span class="line">ps aux | grep chrome</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>列出所有正在執行中的程式： <code>aux</code><br>只找符合特定關鍵字的內容： <code>| grep string</code></p><h2 id="top">top</h2><p>即時持續地顯示運行中的程式資訊<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line"></span><br><span class="line"><span class="comment"># 離開方式為 鍵盤Q</span></span><br></pre></td></tr></table></figure></p><h2 id="htop">htop</h2><p>即時持續地顯示運行中的程式資訊<br><code>top</code> 的加強版，外觀、功能也更強</p><p>備註: 需另外安裝 <a href="https://github.com/hishamhm/htop" target="_blank" rel="noopener">官方網站</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS 安裝指令</span></span><br><span class="line">brew install htop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 執行方式</span></span><br><span class="line">htop</span><br></pre></td></tr></table></figure></p><p>htop 介面<br><img src="https://i.imgur.com/Xe5t1ZG.png" alt></p><h2 id="free">free</h2><p>顯示記憶體使用狀況<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS 原生不支援這指令</span></span><br><span class="line"><span class="comment"># Ubuntu 有支援</span></span><br><span class="line"></span><br><span class="line">free</span><br></pre></td></tr></table></figure></p><p>(謎之聲，有了 <code>htop</code> 之後，<code>top</code> 和 <code>free</code> 可以洗洗睡了?</p><h2 id="df">df</h2><p>從 Filesystem (檔案系統) 取得目前的空間分配資訊，完整顯示目前檔案系統上還可以使用的容量大小<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br><span class="line">df .</span><br><span class="line">df -h ~/Documents/demo</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>以較易閱讀方式呈現： <code>-h</code></p><h2 id="du">du</h2><p>掃描當前目錄結構，並逐一累加檔案大小<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">du -h</span><br><span class="line">du -hm ~/Documents/demo</span><br><span class="line">du -h -m ~/Documents/demo</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>以較易閱讀方式呈現： <code>-h</code><br>單位以 KB： <code>-k</code><br>單位以 MB： <code>-m</code><br>單位以 GB： <code>-g</code></p><h2 id="kill">kill</h2><p>強制終止程式執行</p><p>情境：遇到程式當掉，卻無如預期關閉程式，甚至導致 CPU 飆高，需透過 <code>kill</code> 來處理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 PID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line"><span class="built_in">kill</span> -9 9527</span><br></pre></td></tr></table></figure></p><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>ps</td><td>顯示運行中的程式相關資訊</td><td><code>ps aux</code></td></tr><tr><td>top</td><td>即時持續地顯示運行中的程式資訊</td><td><code>top</code></td></tr><tr><td>htop</td><td>即時持續地顯示運行中的程式資訊</td><td><code>htop</code></td></tr><tr><td>free</td><td>顯示記憶體使用狀況</td><td><code>free</code></td></tr><tr><td>df</td><td>顯示目前還可以使用的容量大小</td><td><code>df</code></td></tr><tr><td>du</td><td>掃描當前目錄結構，並逐一累加檔案大小</td><td><code>du -h</code></td></tr><tr><td>kill</td><td>強制終止程式執行</td><td><code>kill -9 9527</code></td></tr></tbody></table><h2 id="小結">小結</h2><p><code>htop</code> 真的很實用，畫面看起來也比較炫砲，也能直接 <code>kill</code> PID，推薦必裝的套件之一。<br>其實每個指令都能寫成一篇，網路查下便能找到各指令的深入說明，更多細節參數設定等，本篇以應用為主。</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10235798" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10235798</a><br>medium 文章連結：<a href="https://link.medium.com/KnBM0DriH9" target="_blank" rel="noopener">https://link.medium.com/KnBM0DriH9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/12/Day07-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-2-7-ps%E3%80%81top%E3%80%81htop%E3%80%81free%E3%80%81df%E3%80%81du%E3%80%81kill/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;此為 Linux 相關的 2-7 篇，除了內建指令外，開始會介紹些不錯套件，需另外安裝的，會備註並附上官方連結&lt;/p&gt;
&lt;h2 id=&quot;ps&quot;&gt;ps&lt;/h2&gt;
&lt;p&gt;顯示運行中的程式相關資訊&lt;br&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day06 - 一些常用 Linux 指令 - 1-7 - 基礎篇 (exit、pwd、ls、cd、touch、mkdir、rm、cp、scp、mv、sudo、man、help、clear、which、find)</title>
    <link href="https://riverye.com/2020/09/11/Day06-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-1-7-%E5%9F%BA%E7%A4%8E%E7%AF%87-exit%E3%80%81pwd%E3%80%81ls%E3%80%81cd%E3%80%81touch%E3%80%81mkdir%E3%80%81rm%E3%80%81cp%E3%80%81scp%E3%80%81mv%E3%80%81sudo%E3%80%81man%E3%80%81help%E3%80%81clear%E3%80%81which%E3%80%81find/"/>
    <id>https://riverye.com/2020/09/11/Day06-一些常用-Linux-指令-1-7-基礎篇-exit、pwd、ls、cd、touch、mkdir、rm、cp、scp、mv、sudo、man、help、clear、which、find/</id>
    <published>2020-09-10T16:00:00.000Z</published>
    <updated>2020-09-11T15:37:00.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>預計會有 7 篇介紹 Linux 指令與套件，並提供一些範例讓大家可以更快了解及如何應用，那麼，直接開始吧</p><hr><h2 id="exit">exit</h2><p>嗯，就是離開，沒什麼好說的 XD<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></p><h2 id="pwd">pwd</h2><p>取得目前的路徑<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /Users/user/Documents/demo/</span></span><br></pre></td></tr></table></figure></p><h2 id="ls">ls</h2><p>取得當前資料夾與檔案名稱<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">ls -la</span><br><span class="line">ls -laSrt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可依需求調整參數</span></span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>以行的方式成列： <code>-l</code><br>顯示隱藏檔案： <code>-a</code><br>按照檔案大小排序： <code>-S</code><br>反向排序： <code>-r</code><br>按照修改時間排序： <code>-t</code></p><h4 id="查詢電腦規格-lshw">查詢電腦規格 <code>lshw</code></h4><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS 原生不支援這指令</span></span><br><span class="line"><span class="comment"># Ubuntu 有支援</span></span><br><span class="line"></span><br><span class="line">lshw</span><br></pre></td></tr></table></figure></p><h4 id="查詢-cpu-規格-lscpu">查詢 CPU 規格 <code>lscpu</code></h4><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MacOS 原生不支援這指令</span></span><br><span class="line"><span class="comment"># Ubuntu 有支援</span></span><br><span class="line"></span><br><span class="line">lscpu</span><br></pre></td></tr></table></figure></p><h2 id="cd">cd</h2><p>切換目錄<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切到桌面</span></span><br><span class="line"><span class="built_in">cd</span> ~/Desktop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切到上一層</span></span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切回上一次的目錄</span></span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure></p><h2 id="touch">touch</h2><p>建立檔案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch test.log</span><br><span class="line">touch hello.html</span><br></pre></td></tr></table></figure></p><p>建立指定日期時間檔案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch -t YYYYMMDDHHMM.SS filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">touch -t 202009011800.11 test.log</span><br></pre></td></tr></table></figure></p><h2 id="mkdir">mkdir</h2><p>建立資料夾<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">mkdir hello_world</span><br></pre></td></tr></table></figure></p><h2 id="rm">rm</h2><p>刪除檔案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm filename</span><br><span class="line">rm -i filename</span><br><span class="line">rm -r directory</span><br><span class="line">rm -d directory</span><br><span class="line">rm -rf anything</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>刪除前會再次確認： <code>-i</code><br>刪除資料夾(含裡面的檔案)： <code>-r</code><br>強制刪除(不會有提示)： <code>-f</code><br>只刪除空資料夾： <code>-d</code></p><h2 id="cp">cp</h2><p>複製檔案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp 來源檔案 目的地(可以是不同路徑並換檔名)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">cp test.TXT /tmp/<span class="built_in">test</span>-1.TXT</span><br></pre></td></tr></table></figure></p><h3 id="scp">scp</h3><p>在不同的 Linux 主機之間複製檔案</p><p>備註： 在不同 Linux 主機之間使用 scp 指令複製檔案時，遠端的 Linux 主機必須要開啟 SSH 遠端登入服務，否則無法使用 scp 指令複製檔案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">scp [帳號@來源主機]:來源檔案 目的地</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下指示為範例，直接輸入不會有反應</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 將遠端「考試100分.pdf」下載到「本地桌面」</span></span><br><span class="line">scp user_name@riverye.com:/home/data/考試100分.pdf ~/Desktop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將遠端「本地桌面」的「考試100分.pdf」上傳到遠端</span></span><br><span class="line">scp ~/Desktop/考試100分.pdf user_name@riverye.com:/home/data/</span><br></pre></td></tr></table></figure></p><h2 id="mv">mv</h2><p>移動檔案<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mv source_file target</span><br><span class="line">mv -f source_file target</span><br><span class="line">mv -i source_file target</span><br><span class="line">mv -n source_file target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">mv -i test.rb /tmp/</span><br></pre></td></tr></table></figure></p><h4 id="幾個常用參數說明">幾個常用參數說明：</h4><p>遇到同樣檔名要覆蓋前，不提示： <code>-f</code><br>遇到同樣檔名要覆蓋前，會有提示： <code>-i</code><br>不覆蓋同樣檔名： <code>-n</code></p><h2 id="sudo">sudo</h2><p>使用最高權限執行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo 你要下的指令</span><br></pre></td></tr></table></figure></p><h2 id="man">man</h2><p>查看指令說明文件</p><p>備註： 不知別的指令怎麼用，可以用這個查詢，很常用的小技巧!!!<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">man 指令</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">man ls</span><br><span class="line">man rm</span><br><span class="line">man sudo</span><br></pre></td></tr></table></figure></p><h2 id="help">help</h2><p>查看指令說明</p><p>備註： 很常用的小技巧!!<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">指令 --<span class="built_in">help</span></span><br><span class="line">指令 -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">cp --<span class="built_in">help</span></span><br><span class="line">cp -h</span><br></pre></td></tr></table></figure></p><h2 id="clear">clear</h2><p>清除終端機上的訊息 (往上捲看得到)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure></p><h2 id="which">which</h2><p>查詢指令的來源路徑<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> executable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line"><span class="built_in">which</span> sudo</span><br><span class="line"><span class="built_in">which</span> ruby</span><br><span class="line"><span class="built_in">which</span> rails</span><br></pre></td></tr></table></figure></p><h2 id="find">find</h2><p>找出符合條件的檔案或資料夾<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只找特定檔案大小範圍且符合關鍵字的檔案</span></span><br><span class="line">find <span class="built_in">test</span> -size +10k -size -10M</span><br></pre></td></tr></table></figure></p><hr><h2 id="總整理">總整理</h2><table><thead><tr><th>MacOS / Linux 指令</th><th>說明</th><th>範例</th></tr></thead><tbody><tr><td>exit</td><td>離開</td><td><code>exit</code></td></tr><tr><td>pwd</td><td>取得目前的路徑</td><td><code>pwd</code></td></tr><tr><td>ls</td><td>取得當前資料夾與檔案名稱</td><td><code>ls</code></td></tr><tr><td>cd</td><td>切換目錄</td><td><code>cd ~</code></td></tr><tr><td>touch</td><td>建立檔案</td><td><code>touch demo.html</code></td></tr><tr><td>mkdir</td><td>建立資料夾</td><td><code>mkdir demo</code></td></tr><tr><td>rm</td><td>刪除檔案</td><td><code>rm demo.html</code></td></tr><tr><td>cp</td><td>複製檔案</td><td><code>cp demo.html demo1.html</code></td></tr><tr><td>scp</td><td>在不同的 Linux 主機之間複製檔案</td><td><code>scp user_name@riverye.com:/home/data/考試100分.pdf ~/Desktop</code></td></tr><tr><td>mv</td><td>移動檔案</td><td><code>mv demo1.html ~</code></td></tr><tr><td>sudo</td><td>使用最高權限</td><td><code>sudo 欲使用的指令</code></td></tr><tr><td>man</td><td>查看指令說明文件</td><td><code>man pwd</code></td></tr><tr><td>help</td><td>查看指令說明</td><td><code>mv --help</code></td></tr><tr><td>clear</td><td>清除終端機上的訊息(往上捲看得到)</td><td><code>clear</code></td></tr><tr><td>which</td><td>查詢指令的來源路徑</td><td><code>which sudo</code></td></tr><tr><td>find</td><td>找出符合條件的檔案或資料夾</td><td><code>find .</code></td></tr></tbody></table><hr><h2 id="小結">小結</h2><p>這篇不知不覺就花了 5 小時左右準備和撰寫，<br>寫到眼睛快花了，過程中不停用 <code>man</code> 與  <code>help</code> 查詢其他指令的參數說明，<br>針對比較常用的提出來說明，若有不錯的組合技，歡迎下方留言交流 :)</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10235530" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10235530</a><br>medium 文章連結：<a href="https://link.medium.com/fi1zYzsEF9" target="_blank" rel="noopener">https://link.medium.com/fi1zYzsEF9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/11/Day06-%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8-Linux-%E6%8C%87%E4%BB%A4-1-7-%E5%9F%BA%E7%A4%8E%E7%AF%87-exit%E3%80%81pwd%E3%80%81ls%E3%80%81cd%E3%80%81touch%E3%80%81mkdir%E3%80%81rm%E3%80%81cp%E3%80%81scp%E3%80%81mv%E3%80%81sudo%E3%80%81man%E3%80%81help%E3%80%81clear%E3%80%81which%E3%80%81find/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;預計會有 7 篇介紹 Linux 指令與套件，並提供一些範例讓大家可以更快了解及如何應用，那麼，直接開始吧&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;exit&quot;&gt;exit&lt;/h2&gt;
&lt;p&gt;嗯，就是離開，沒什麼好說的 XD&lt;br&gt;
&lt;figur
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day05 - Mac、Chrome、iTerm2、Visual Studio Code 上常用的快捷鍵</title>
    <link href="https://riverye.com/2020/09/10/Day05-Mac%E3%80%81Chrome%E3%80%81iTerm2%E3%80%81Visual-Studio-Code-%E4%B8%8A%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%8D%B5/"/>
    <id>https://riverye.com/2020/09/10/Day05-Mac、Chrome、iTerm2、Visual-Studio-Code-上常用的快捷鍵/</id>
    <published>2020-09-09T16:00:00.000Z</published>
    <updated>2020-09-10T15:58:57.926Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>紀錄個人常用的 Mac 、 Chrome 、 iTerm2 、 <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Visual Studio Code</a> (以下簡稱 VS code) 的快捷鍵，若有覺得不錯但我沒分享的快捷鍵，歡迎留言互相交流 :)</p><hr><h2 id="mac-常用快捷鍵">Mac 常用快捷鍵</h2><p>開始前，可以先看下 Apple 官方文件 (<a href="https://support.apple.com/zh-tw/HT201236" target="_blank" rel="noopener">Mac 鍵盤快速鍵</a>)，然後發現會的都是裡面有寫的 XD</p><h4 id="列出以下幾種-mac-常用的快捷鍵">列出以下幾種 Mac 常用的快捷鍵：</h4><table><thead><tr><th>說明</th><th>快捷鍵</th></tr></thead><tbody><tr><td>複製</td><td><code>(Cmd）鍵 ⌘</code> + <code>C</code></td></tr><tr><td>剪下</td><td><code>(Cmd）鍵 ⌘</code> + <code>X</code></td></tr><tr><td>貼上</td><td><code>(Cmd）鍵 ⌘</code> + <code>V</code></td></tr><tr><td>還原</td><td><code>(Cmd）鍵 ⌘</code> + <code>Z</code></td></tr><tr><td>取消還原</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>Z</code></td></tr><tr><td>選取從游標處至最左邊</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>向左鍵</code></td></tr><tr><td>選取從游標處至最右邊</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>向右鍵</code></td></tr><tr><td>從游標處跳至最左邊</td><td><code>(Cmd）鍵 ⌘</code> + <code>向左鍵</code></td></tr><tr><td>從游標處跳至最右邊</td><td><code>(Cmd）鍵 ⌘</code> + <code>向右鍵</code></td></tr><tr><td>從游標處跳至最上面</td><td><code>(Cmd）鍵 ⌘</code> + <code>向上鍵</code></td></tr><tr><td>從游標處跳至最下面</td><td><code>(Cmd）鍵 ⌘</code> + <code>向下鍵</code></td></tr><tr><td>切換桌面</td><td><code>Control（或 Ctrl）鍵 ⌃</code> + <code>向左鍵</code> 或 <code>向右鍵</code></td></tr></tbody></table><p>參考資料：<a href="https://support.apple.com/zh-tw/HT201236" target="_blank" rel="noopener">Mac 鍵盤快速鍵</a></p><hr><h2 id="chrome-常用快捷鍵">Chrome 常用快捷鍵</h2><table><thead><tr><th>說明</th><th>快捷鍵</th></tr></thead><tbody><tr><td>重新整理</td><td><code>(Cmd）鍵 ⌘</code> + <code>R</code></td></tr><tr><td>新增分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>T</code></td></tr><tr><td>關閉分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>W</code></td></tr><tr><td>真 · 全螢幕 (要先進入全螢幕)</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>F</code></td></tr><tr><td>搜尋</td><td><code>(Cmd）鍵 ⌘</code> + <code>F</code></td></tr><tr><td>放大</td><td><code>(Cmd）鍵 ⌘</code> + <code>+</code></td></tr><tr><td>縮小</td><td><code>(Cmd）鍵 ⌘</code> + <code>-</code></td></tr><tr><td>切換分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>數字鍵</code></td></tr><tr><td>切至最左邊分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>數字鍵 1</code></td></tr><tr><td>切至最右邊分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>數字鍵 9</code></td></tr><tr><td>顯示/隱藏書籤</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>B</code></td></tr><tr><td>開發者工具</td><td><code>鍵盤 F12</code></td></tr><tr><td>打開/切換檢查元素模式和瀏覽器窗口</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>C</code></td></tr></tbody></table><p>參考資料：<a href="https://developers.google.com/web/tools/chrome-devtools/shortcuts?hl=zh-tw" target="_blank" rel="noopener">Chrome 鍵盤快捷鍵參考</a></p><hr><h2 id="iterm2-常用快捷鍵與指令">iTerm2 常用快捷鍵與指令</h2><table><thead><tr><th>說明</th><th>快捷鍵</th></tr></thead><tbody><tr><td>開新分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>T</code></td></tr><tr><td>關閉分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>W</code></td></tr><tr><td>左右切換分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>向左鍵</code> 或 <code>向右鍵</code></td></tr><tr><td>跳到指定分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>數字鍵</code></td></tr><tr><td>清除視窗上所有訊 (可往上捲)</td><td><code>(Cmd）鍵 ⌘</code> + <code>R</code></td></tr><tr><td>清除視窗上所有訊 (往上捲找不到)</td><td><code>(Cmd）鍵 ⌘</code> + <code>K</code></td></tr><tr><td>當前分頁新增水平分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>D</code></td></tr><tr><td>當前分頁新增垂直分頁</td><td><code>(Cmd）鍵 ⌘</code> + <code>D</code></td></tr><tr><td>開啟當前路徑的資料夾</td><td><code>open .</code></td></tr><tr><td>開啟特定路徑的資料夾</td><td><code>open {path}</code> ，範例: <code>open ~/Documents</code></td></tr><tr><td>開啟當前路徑 VScode</td><td><code>code .</code></td></tr><tr><td>開啟指定路徑 VScode</td><td><code>code {path}</code> ，範例: <code>code ~/Documents</code></td></tr><tr><td>清除游標左邊所有訊息</td><td><code>Control（或 Ctrl）鍵 ⌃</code> + <code>U</code></td></tr><tr><td>清除游標左邊訊息一段</td><td><code>Control（或 Ctrl）鍵 ⌃</code> + <code>W</code></td></tr><tr><td>清除游標右邊所有訊息</td><td><code>Control（或 Ctrl）鍵 ⌃</code> + <code>K</code></td></tr></tbody></table><p><img src="https://i.imgur.com/v8jS3wH.gif" alt></p><h4 id="設定開啟分頁時預設路徑">設定開啟分頁時，預設路徑：</h4><p><img src="https://i.imgur.com/K47ffDb.png" alt></p><h4 id="隨意操作示意圖">隨意操作示意圖</h4><p><img src="https://i.imgur.com/hTyh57D.gif" alt></p><hr><h2 id="vscode-常用快捷鍵">VScode 常用快捷鍵</h2><table><thead><tr><th>說明</th><th>快捷鍵</th></tr></thead><tbody><tr><td>開新檔案</td><td><code>(Cmd）鍵 ⌘</code> + <code>N</code></td></tr><tr><td>關閉檔案</td><td><code>(Cmd）鍵 ⌘</code> + <code>W</code></td></tr><tr><td>快速搜尋檔案</td><td><code>(Cmd）鍵 ⌘</code> + <code>P</code></td></tr><tr><td>命令面板</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>P</code></td></tr><tr><td>搜尋檔案內文</td><td><code>(Cmd）鍵 ⌘</code> + <code>F</code></td></tr><tr><td>搜尋路徑下符合條件的內文</td><td><code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>F</code></td></tr><tr><td>開/隱藏側邊欄</td><td><code>(Cmd）鍵 ⌘</code> + <code>B</code></td></tr><tr><td>開/隱藏面板</td><td><code>(Cmd）鍵 ⌘</code> + <code>J</code></td></tr><tr><td>放大</td><td><code>(Cmd）鍵 ⌘</code> + <code>+</code></td></tr><tr><td>縮小</td><td><code>(Cmd）鍵 ⌘</code> + <code>-</code></td></tr><tr><td>切割視窗</td><td><code>(Cmd）鍵 ⌘</code> + <code>\</code></td></tr></tbody></table><h4 id="同時選取符合條件的關鍵字-cmd鍵-d">同時選取符合條件的關鍵字： <code>(Cmd）鍵 ⌘</code> + <code>D</code></h4><p><img src="https://i.imgur.com/f6XtolL.gif" alt></p><h4 id="同時指定多行游標位置的方式-option或-alt鍵-shift-鍵-滑鼠左鍵">同時指定多行游標位置的方式： <code>Option（或 Alt）鍵 ⌥</code> + <code>Shift 鍵 ⇧</code> + <code>滑鼠左鍵</code></h4><p><img src="https://i.imgur.com/105Z3Wk.gif" alt></p><h4 id="當前路徑-vscode-再開一個新視窗">當前路徑 VScode 再開一個新視窗</h4><p>輸入「命令面板」快捷鍵，接著搜尋 dup 點「Duplicate Workspace in New Windows」<img src="https://i.imgur.com/U6ZXCRD.png" alt></p><h4 id="設定自動儲存">設定自動儲存</h4><p><img src="https://i.imgur.com/t4UtK0W.png" alt></p><h4 id="隨意操作示意圖">隨意操作示意圖</h4><p><img src="https://i.imgur.com/ZEHLPXp.gif" alt></p><hr><h2 id="小結">小結</h2><p>目前想到的快捷鍵如上，日後有想起或發現不錯的快捷鍵會再持續更新此篇，也歡迎在下方留言分享各種快捷鍵 :)</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10235273" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10235273</a><br>medium 文章連結：<a href="https://link.medium.com/BZq1ehbZD9" target="_blank" rel="noopener">https://link.medium.com/BZq1ehbZD9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/10/Day05-Mac%E3%80%81Chrome%E3%80%81iTerm2%E3%80%81Visual-Studio-Code-%E4%B8%8A%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%8D%B5/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;紀錄個人常用的 Mac 、 Chrome 、 iTerm2 、 &lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Visual Studio
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day04 - Mac 上常用的軟體 (iTerm2、Dash、Alfred、Spectacle、Kap、GIPHY Capture)</title>
    <link href="https://riverye.com/2020/09/09/Day04-Mac-%E4%B8%8A%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BB%9F%E9%AB%94-iTerm2%E3%80%81Dash%E3%80%81Alfred%E3%80%81Spectacle%E3%80%81Kap%E3%80%81GIPHY-Capture/"/>
    <id>https://riverye.com/2020/09/09/Day04-Mac-上常用的軟體-iTerm2、Dash、Alfred、Spectacle、Kap、GIPHY-Capture/</id>
    <published>2020-09-08T16:00:00.000Z</published>
    <updated>2020-09-09T16:01:33.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>以前是以 Windows 為主，寫程式後，變成以 Mac 為主，以下介紹 6 款個人覺得實用 Mac 的軟體，分別是 iTerm2、Dash、Alfred、Spectacle、Kap、GIPHY Capture</p><p>6 款 App 的 icon 圖<img src="https://i.imgur.com/MrKUe6z.png" alt></p><h2 id="軟體介紹">軟體介紹</h2><h3 id="iterm2">iTerm2</h3><h4 id="軟體名稱iterm2">軟體名稱：iTerm2</h4><h4 id="官方網站httpsiterm2com">官方網站：<a href="https://iterm2.com/" target="_blank" rel="noopener">https://iterm2.com/</a></h4><h4 id="軟體說明macos-上的終端機軟體好用到網路上已經有一堆介紹和教學文故省略介紹-才不是我偷懶呢">軟體說明：MacOS 上的終端機軟體，好用到網路上已經有一堆介紹和教學文，故省略介紹 <s>(才不是我偷懶呢</s></h4><p>(謎之聲，未來「說不定」會寫一篇個人的設定介紹</p><hr><h3 id="dash">Dash</h3><h4 id="軟體名稱dash">軟體名稱：Dash</h4><h4 id="官方網站httpskapelicomdash">官方網站：<a href="https://kapeli.com/dash" target="_blank" rel="noopener">https://kapeli.com/dash</a></h4><h4 id="軟體說明支援離線查詢各種技術文件好處是查詢介面一致">軟體說明：支援離線查詢各種技術文件，好處是查詢介面一致</h4><p>軟體畫面<img src="https://i.imgur.com/iC76zVj.png" alt>設定畫面<img src="https://i.imgur.com/C5hMT13.png" alt></p><p>(謎之聲，也有付費版，免費版會不定時跳視窗一下</p><hr><h3 id="alfred">Alfred</h3><h4 id="軟體名稱alfred">軟體名稱：Alfred</h4><h4 id="官方網站httpswwwalfredappcom">官方網站：<a href="https://www.alfredapp.com/" target="_blank" rel="noopener">https://www.alfredapp.com/</a></h4><h4 id="軟體說明加強版的-spotlight能快速開啟想要啟動的軟體-檔案-資料夾且能當計算機使用當本地電腦查詢不到時會改搜尋網路非常好用">軟體說明：加強版的 Spotlight，能快速開啟想要啟動的軟體、檔案、資料夾，且能當計算機使用，當本地電腦查詢不到時，會改搜尋網路，非常好用!!!</h4><h4 id="開啟方式-option或-alt鍵-空白鍵">開啟方式： <code>Option（或 Alt）鍵 ⌥</code> + <code>空白鍵</code></h4><h4 id="離開方式-option或-alt鍵-空白鍵-或-esc-或-滑鼠點其他區域">離開方式： <code>Option（或 Alt）鍵 ⌥</code> + <code>空白鍵</code> 或 <code>ESC</code> 或 滑鼠點其他區域</h4><h4 id="開啟本地檔案-資料夾-find-檔案名稱-資料夾名稱-or-open-檔案名稱-資料夾名稱">開啟本地檔案、資料夾： <code>find {檔案名稱、資料夾名稱}</code> or <code>open {檔案名稱、資料夾名稱}</code></h4><p>能快速開啟軟體<br><img src="https://i.imgur.com/R2uEXna.png" alt></p><p>當計算機使用<br><img src="https://i.imgur.com/DDafaVp.png" alt></p><p><code>find {檔案名稱、資料夾名稱}</code>，開啟符合條件的檔案或資料夾，以 Finder 形式開啟，非執行該檔案<br><img src="https://i.imgur.com/6Gl3NKp.png" alt></p><p><code>open {檔案名稱、資料夾名稱}</code>，開啟符合條件的檔案或資料夾，並開啟該檔案<br><img src="https://i.imgur.com/CNidA11.png" alt></p><p>當電腦中找不到符合的關鍵字時，會改建議搜尋網路<br><img src="https://i.imgur.com/ot6Iy9n.png" alt></p><p>(謎之聲，付費版功能會更多</p><hr><h3 id="spectacle">Spectacle</h3><h4 id="軟體名稱spectacle">軟體名稱：Spectacle</h4><h4 id="官方網站httpswwwspectacleappcom">官方網站：<a href="https://www.spectacleapp.com/" target="_blank" rel="noopener">https://www.spectacleapp.com/</a></h4><h4 id="軟體說明快速切割視窗達到-winodws-視窗切割的效果">軟體說明：快速切割視窗，達到 Winodws 視窗切割的效果</h4><p>(謎之聲，Windows 本身就內建此功能 (<code>Win 鍵</code> + <code>方向鍵</code>，或滑鼠拖曳著視窗時，快速移動滑鼠時，也能做到切割視窗的效果，故 Windows 不需特別安裝類似軟體)</p><p>Spectacle 預設就有各種視窗切割的快捷鍵，可自行調整快捷鍵</p><p><img src="https://i.imgur.com/lWUPZtT.png" alt></p><p><img src="https://i.imgur.com/Rf1dwm9.png" alt></p><p>快速切換示意圖<br><img src="https://i.imgur.com/mXCvI2u.gif" alt></p><hr><h3 id="kap">Kap</h3><h4 id="軟體名稱kap">軟體名稱：Kap</h4><h4 id="官方網站httpsgetkapco">官方網站：<a href="https://getkap.co/" target="_blank" rel="noopener">https://getkap.co/</a></h4><h4 id="軟體說明螢幕錄影軟體支援輸出成-mp4-gif-webm-apng可設定-30fps-或-60fps">軟體說明：螢幕錄影軟體，支援輸出成 MP4、GIF、WebM、APNG，可設定 30FPS 或 60FPS</h4><p>轉 GIF 示意圖<br><img src="https://i.imgur.com/OylBQSd.gif" alt></p><p><img src="https://i.imgur.com/WiMaITs.png" alt></p><hr><h3 id="giphy-capture">GIPHY Capture</h3><h4 id="軟體名稱giphy-capture">軟體名稱：GIPHY Capture</h4><h4 id="官方網站httpsgiphycomappsgiphycapture">官方網站：<a href="https://giphy.com/apps/giphycapture" target="_blank" rel="noopener">https://giphy.com/apps/giphycapture</a></h4><h4 id="軟體說明螢幕錄影軟體支援輸出成-mp4-gif">軟體說明：螢幕錄影軟體，支援輸出成 MP4、GIF</h4><p><img src="https://i.imgur.com/EuSh1YS.png" alt></p><p>(謎之聲，你問我 Kap 和 GIPHY Capture 這 2 套不是功能類似嗎? 是啊，怎了嗎 XD<br>這 2 套都有在用，看當下想用哪一套 哈哈</p><hr><h1 id="同場加碼">同場加碼</h1><h2 id="windows-上推薦的軟體">Windows 上推薦的軟體</h2><p>不能只偏心介紹 Mac 上的軟體，以下加碼 2 套實用的軟體給各位看官參考</p><h3 id="wox">Wox</h3><h4 id="軟體名稱wox">軟體名稱：Wox</h4><h4 id="官網網站httpwwwwoxone">官網網站：<a href="http://www.wox.one/" target="_blank" rel="noopener">http://www.wox.one/</a></h4><h4 id="軟體說明加強版-windows-工具列能快速開啟程式及當作計算機使用懶人福音-xd">軟體說明：加強版 Windows 工具列，能快速開啟程式，及當作計算機使用，懶人福音 XD</h4><h4 id="啟動方式-alt-space空白鍵">啟動方式： <code>Alt + space(空白鍵)</code></h4><h4 id="離開方式-esc">離開方式： <code>ESC</code></h4><h5 id="能快速開啟欲啟動的程式">能快速開啟欲啟動的程式</h5><p><img src="https://i.imgur.com/8TZIICa.png" alt></p><h5 id="wox-設定畫面">Wox 設定畫面</h5><p><img src="https://i.imgur.com/wj8lgje.png" alt></p><h5 id="當計算機使用">當計算機使用：</h5><p><img src="https://i.imgur.com/jmQDKdr.png" alt></p><hr><h3 id="devdocs">DevDocs</h3><h4 id="軟體名稱devdocs">軟體名稱：DevDocs</h4><h4 id="官網網站httpsdevdocsio">官網網站：<a href="https://devdocs.io/" target="_blank" rel="noopener">https://devdocs.io/</a></h4><h4 id="軟體說明能快速查詢各種技術文件ex-ruby-on-rails-javascript-vuejs-react等好處是支援離線功能-操作畫面是一致的且能將-chrome-的擴充功能安裝在電腦桌面獨立執行">軟體說明：能快速查詢各種技術文件(ex: Ruby on Rails、JavaScript、Vue.js、React...等)，好處是支援離線功能、操作畫面是一致的，且能將 Chrome 的擴充功能安裝在電腦桌面，獨立執行。</h4><h4 id="如何在桌面獨立執行步驟">如何在桌面獨立執行步驟</h4><ol><li>至官方網站安裝 <a href="https://chrome.google.com/webstore/detail/devdocs/mnfehgbmkapmjnhcnbodoamcioleeooe" target="_blank" rel="noopener">Chrome 擴充功能</a><br><img src="https://i.imgur.com/oKLDzM9.png" alt></li><li>在 Chrome 網址列輸入「chrome://apps/」</li><li>找到 DevDocs icon 後，對它點滑鼠右鍵</li><li>選擇「在視窗中開啟」及「建立捷徑」</li><li>桌面便會出現捷徑<br><img src="https://i.imgur.com/4AykCkL.png" alt></li><li>桌面啟動的畫面<br><img src="https://i.imgur.com/Cz8uzV5.png" alt></li></ol><hr><h2 id="結尾">結尾</h2><p>可以發現，Windows 在我日常中，使用頻率逐漸下降 (標題不是 Mac 軟體嗎，怎一開口就是 Windows)，連相關介紹都是加碼才看的到 XD<br>後續文章會以 Mac 操作居多，時間來得及才會寫 Windows 操作或加碼的部分<br>然後，就算敲碗把碗敲破，也不見得會有 哈哈哈</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10235051" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10235051</a><br>medium 文章連結：<a href="https://link.medium.com/MtQHdCtkC9" target="_blank" rel="noopener">https://link.medium.com/MtQHdCtkC9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/09/Day04-Mac-%E4%B8%8A%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BB%9F%E9%AB%94-iTerm2%E3%80%81Dash%E3%80%81Alfred%E3%80%81Spectacle%E3%80%81Kap%E3%80%81GIPHY-Capture/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;以前是以 Windows 為主，寫程式後，變成以 Mac 為主，以下介紹 6 款個人覺得實用 Mac 的軟體，分別是 iTerm2、Dash、Alfred、Spectacle、Kap、GIPHY Capture&lt;/p&gt;
&lt;p&gt;6 款 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day03 - Chrome 的小技巧 - 內建 URL 轉 QRcode</title>
    <link href="https://riverye.com/2020/09/08/Day03-Chrome-%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7-%E5%85%A7%E5%BB%BA-URL-%E8%BD%89-QRcode/"/>
    <id>https://riverye.com/2020/09/08/Day03-Chrome-的小技巧-內建-URL-轉-QRcode/</id>
    <published>2020-09-07T16:00:00.000Z</published>
    <updated>2020-09-08T15:59:23.906Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>過去要將網頁轉 QRcode 需透過擴充功能(<a href="https://chrome.google.com/webstore/category/extensions?hl=zh-TW" target="_blank" rel="noopener">extensions</a>)尋找合適的套件才得以實現，從 Chrome 85 電腦版開始，將此功能納入實驗中惹，未來說不定會下放。</p><h2 id="使用步驟">使用步驟</h2><ol><li>在 Chrome 網址列輸入「chrome://flags」</li><li>搜尋「QR」</li><li>將「Enable sharing page via QR Code」改成「Enable」</li><li>重啟 Chrome 瀏覽器<br><img src="https://i.imgur.com/c46pk9X.png" alt></li><li>開啟想產 QRcode 的網頁 (以 <a href="https://riverye.com/">https://riverye.com/</a> 為例)</li><li>滑鼠右鍵選擇「為這個網頁建立 QR 圖碼」<br><img src="https://i.imgur.com/pMPjD0K.jpg" alt></li><li>點「下載」即大功告成<br><img src="https://i.imgur.com/v7f6Tmy.png" alt></li></ol><h3 id="注意需確認-chrome-版本在-85-以上才有此功能喔版本檢查與更新方式chromesettingshelp">注意：需確認 Chrome 版本在 85 以上才有此功能喔，版本檢查與更新方式「chrome://settings/help」</h3><h2 id="參考資料">參考資料</h2><p><a href="https://www.ithome.com.tw/news/139608" target="_blank" rel="noopener">Chrome 85出爐，網頁載入速度快10%</a></p><h2 id="小結">小結</h2><p>比起 QRcode 功能，更想要 goo.gl 短網址能復活，或出新的產品 (許願ing)，真的很好用 QQ</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10234819" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10234819</a><br>medium 文章連結：<a href="https://link.medium.com/9vaGB6oFA9" target="_blank" rel="noopener">https://link.medium.com/9vaGB6oFA9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/08/Day03-Chrome-%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7-%E5%85%A7%E5%BB%BA-URL-%E8%BD%89-QRcode/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;過去要將網頁轉 QRcode 需透過擴充功能(&lt;a href=&quot;https://chrome.google.com/webstore/category/extensions?hl=zh-TW&quot; target=&quot;_blank&quot; rel=
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day02 - Chrome 的小技巧 - 內建截圖功能</title>
    <link href="https://riverye.com/2020/09/07/Day02-Chrome-%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7-%E5%85%A7%E5%BB%BA%E6%88%AA%E5%9C%96%E5%8A%9F%E8%83%BD/"/>
    <id>https://riverye.com/2020/09/07/Day02-Chrome-的小技巧-內建截圖功能/</id>
    <published>2020-09-06T16:00:00.000Z</published>
    <updated>2020-09-06T16:13:48.008Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>Chrome 是許多人電腦必裝的瀏覽器之一，自今年微軟 (Microsoft) 宣佈 Internet Explorer (以下簡稱 IE) 最後支援時間 (2021年8月17日) 後，可以聽到許多工程師的歡呼，在寫這段時，有特地到微軟官方網站查詢<a href="https://docs.microsoft.com/zh-tw/lifecycle/products/?terms=Internet%20Explore" target="_blank" rel="noopener">生命週期</a>，發現還查不到結束日期，查詢結果截圖如下：</p><p><img src="https://i.imgur.com/XSy3V8X.png" alt></p><p>但類似的報導網路垂手可得，反而在自家網頁還看不到，同時也驗證了以下這張梗圖：</p><p><img src="https://i.imgur.com/m87Ge3T.png" alt>(圖片出處: <a href="https://www.facebook.com/kaobei.engineer/photos/a.147822669212056/635338400460478" target="_blank" rel="noopener">純靠北工程師</a>)</p><p>以上博君一笑</p><hr><h1 id="full-page-screenshots">Full-page screenshots</h1><p>隨著 Chrome 越來越強大 <s>(記憶體也越吃越多</s><br>內建的功能也很實用，像是內建網頁截圖功能<br>早在 Chrome 59 版開始，便支援 Full-page screenshots</p><h2 id="使用步驟">使用步驟</h2><ol><li>用 Chrome 開啟想要截圖的網頁 (以 <a href="https://riverye.com/">https://riverye.com/</a> 為例)</li><li>鍵盤 <code>F12</code> 開啟開發者工具<br>Windows 用戶： 或 <code>Ctrl + Shift + c</code><br>Mac 用戶： 或 <code>(Cmd）鍵 ⌘ + Shift 鍵 ⇧ + c</code></li><li>接著輸入<br>Windows 用戶: <code>Ctrl + Shift + p</code><br>Mac 用戶: <code>(Cmd）鍵 ⌘ + Shift 鍵 ⇧ + p</code></li></ol><p><img src="https://i.imgur.com/kEwBSmJ.png" alt></p><p>另一種截圖方式</p><p><img src="https://i.imgur.com/busdk1b.png" alt></p><h2 id="說明">說明</h2><h3 id="capture-area-screenshot指定特定區域">Capture area screenshot：指定特定區域</h3><h3 id="capture-screenshot僅截圖所看到的區域">Capture screenshot：僅截圖所看到的區域</h3><h3 id="capture-full-size-screenshot整個網頁">Capture full size screenshot：整個網頁</h3><h2 id="參考資料">參考資料</h2><p><a href="https://youtu.be/r_6_9eFPhxI" target="_blank" rel="noopener">官方教學操作影片 Full-Page Screenshots (Chrome 59)</a></p><hr><h1 id="同場加碼">同場加碼</h1><h2 id="windows-10-截圖快捷鍵">Windows 10 截圖快捷鍵：</h2><p>全螢幕截圖： <code>PrintScreen</code><br>視窗截圖： <code>Alt + PrintScreen</code> (接著開啟小畫家，<code>Ctrl + v</code> 即可貼上)<br>特定區域截圖： <code>Win + Shift + s</code></p><p>註：<code>PrintScreen</code>、<code>Alt</code>、<code>Win</code>...等皆是鍵盤上的快捷鍵</p><h2 id="windows-10-內建截圖軟體">Windows 10 內建截圖軟體：</h2><ol><li><p>本人使用的 Windows 10 版本為 1909 (OS 組建 18363.1016)<br><img src="https://i.imgur.com/RUpinJm.png" alt></p></li><li><p>在工具列左下角點「開始」(Windows 圖案)，接著搜尋「剪取」可以找到兩套內建的軟體，分別是「<a href="https://support.microsoft.com/zh-tw/help/13776/windows-10-use-snipping-tool-to-capture-screenshots" target="_blank" rel="noopener">剪取工具</a>」與「<a href="https://www.microsoft.com/zh-tw/p/%E5%89%AA%E5%8F%96%E8%88%87%E7%B9%AA%E5%9C%96/9mz95kl8mr0l/" target="_blank" rel="noopener">剪取與繪圖</a>」。<br><img src="https://i.imgur.com/bvTmgLE.png" alt></p></li></ol><h2 id="windows-推薦截圖軟體">Windows 推薦截圖軟體：</h2><h4 id="軟體名稱picpick">軟體名稱：PicPick</h4><h4 id="軟體說明支援全螢幕-使用中視窗-捲動視窗-固定區域-手繪區域等各種模式加上內建強大圖片編輯器功能又有免安裝版非常好用">軟體說明：支援全螢幕、使用中視窗、捲動視窗、固定區域、手繪區域...等各種模式，加上內建強大「圖片編輯器」功能，又有免安裝版，非常好用。</h4><p>PicPick  程式選項：<br><img src="https://i.imgur.com/FSOTqXE.jpg" alt></p><p>PicPick 圖片編輯器：<br><img src="https://i.imgur.com/B8rVhUb.jpg" alt></p><h2 id="macos-截圖快捷鍵">macOS 截圖快捷鍵：</h2><p>全螢幕截圖：<code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>數字 3</code><br>指定區域截圖：<code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>數字 4</code><br>固定區域截圖： <code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>數字 5</code><br>視窗截圖(有陰影)：</p><ol><li>先按 <code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>數字 4</code>，然後放開</li><li>接著再按 <code>空白鍵</code> 一下，然後放開</li><li>點選想截圖的視窗</li></ol><p>視窗截圖(無陰影)：</p><ol><li>先按 <code>(Cmd）鍵 ⌘</code> + <code>Shift 鍵 ⇧</code> + <code>數字 4</code>，然後放開</li><li>接著再按 <code>空白鍵</code> 一下，然後放開</li><li>按著 <code>Option（或 Alt）鍵 ⌥</code> 不放</li><li>同時點選想截圖的視窗</li></ol><h2 id="小結">小結</h2><p>同時記錄 Windows 和 Mac 的操作方式，花比預期還長一點的時間寫此文，希望能幫助到看到的人</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10234563" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10234563</a><br>medium 文章連結：<a href="https://link.medium.com/oZb6FTK0y9" target="_blank" rel="noopener">https://link.medium.com/oZb6FTK0y9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/07/Day02-Chrome-%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7-%E5%85%A7%E5%BB%BA%E6%88%AA%E5%9C%96%E5%8A%9F%E8%83%BD/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;Chrome 是許多人電腦必裝的瀏覽器之一，自今年微軟 (Microsoft) 宣佈 Internet Explorer (以下簡稱 IE) 最後支援時間 (2021年8月17日) 後，可以聽到許多工程師的歡呼，在寫這段時，有特地到微
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day01 - 不免俗一定要來一下的參賽宣言</title>
    <link href="https://riverye.com/2020/09/06/Day01-%E4%B8%8D%E5%85%8D%E4%BF%97%E4%B8%80%E5%AE%9A%E8%A6%81%E4%BE%86%E4%B8%80%E4%B8%8B%E7%9A%84%E5%8F%83%E8%B3%BD%E5%AE%A3%E8%A8%80/"/>
    <id>https://riverye.com/2020/09/06/Day01-不免俗一定要來一下的參賽宣言/</id>
    <published>2020-09-05T16:00:00.000Z</published>
    <updated>2020-09-06T15:50:57.849Z</updated>
    
    <content type="html"><![CDATA[<p>轉眼一年過去了，時間過好快(怕<br>轉職後工作也 10 個月左右，<br>過程中有蠻多可以寫成文章，<br><s>但因為太懶而沒寫(逃</s><br>一直很苦惱要寫些什麼，很擔心自己寫不出所以然，或寫太淺，<br>不如就來點已知但還沒寫的文章、或想專研的部分好惹<br>期許自己能夠完賽 (其實沒什麼把握，且沒什麼囤文章..</p><h2 id="這次直接來大雜燴可能會有">這次直接來大雜燴，「可能會有」：</h2><h3 id="1-開發工具介紹">1. 開發工具介紹</h3><h3 id="2-常用小技巧">2. 常用小技巧</h3><h3 id="3-一些-linux-相關">3. 一些 Linux 相關</h3><h3 id="4-ruby-on-rails-相關">4. Ruby on Rails 相關</h3><h3 id="5-臨時想到想寫的內容">5. 臨時想到想寫的內容</h3><hr><h2 id="目前想到的-30-天內容如下">目前想到的 30 天內容如下：</h2><h4 id="只有先想標題內容還沒產">只有先想標題，內容還沒產...</h4><p>Day01 - 不免俗一定要來一下的參賽宣言<br>Day02 - Chrome 的小技巧 - 內建截圖功能<br>Day03 - Chrome 的小技巧 - 內建 URL 轉 QRcode<br>Day04 - Mac 上常用的軟體 (iTerm、Dash、Alfred、Spectacle、Kap、GIPHY Capture)<br>Day05 - Mac、Chrome、iTerm2、Visual Studio Code 上常用的快捷鍵<br>Day06 - 一些常用 Linux 指令 - 1-7 - 基礎篇 (exit、pwd、ls、cd、touch、mkdir、rm、cp、scp、mv、sudo、man、help、clear、which、find)<br>Day07 - 一些常用 Linux 指令 - 2-7 (ps、top、htop、free、df、du、kill)<br>Day08 - 一些常用 Linux 指令 - 3-7 (cat、tac、head、tail、vi、sed)<br>Day09 - 一些常用 Linux 指令 - 4-7 (grep、rg、luit、iconv、cal、date)<br>Day10 - 一些常用 Linux 指令 - 5-7 (lsof、dig、curl、nc、nice、cpulimit)<br>Day11 - 一些 Linux 套件 - 6-7 - 實用篇 (fzf、tldr)<br>Day12 - 一些 Linux 套件 - 7-7 - 不實用篇 (cowsay、cmatrix)<br>Day13 - 一些 Git 指令<br>Day14 - Ruby on Rails 中的 N+1 與解法<br>Day15 - Ruby on Rails 中的 race condition 與解法<br>Day16 - Ruby on Rails 的介紹<br>Day17 - 在 Ruby on Rails 中使用 FFmpeg 處理影音轉檔上字幕<br>Day18 - Redis 的介紹與應用<br>Day19 - Sidekiq 的介紹與應用<br>Day20 - Resque 的介紹與應用<br>Day21 - 想到再說<br>Day22 - 想到再說<br>Day23 - 想到再說<br>Day24 - 想到再說<br>Day25 - 想到再說<br>Day26 - 想到再說<br>Day27 - 想到再說<br>Day28 - 想到再說<br>Day29 - 想到再說<br>Day30 - 不免俗一定要來一下的完賽心得</p><h3 id="備註-以上標題-順序僅供參考依當天發文為主-xd">備註: 以上標題、順序僅供參考，依當天發文為主 XD</h3><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10233527" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10233527</a><br>medium 文章連結：<a href="https://link.medium.com/i4b4cs2Yy9" target="_blank" rel="noopener">https://link.medium.com/i4b4cs2Yy9</a><br>本文同步發布於 <a href="https://riverye.com/2020/09/06/Day01-%E4%B8%8D%E5%85%8D%E4%BF%97%E4%B8%80%E5%AE%9A%E8%A6%81%E4%BE%86%E4%B8%80%E4%B8%8B%E7%9A%84%E5%8F%83%E8%B3%BD%E5%AE%A3%E8%A8%80/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;轉眼一年過去了，時間過好快(怕&lt;br&gt;
轉職後工作也 10 個月左右，&lt;br&gt;
過程中有蠻多可以寫成文章，&lt;br&gt;
&lt;s&gt;但因為太懶而沒寫(逃&lt;/s&gt;&lt;br&gt;
一直很苦惱要寫些什麼，很擔心自己寫不出所以然，或寫太淺，&lt;br&gt;
不如就來點已知但還沒寫的文章、或想專研的部分好惹
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="12th鐵人賽" scheme="https://riverye.com/tags/12th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>如何讓 GitHub 每個 pull request (PR) 有預設模板</title>
    <link href="https://riverye.com/2020/07/11/%E5%A6%82%E4%BD%95%E8%AE%93-GitHub-%E6%AF%8F%E5%80%8B-pull-request-PR-%E6%9C%89%E9%A0%90%E8%A8%AD%E6%A8%A1%E6%9D%BF/"/>
    <id>https://riverye.com/2020/07/11/如何讓-GitHub-每個-pull-request-PR-有預設模板/</id>
    <published>2020-07-10T16:00:00.000Z</published>
    <updated>2020-07-11T15:15:12.800Z</updated>
    
    <content type="html"><![CDATA[<h1 id="說明">說明</h1><p>當多人在 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 開發協作，你要發 pull request (以下簡稱 PR ) 時，如果能有個預設範本 (default template) 的話，能節省一些時間，確保自己是否有遺漏該先檢查的事項，也能讓大家有共同的公版，避免格式不一致的問題。</p><h1 id="步驟">步驟</h1><h3 id="1-開始前先看下預設-pr-是長這樣">1. 開始前，先看下預設 PR 是長這樣</h3><p><img src="https://i.imgur.com/9IxxWJ4.png" alt></p><h3 id="2-在專案根目錄底下新增-github-資料夾裡面放-pull_request_templatemd-檔案並撰寫想要的預設範本-支援-markdown-語法">2. 在專案根目錄底下新增 <code>.github</code> 資料夾，裡面放 <code>pull_request_template.md</code> 檔案，並撰寫想要的預設範本 (支援 Markdown 語法)</h3><p><img src="https://i.imgur.com/9Ldz9R5.png" alt></p><p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 參考範例:</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**將這支 PR 所做的事情，取代這段文字，描述越詳細越好。**</span></span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">與這支 PR 有關聯的 Trello 卡片:</span><br><span class="line"></span><br><span class="line">URL: https://trello.com/c/xyzAbC</span><br><span class="line"></span><br><span class="line">提交 PR 前，請先檢查以下是否已完成：</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>[ ] 該分支是從最新 <span class="code">`master`</span> 切出來 (如果不是，請先 rebase/merge 它)</span><br><span class="line"><span class="bullet">* </span>[ ] 是否新增測試，或被現有的測試覆蓋</span><br><span class="line"><span class="bullet">* </span>[ ] 這支 PR 是否有明確的標題、內容描述</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">補充說明:</span><br></pre></td></tr></table></figure></p><h3 id="3-發-pr-並-merge-到-base-通常預設是-master">3. 發 PR 並 merge 到 base (通常預設是 <code>master</code>)</h3><p><img src="https://i.imgur.com/Zf76iRd.png" alt></p><h3 id="4-接下來每個-pr-都會有預設範本囉">4. 接下來每個 PR 都會有預設範本囉</h3><p>範例：<a href="https://github.com/River-Ye/demo-pull-request-template/pull/2" target="_blank" rel="noopener">https://github.com/River-Ye/demo-pull-request-template/pull/2</a><img src="https://i.imgur.com/ugUhhJC.png" alt></p><h1 id="小結">小結</h1><p>有了公版範本後，能將團隊約定的事項先寫好，避免發 PR 前有丟三落四的情況發生。</p><h1 id="範例">範例</h1><p><a href="https://github.com/River-Ye/demo-pull-request-template/" target="_blank" rel="noopener">https://github.com/River-Ye/demo-pull-request-template/</a></p><h1 id="參考文件">參考文件</h1><p><a href="https://docs.github.com/en/github/building-a-strong-community/creating-a-pull-request-template-for-your-repository" target="_blank" rel="noopener">Creating a pull request template for your repository</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;說明&quot;&gt;說明&lt;/h1&gt;
&lt;p&gt;當多人在 &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt; 開發協作，你要發 pull request (以下簡稱 PR ) 時，如果能有個
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Git" scheme="https://riverye.com/tags/Git/"/>
    
      <category term="GitHub" scheme="https://riverye.com/tags/GitHub/"/>
    
      <category term="預設模板" scheme="https://riverye.com/tags/%E9%A0%90%E8%A8%AD%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>從排斥寫程式到轉職成為工程師</title>
    <link href="https://riverye.com/2020/03/11/%E5%BE%9E%E6%8E%92%E6%96%A5%E5%AF%AB%E7%A8%8B%E5%BC%8F%E5%88%B0%E8%BD%89%E8%81%B7%E6%88%90%E7%82%BA%E5%B7%A5%E7%A8%8B%E5%B8%AB/"/>
    <id>https://riverye.com/2020/03/11/從排斥寫程式到轉職成為工程師/</id>
    <published>2020-03-10T16:00:00.000Z</published>
    <updated>2020-07-05T03:57:23.299Z</updated>
    
    <content type="html"><![CDATA[<p>離上篇更新隔了 3 個多月，絕不是因為偷懶 <s>(其實是</s><br>當時即將進入新公司，正式轉職成為軟體工程師(撒花</p><h1 id="分享下自己為何轉職及做了哪些準備">分享下自己為何轉職及做了哪些準備</h1><h3 id="背景">背景</h3><p>科大電子系畢業，僅在高中接觸過 8051、大學碰過 C++，但早已全忘 (連 Hello World 怎麼寫出來也忘了)，當時是排斥寫程式的，覺得好難看不懂、英文又爛 (現在英文也很爛 XD)，我一定學不會，當時的作業和考試多虧了同學才得以在及格邊緣通過 XD</p><p>轉職前工作了幾年，做過業務、策展、會計，每個領域都很跳 tone，也都是不同產業，還在尋找適合自己的工作，希望是：</p><h3 id="1-經驗能累積">1. 經驗能累積</h3><h3 id="2-技能帶著走不受產業限制">2. 技能帶著走(不受產業限制)</h3><h3 id="3-工作環境單純">3. 工作環境單純</h3><h3 id="4-平均薪資天花板比一般產業更高">4. 平均薪資天花板比一般產業更高</h3><h3 id="5-不受地點任何地方都能工作">5. 不受地點任何地方都能工作</h3><p>換了幾個工作後，一直找不到上述條件的工作，覺得再怎麼換都是差不多的工作，想起前年在PTT看過轉職心得文「<strong><a href="https://buzzorange.com/techorange/2018/02/23/ptt-how-to-be-programmer/" target="_blank" rel="noopener">[心得] 文組生轉工程師攻略</a></strong>」(連結為科技報橘的URL，比較好閱讀)，從那時起，覺得我好像也可以的念頭便種下種子。</p><h2 id="做了哪些準備">做了哪些準備</h2><p>當工作開始迷茫時，轉職念頭也逐漸萌芽，直到去年 4 月底離職後，便正式開始自學前端的 HTML、CSS、jQuery (推薦看 Amos 老師的金魚都能懂的網頁教學系列影片，共兩季(<a href="https://www.youtube.com/playlist?list=PLqivELodHt3iF_Spzdz_6LsOSPOyfDx-R" target="_blank" rel="noopener">網頁教學</a>、<a href="https://www.youtube.com/playlist?list=PLqivELodHt3hxeuLX8PYaI8u1GcDaBoJo" target="_blank" rel="noopener">切版教學</a>))，先確認自己是否還會排斥，每天跑圖書館自學 8 小時，持續一個月後，確定不排斥甚至產生興趣後，想持續深耕並更有效率地學習(目標是年底前轉職成為工程師)，過程中有尋找線上及實體課程進行比較，像是：</p><h3 id="線上資源udemy-coursera-hahow-好學校-六角學院-alpha-camp-網頁15天-臺大開放式課程-youtube等">線上資源：Udemy、Coursera、Hahow 好學校、六角學院、ALPHA Camp、網頁15天、臺大開放式課程、Youtube...等</h3><h3 id="實體資源五倍紅寶石-cmoney-培訓-職訓局-資策會-好想工作室等">實體資源：五倍紅寶石、CMoney 培訓、職訓局、資策會、好想工作室...等</h3><p>不找還好，一找發現資源多到爆炸，反而不知該如何選擇，光是尋找、篩選、找到適合自己的學習方式，就花了一些時間整理，文章後面會把整理過的連結給大家參考，希望能幫助到想轉職的你，也歡迎在底下留言讓我知道，有留言鼓勵會更有動力更新 XD</p><p>經過多方比較後(預算、所需投入的時間、師資助教資源、課後輔導、學習氛圍等)，最後選擇「<a href="https://5xruby.tw/" target="_blank" rel="noopener">五倍紅寶石</a>」當作首選，自認需要有人引導會更有效率地學習，雖然可以持續每天跑圖書館自學，但摸索及撞牆期會花更長時間，且不見得所學的觀念是正確的，更常是知其然而不知其所以然，有人帶的話可以大幅縮減撞牆期，遇到不清楚有人可以詢問解惑，更快突破瓶頸及持續成長。</p><p>確定北上報名課程後，才開始找短租(<a href="https://www.facebook.com/groups/464870710346711/" target="_blank" rel="noopener">台北租屋、出租專屬社團</a>)，在租屋社團可以提出需求，符合條件的房東會主動與你聯絡，或在上面看物件詢問對方，整體支出會比住家裡的人還高，要先算好這段期間沒收入的開銷，要上課、租屋、三餐、交通、電話費、健保費、國民年金、保險費、雜支...等，銀彈要準備充裕，建議在學習階段專心學習就好，別讓外務(打工)影響學習品質。</p><p>課程期間很精實，作業量蠻重的，要<a href="https://www.youtube.com/playlist?list=PL4HKp4Vc6BIzggAX2_GB068rtVOaMg0n8" target="_blank" rel="noopener">錄影寫作業</a>外，也要<a href="https://medium.com/@riverye" target="_blank" rel="noopener">寫文章</a>、參加<a href="https://ithelp.ithome.com.tw/users/20061211/ironman/2674" target="_blank" rel="noopener">鐵人賽</a>(連續 30 天每日寫一篇文章)、架設<a href="https://riverye.com/">個人部落格</a>、分組討論製作<a href="https://github.com/River-Ye/oh_my_wage" target="_blank" rel="noopener">專案</a>，同時要做的事情蠻多的，不停地學習新知識外又要持續輸出，時間永遠不夠用，巴不得自己是可以不用睡覺的體質，同學間也很積極學習，學習氛圍是好的，閒聊時會問彼此昨天幾點睡，一位比一位晚睡，到後來可以說是輪班睡覺，B 群、C 群、咖啡更是不離身，過程的辛苦只有參與過的人最清楚，雖然很累但樂此不疲，當一群人持續往同個目標前進時，會比單打獨鬥走更遠，一起共患難會有革命情感，即便課程結束到現在，仍會持續聯絡，假日約寫 code 或出來走走，這是一人在圖書館自學所無法擁有的回憶及友誼。</p><p>課程結束後，有在外面租個共用空間的辦公座位一個月，每天待 10 小時以上，不是寫 code 就是整理履歷、丟履歷、刷題、更新個人部落格、看技術文章...等，用「不是在寫 code，就是準備 code」來形容一點也不浮誇，讓自己除了吃飯、睡覺、通勤外的其它時間，全部投入在轉職工程師這件事情上，Line、Youtube、Instagram、Facebook 幾乎很少用，到後來甚至刪除 Facebook APP、Instagram APP，會不自覺想用的 APP 就刪除，藉此戒掉下意識滑手機的習慣，會發現有更多時間可以做想做的事情，而不再只有想卻沒做。</p><h2 id="面試平台">面試平台</h2><p>開始找工程師相關工作後，首先要先有履歷，會發現履歷與之前撰寫不一樣，使用英式履歷即可(一張A4正面)，再來就是各人力銀行網站都放，像是：</p><ol><li><p><a href="https://www.104.com.tw" target="_blank" rel="noopener">104人力銀行</a></p></li><li><p><a href="https://www.cakeresume.com" target="_blank" rel="noopener">CakeResume</a></p></li><li><p><a href="https://www.yourator.co" target="_blank" rel="noopener">Yourator</a></p></li><li><p><a href="https://meet.jobs" target="_blank" rel="noopener">Meet.jobs</a></p></li><li><p><a href="https://jobs.ruby.tw" target="_blank" rel="noopener">Ruby Jobs in Taiwan</a></p></li><li><p><a href="https://github.com/f2etw/jobs" target="_blank" rel="noopener">f2etw</a></p></li><li><p><a href="https://www.1111.com.tw" target="_blank" rel="noopener">1111人力銀行</a></p></li><li><p><a href="https://tw.wanted.jobs" target="_blank" rel="noopener">wanted</a></p></li><li><p><a href="https://www.yes123.com.tw" target="_blank" rel="noopener">yes123求職網</a></p></li><li><p><a href="https://www.518.com.tw" target="_blank" rel="noopener">518人力銀行</a></p></li><li><p><a href="https://www.job178.com.tw" target="_blank" rel="noopener">178人力銀行</a></p></li><li><p><a href="https://tw.linkedin.com" target="_blank" rel="noopener">LinkedIn</a></p></li><li><p><a href="https://tw.indeed.com" target="_blank" rel="noopener">indeed</a></p></li></ol><h2 id="面試問題">面試問題</h2><p>除了履歷上會寫你有什麼技能，並用它做了什麼之外，每間公司問的問題也不太一樣，基本的自我介紹外，更多的是技術問題，像是：</p><h3 id="專案面">專案面：</h3><ol><li><p>你在專案中做了什麼？</p></li><li><p>專案的分工</p></li><li><p>專案用哪些技術</p></li><li><p>常用的 Gem 有哪些？ 用來做什麼？</p></li><li><p>這專案遇到最大的困難是什麼，如何解決</p></li></ol><h3 id="技術面">技術面：</h3><h4 id="ruby-on-rails">Ruby on Rails</h4><ol><li><p><code>Proc</code> 與 <code>Lambda</code> 差別。</p></li><li><p>要怎麼把 <code>Proc</code>、<code>Lambda</code> 轉換成 <code>Block</code>？</p></li><li><p>Block 中的 <code>do…end</code> 與 花括號 <code>{ }</code> 的差異。</p></li><li><p>Ruby 中的 <code>module</code> 怎麼用，跟 <code>class</code> 的差異在哪裡？</p></li><li><p><code>symbol</code> 跟 <code>string</code> 的差異，什麼情況下會選擇這些資料型態？</p></li><li><p><code>map</code> 跟 <code>each</code> 的差別？</p></li><li><p><code>extend</code> 和 <code>include</code> 差別。</p></li><li><p>如果有兩個陣列要怎麼找出一樣的值？</p></li><li><p>a 陣列和 b 陣列如何相乘變 c 陣列？</p></li><li><p><code>private</code>, <code>public</code>, <code>protect</code>的差異？</p></li><li><p>race condition 怎麼解決？</p></li><li><p>費氏數列是什麼? 怎麼用一般迴圈寫出來？</p></li><li><p>會怎麼儲存密碼這種敏感資料？</p></li><li><p>RestFul 是什麼？除了 RESTful 的路由，還知道其他有什麼嗎？</p></li><li><p>RestFul 的實作？</p></li><li><p>Get、Post 的差異？有哪些特性？</p></li><li><p>什麼是 model 的多型？</p></li><li><p>什麼是STI？</p></li><li><p>Rails 裡怎麼避免 n+1 query？</p></li><li><p><code>includes</code> 和 <code>join</code> 的差別？</p></li><li><p>Routes 裡 <code>shallow</code> 是什麼？</p></li><li><p>Routes 裡面 <code>collection</code> 和 <code>member</code> 差別是什麼？</p></li><li><p>如果要做一個短網址系統，routes 和 controller 會怎麼設計？</p></li><li><p>什麼是 CORS？ Rails 怎麼解決這類問題？</p></li><li><p>前端的 partial 怎麼整理，怎麼把邏輯寫到 helper 裡面</p></li><li><p>哪些方法要寫在 controller、哪些要寫在 Model，分別是為什麼？</p></li><li><p>Model 除了跟資料庫溝通外，還可以做什麼事？</p></li><li><p>Gemfile 的功能</p></li><li><p>敘述使用者點擊網頁後背後的流程，特別注意 request header 與 response header 裡面的參數功能為何？</p></li><li><p>說出 cookie 的用途，以及 cookie 的儲存位置。</p></li><li><p>session 和 cookie 的差別？</p></li><li><p>敘述 <code>migration</code> 的用途。</p></li><li><p>描述一下 MVC 怎麼運作的？分別代表什麼意思？這樣的設計模式有什麼好處？</p></li><li><p>測試用的假資料有哪些選擇(fixture與factory bot)？而這些選擇又有哪些cons and pros。除錯的方法？</p></li><li><p><code>index</code> 的優缺點？</p></li><li><p><code>has_and_belongs_to_many</code> 知道嗎？</p></li><li><p>有很大量的資料要怎麼更新？假如是在本地端的話可以怎麼做？</p></li><li><p>dependent destroy 和 dependent delete 的差別？</p></li><li><p>如果 request 會出錯要怎麼處理？</p></li><li><p>如何在資料中如果有就抓出來沒有就初始化一個？</p></li><li><p><code>find</code>、<code>find_by</code>、<code>where</code> 差別</p></li><li><p>Rails 怎麼運作</p></li><li><p>什麼是 strong parameters</p></li><li><p>有用過 Assets pipeline 嗎？</p></li><li><p>什麼是 Active Job？用來解決什麼問題？</p></li><li><p>有在 method 裡用過 <code>&amp;</code> 跟 <code>*</code> 嗎？ (不是參數)</p></li><li><p>Rails 框架提供了什麼功能讓我們能快速開發？</p></li><li><p>ActiveRecord 如何幫我們解決處理資料庫的問題？</p></li><li><p>什麼是 Redis？</p></li><li><p>什麼是 ORM？</p></li><li><p>什麼是 CSRF? Rails 怎麼防範？</p></li></ol><h4 id="git">Git</h4><ol><li><p>什麼是 Git Flow？</p></li><li><p><code>Merge</code> 和 <code>rebase</code> 的差別</p></li><li><p>為何要 <code>rebase</code> 自己的 <code>branch</code>？</p></li><li><p>有用過什麼比較特別的 Git 指令嗎？</p></li></ol><h4 id="sql">SQL</h4><ol><li><p>怎麼知道 SQL 的 query 效能好不好？</p></li><li><p>說明一下 SQL 和 NoSQL 的差別？</p></li><li><p>Left join 和 Right join 的差別？</p></li><li><p>知道什麼是 SQL injection 嗎？及如何預防？</p></li><li><p>rails c 中，如何查詢 11/01 後建立的所有資料</p></li><li><p>MySQL、PostgreSQL 是哪種型態的資料庫？為什麼是主流？帶有什麼好處？</p></li></ol><h4 id="javascript">JavaScript</h4><ol><li><p><code>undefine</code> 和 <code>null</code> 的差別</p></li><li><p>Promise 是做什麼用的，說明怎麼使用</p></li><li><p>Settimeout 1000 指的是幾秒，一定準確嗎？</p></li><li><p><code>==</code> 和 <code>===</code> 差別</p></li></ol><h3 id="軟問題">軟問題</h3><ol><li><p>你在學習程式語言這段期間有沒有曾經想放棄？</p></li><li><p>那你在學習程式語言的過程有沒有特別難過的檻或經驗</p></li><li><p>為什麼想轉職？</p></li><li><p>會用哪三個形容詞形容自己？</p></li><li><p>請說明自己的三個優缺點</p></li><li><p>對未來的規劃</p></li><li><p>為什麼會選擇 Ruby？有學過或比較過其他程式語言嗎？</p></li><li><p>對於未來的工作最注重的是什麼</p></li><li><p>進入後，會想做什麼？個人未來規劃？</p></li><li><p>之後想加強哪部分？</p></li></ol><p>上面的面試問題，不是每一題我都被問過，在面試前，會先上網看別人分享面試心得及題目，累積彙整下來的，答案請自行查詢。</p><h2 id="小結">小結</h2><p>當決定轉職後，除了努力之外，更多的是行動，才有機會轉職成功，從 5 月開始算的話，約半年左右轉職成功，到目前為止挺滿意現在的工作內容，工作上雖然常接觸沒碰過也不會的事情，抱持著遇到問題想辦法解決的心態去面對問題，解決問題的當下所帶來的成就感及喜悅是高於壓力的，會讓自己持續成長及前進，祝大家在職涯上能找到適合自己的工作，有任何指教或鼓勵可在下方留言討論。</p><h3 id="轉職相關文章">轉職相關文章：</h3><ol><li><p><a href="https://buzzorange.com/techorange/2018/02/23/ptt-how-to-be-programmer/" target="_blank" rel="noopener">PTT 鄉民工程師現身分享：文組生轉職工程師攻略</a></p></li><li><p><a href="https://goo.gl/qgWqpa" target="_blank" rel="noopener">從平面設計師到前端工程師：五個月的轉變歷程</a></p></li><li><p><a href="https://link.medium.com/uvTMHKYdc1" target="_blank" rel="noopener">轉職 Web 工程師 — 公務員還俗記</a></p></li><li><p><a href="https://link.medium.com/wUS9ZeTdc1" target="_blank" rel="noopener">結束十年客服生涯，開啟網頁工程師學習之路。</a></p></li><li><p><a href="https://link.medium.com/Ct6DiFwam1" target="_blank" rel="noopener">人生急轉彎！房仲秘書成功轉職軟體工程師？面試準備心路歷程分享</a></p></li><li><p><a href="https://link.medium.com/0OuCYPFWu3" target="_blank" rel="noopener">從資遣到外商，五個步驟轉職軟體工程師</a></p></li><li><p><a href="https://meet.bnext.com.tw/articles/view/38696" target="_blank" rel="noopener">都說程式員薪資高，可是完全沒有技術背景的麻瓜可以學寫程式嗎？</a></p></li><li><p><a href="https://findcareerpassion.blogspot.com/2019/09/blog-post.html" target="_blank" rel="noopener">這麼老了轉行還來得及嘛？ 一歲女兒顛覆我對「時間」的理解</a></p></li><li><p><a href="https://sharing.tcincubator.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80%E6%96%B0%E6%89%8B%E5%85%A5%E9%96%80%E7%AC%AC%E4%B8%80%E5%80%8B%E9%9B%A3%E9%A1%8C-%E5%A6%82%E4%BD%95%E9%81%B8%E6%93%87%E9%81%A9%E5%90%88%E8%87%AA%E5%B7%B1/" target="_blank" rel="noopener">程式語言新手入門第一個難題—如何選擇適合自己的程式語言</a></p></li><li><p><a href="https://link.medium.com/ZUZjKtjnh2" target="_blank" rel="noopener">超過 30 個優質線上學習網站，課程平台資源大全，持續成長靠自學課程</a></p></li><li><p><a href="https://sharing.tcincubator.com/%E7%B7%9A%E4%B8%8A%E5%84%AA%E8%B3%AA%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80%E5%AD%B8%E7%BF%92%E5%B9%B3%E5%8F%B0%E6%8E%A8%E8%96%A6/" target="_blank" rel="noopener">怎麼學程式設計？6個線上優質程式學習平台推薦</a></p></li><li><p><a href="https://www.ptt.cc/bbs/Soft_Job/M.1562589512.A.CBA.html" target="_blank" rel="noopener">[心得] 想轉職前端工程師? 幫你蒐集各種資源!</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20040221/ironman/1247" target="_blank" rel="noopener">前端工程師養成手冊</a></p></li><li><p><a href="https://ithelp.ithome.com.tw/users/20107637/ironman/1457" target="_blank" rel="noopener">前端新手村</a></p></li><li><p><a href="https://www.ptt.cc/bbs/Soft_Job/M.1549355425.A.A4D.html" target="_blank" rel="noopener">[心得] 饅頭計畫 免費程式教學心得</a></p></li><li><p><a href="http://bit.ly/2YtmfCo" target="_blank" rel="noopener">Html5學習資源分享，網站及搜尋引擎優化必備技能</a></p></li><li><p><a href="https://buzzorange.com/techorange/2018/01/04/learn-coding-in-5-months/" target="_blank" rel="noopener">五個月成為 JavaScript 工程師的完整攻略，每個月要幹嘛都寫出來讓你照著做！</a></p></li><li><p><a href="https://buzzorange.com/techorange/2016/04/13/self-study-program-with-datastructure-and-algorithm/" target="_blank" rel="noopener">程式自學十年心得：想吃這行飯，學好演算法與資料結構才能讓你站穩腳步</a></p></li><li><p><a href="https://buzzorange.com/techorange/2019/03/07/algorithm-and-program/" target="_blank" rel="noopener">程式、演算法差在哪？比起學程式，你更應該了解演算法</a></p></li><li><p><a href="https://buzzorange.com/techorange/2019/05/30/microsoft-code-review" target="_blank" rel="noopener">如何讓 6 萬個工程師順暢合作不互雷？微軟法寶「完整程式碼審查」揭密！</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;離上篇更新隔了 3 個多月，絕不是因為偷懶 &lt;s&gt;(其實是&lt;/s&gt;&lt;br&gt;
當時即將進入新公司，正式轉職成為軟體工程師(撒花&lt;/p&gt;
&lt;h1 id=&quot;分享下自己為何轉職及做了哪些準備&quot;&gt;分享下自己為何轉職及做了哪些準備&lt;/h1&gt;
&lt;h3 id=&quot;背景&quot;&gt;背景&lt;/h3&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="心得文" scheme="https://riverye.com/categories/%E5%BF%83%E5%BE%97%E6%96%87/"/>
    
    
      <category term="轉職" scheme="https://riverye.com/tags/%E8%BD%89%E8%81%B7/"/>
    
      <category term="工程師" scheme="https://riverye.com/tags/%E5%B7%A5%E7%A8%8B%E5%B8%AB/"/>
    
      <category term="軟體工程師" scheme="https://riverye.com/tags/%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB/"/>
    
  </entry>
  
  <entry>
    <title>Ruby on Rails 中的 IRB、Pry、rails console 差別</title>
    <link href="https://riverye.com/2019/11/25/Ruby-on-Rails-%E4%B8%AD%E7%9A%84-IRB%E3%80%81Pry%E3%80%81rails-console-%E5%B7%AE%E5%88%A5/"/>
    <id>https://riverye.com/2019/11/25/Ruby-on-Rails-中的-IRB、Pry、rails-console-差別/</id>
    <published>2019-11-24T16:00:00.000Z</published>
    <updated>2020-03-07T00:03:16.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="說明">說明</h1><p>欲測試想法(但懶得開新檔案)或抓 bug 時，最常使用的工具，將針對 <code>irb</code> 、 <code>pry</code> 、 <code>rails console</code> 進行介紹。</p><h1 id="irb">IRB</h1><p>Ruby 內建一個名為 IRB (InteractiveRuby) 的互動式命令列，可以在裡面輸入語法且立即看到結果，只需在終端機輸入 <code>irb</code> 即可進入。(前提要有安裝 Ruby)</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在終端機輸入</span></span><br><span class="line">$ irb</span><br><span class="line"></span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span><br><span class="line">&gt;   <span class="function"><span class="keyword">def</span> <span class="title">going_to_travel</span></span></span><br><span class="line">&gt;     <span class="string">"好想出國旅遊"</span></span><br><span class="line">&gt;   <span class="keyword">end</span></span><br><span class="line">&gt; <span class="keyword">end</span></span><br><span class="line"> =&gt; <span class="symbol">:going_to_travel</span></span><br><span class="line">&gt; Human.new.going_to_travel</span><br><span class="line"> =&gt; <span class="string">"好想出國旅遊"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 為註解</span></span><br><span class="line"><span class="comment"># $ 為終端機輸入 ($ 免輸入)</span></span><br><span class="line"><span class="comment"># &gt; 為 IRB 介面 (&gt; 免輸入)</span></span><br><span class="line"><span class="comment"># =&gt; 為回傳值</span></span><br></pre></td></tr></table></figure></p><p>像這樣的環境也稱為 REPL (Read-Eval-Print-Loop)(讀取-執行-印出-循環)。</p><p>IRB 使你可以在終端機介面快速執行並測試回傳值，當你遇到錯誤時， IRB 會準確告訴你該錯誤是什麼及該錯誤的位置。</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ irb</span><br><span class="line"></span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span><br><span class="line">&gt;   <span class="function"><span class="keyword">def</span> <span class="title">going_to_travel</span></span></span><br><span class="line">&gt;     <span class="string">"好想出國旅遊"</span></span><br><span class="line">&gt;   <span class="keyword">end</span></span><br><span class="line">&gt; <span class="keyword">end</span></span><br><span class="line"> =&gt; <span class="symbol">:going_to_travel</span></span><br><span class="line">&gt; Human.new.go_to_travel</span><br><span class="line"></span><br><span class="line">NoMethodError (undefined method <span class="string">`go_to_travel' for #&lt;Human:0x00007fffd74be090&gt;)</span></span><br><span class="line"><span class="string">Did you mean?  going_to_travel</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/prctFYn.png" alt></p><p>在這裡我遇到了 NoMethodError，因為我使用錯誤的方法名稱，我把 <code>going_to_travel</code> 換成 <code>.go_to_travel</code>，它會準確告訴我問題出在哪裡，Ruby 甚至會把它找到與輸入內容接近的方法給我參考，有沒有覺得 Ruby 實在太強大了!! 感謝 Ruby ，讚嘆 Ruby。</p><p>要退出 IRB 很簡單，只需輸入 <code>exit</code> 或 <code>quit</code> 或 <code>Ctrl + D</code> ，即退回終端機介面。</p><p>盡管 IRB 非常適合快速檢查某些內容，但它不允許在方法或循環中進行測試，此時用 Pry 較適合。</p><h1 id="pry">Pry</h1><p><a href="https://github.com/pry/pry" target="_blank" rel="noopener">Pry</a> 是 IRB 的加強版，有大量附加的功能(ex: 更漂亮的介面、可以使用 <code>show-method</code> 等)。雖說 Pry 更加強大，但蠻多時候，我仍以 IRB 進行測試，直到需要在 <strong>classes, methods, hashes, iterations</strong> 中進行測試時，Pry 會是你的好夥伴。</p><h2 id="安裝-pry">安裝 Pry</h2><p>可以透過安裝取得 Pry<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 終端機輸入</span></span><br><span class="line">$ gem install pry</span><br></pre></td></tr></table></figure></p><p>或在檔案中加入 <code>require 'pry'</code>，並使用<code>binding.pry</code> 該方法可以立即將程式碼暫停，以便進行測試。會從 <code>binding.pry</code> 這裡開始，並啟動新的 REPL 介面，只需在 Pry 中測試，無須猜測該程式碼的回傳值是什麼。</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># test-pry.rb</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'pry'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span></span></span><br><span class="line">    puts <span class="string">"hello world!"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">a = A.new</span><br><span class="line"></span><br><span class="line"><span class="comment"># start a REPL session</span></span><br><span class="line">binding.pry</span><br><span class="line"></span><br><span class="line"><span class="comment"># program resumes here (after pry session)</span></span><br><span class="line">puts <span class="string">"program resumes here."</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 終端機輸入</span></span><br><span class="line">$ ruby test-pry.rb</span><br><span class="line"></span><br><span class="line"><span class="symbol">From:</span> /mnt/c/code/demo/Ruby/test-pry.rb @ line <span class="number">12</span> <span class="symbol">:</span></span><br><span class="line"></span><br><span class="line">     <span class="number">7</span>: <span class="keyword">end</span></span><br><span class="line">     <span class="number">8</span><span class="symbol">:</span></span><br><span class="line">     <span class="number">9</span>: a = A.new</span><br><span class="line">    <span class="number">10</span><span class="symbol">:</span></span><br><span class="line">    <span class="number">11</span>: <span class="comment"># start a REPL session</span></span><br><span class="line"> =&gt; <span class="number">12</span>: binding.pry</span><br><span class="line">    <span class="number">13</span><span class="symbol">:</span></span><br><span class="line">    <span class="number">14</span>: <span class="comment"># program resumes here (after pry session)</span></span><br><span class="line">    <span class="number">15</span>: puts <span class="string">"program resumes here."</span></span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; a.hello</span><br><span class="line">hello world!</span><br><span class="line">=&gt; nil</span><br><span class="line">[<span class="number">2</span>] pry(main)&gt; <span class="function"><span class="keyword">def</span> <span class="title">a</span>.<span class="title">abc</span></span></span><br><span class="line">[<span class="number">2</span>] pry(main)*   puts <span class="string">"在 pry 中測試，並不會改變原本 test-pry.rb 檔案"</span></span><br><span class="line">[<span class="number">2</span>] pry(main)* <span class="keyword">end</span></span><br><span class="line">=&gt; <span class="symbol">:abc</span></span><br><span class="line">[<span class="number">3</span>] pry(main)&gt; a.abc</span><br><span class="line">在 pry 中測試，並不會改變原本 test-pry.rb 檔案</span><br><span class="line">=&gt; nil</span><br><span class="line">[<span class="number">4</span>] pry(main)&gt; exit</span><br><span class="line">program resumes here.</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/pdrTTZU.png" alt></p><p>也可以直接在終端機輸入 <code>pry</code> 進入操作<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 終端機輸入</span></span><br><span class="line">$ pry</span><br></pre></td></tr></table></figure></p><p>要退出 Pry 並繼續執行後面程式碼的話，只需輸入 <code>exit</code> 或 <code>quit</code> 或 <code>Ctrl + D</code> 。</p><p>退出 Pry 並中止後面程式碼執行，輸入 <code>!!!</code></p><p><img src="https://i.imgur.com/Fsw9K9P.png" alt></p><h2 id="從-irb-進-pry">從 IRB 進 Pry</h2><p>要從 IRB 中進入 Pry 的話，先輸入 <code>require 'pry'</code> 再輸入 <code>binding.pry</code> 或 <code>pry</code> 即進入 Pry。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 終端機輸入</span></span><br><span class="line">$ irb</span><br><span class="line"></span><br><span class="line">&gt; <span class="keyword">require</span> <span class="string">'pry'</span></span><br><span class="line"> =&gt; true</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 1:</span></span><br><span class="line">&gt; binding.pry</span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; exit</span><br><span class="line"> =&gt; nil</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2:</span></span><br><span class="line">&gt; pry</span><br><span class="line">[<span class="number">1</span>] pry(main)&gt; quit</span><br><span class="line"> =&gt; nil</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/iVBDBTm.png" alt></p><h2 id="從-pry-進-irb">從 Pry 進 IRB</h2><p>要從 Pry 中進入 IRB 的話，輸入 <code>binding.irb</code> 即可。</p><p><img src="https://i.imgur.com/rllvvSE.png" alt></p><h1 id="rails-console">Rails console</h1><p>類似 Ruby 的 IRB 介面，並載入整個 Rails 專案的環境，可以在這裡直接操作資料，快速驗證想法且不用到網站便能修改伺服器上的資料：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要在 Rails 專案資料夾底下</span></span><br><span class="line">$ rails console</span><br><span class="line"><span class="comment"># 縮寫為 rails c</span></span><br><span class="line"></span><br><span class="line">&gt; t = Task.find(<span class="number">1</span>)  <span class="comment"># 括號可省略</span></span><br><span class="line">&gt; t.title</span><br><span class="line"> =&gt; <span class="string">"看書"</span></span><br><span class="line">&gt; t.title = <span class="string">"跑步 30 分鐘"</span></span><br><span class="line"> =&gt; <span class="string">"跑步 30 分鐘"</span></span><br><span class="line">&gt; t.title</span><br><span class="line"> =&gt; <span class="string">"跑步 30 分鐘"</span></span><br></pre></td></tr></table></figure></p><p>預設 <code>rails c</code> 是進入 development 環境，若想進入 production 或 test 環境，只要在 <code>rails c</code> 後面加入對應單字即可：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Loading development environment</span></span><br><span class="line">$ rails c</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading production environment</span></span><br><span class="line">$ rails c production</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading test environment</span></span><br><span class="line">$ rails c test</span><br></pre></td></tr></table></figure></p><p>若只想測試，但不想修改資料，可以使用：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rails c --sandbox</span><br><span class="line"></span><br><span class="line">Loading development environment <span class="keyword">in</span> sandbox (Rails <span class="number">5.2</span>.<span class="number">3</span>)</span><br><span class="line">Any modifications you make will be rolled back on exit</span><br></pre></td></tr></table></figure></p><p>要退出 <code>rails console</code> 的話，只需輸入 exit 或 quit 或 Ctrl + D 。</p><h2 id="用-pry-執行-rails-c">用 Pry 執行 <code>rails c</code></h2><p>在 Rails 中，如果不想更改 Gemfile ，可以使用 <code>pry -r</code> 在應用程序環境中運行 Pry：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pry -r ./config/environment</span><br></pre></td></tr></table></figure></p><p>安裝 Gemfile 的話，使用「<a href="https://github.com/rweng/pry-rails" target="_blank" rel="noopener">pry-rails</a>」gem<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="string">'pry-rails'</span>, <span class="symbol">:group</span> =&gt; <span class="symbol">:development</span></span><br></pre></td></tr></table></figure></p><h1 id="小結">小結</h1><p>這三個 <code>irb</code>、<code>pry</code>、<code>rails console</code> 沒有好壞之分，依不同情境需求，選擇不同工具處理即可。</p><h1 id="參考">參考</h1><ol><li><a href="https://github.com/pry/pry" target="_blank" rel="noopener">Pry GitHub</a></li><li><a href="http://pryrepl.org/" target="_blank" rel="noopener">Pry - an IRB alternative and runtime developer console</a></li><li><a href="https://link.medium.com/kgJj0sKZP1" target="_blank" rel="noopener">Testing your Ruby code: IRB vs. Pry</a></li><li><a href="https://www.sitepoint.com/rubyists-time-pry-irb/" target="_blank" rel="noopener">Rubyists, It’s Time to PRY Yourself Off IRB!</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;說明&quot;&gt;說明&lt;/h1&gt;
&lt;p&gt;欲測試想法(但懶得開新檔案)或抓 bug 時，最常使用的工具，將針對 &lt;code&gt;irb&lt;/code&gt; 、 &lt;code&gt;pry&lt;/code&gt; 、 &lt;code&gt;rails console&lt;/code&gt; 進行介紹。&lt;/p&gt;
&lt;h1 id=
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Rails" scheme="https://riverye.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="https://riverye.com/tags/Ruby/"/>
    
      <category term="IRB" scheme="https://riverye.com/tags/IRB/"/>
    
      <category term="Pry" scheme="https://riverye.com/tags/Pry/"/>
    
      <category term="rails console" scheme="https://riverye.com/tags/rails-console/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu sudo 免輸入密碼 no password 設定</title>
    <link href="https://riverye.com/2019/11/22/Ubuntu-sudo-%E5%85%8D%E8%BC%B8%E5%85%A5%E5%AF%86%E7%A2%BC-no-password-%E8%A8%AD%E5%AE%9A/"/>
    <id>https://riverye.com/2019/11/22/Ubuntu-sudo-免輸入密碼-no-password-設定/</id>
    <published>2019-11-21T16:00:00.000Z</published>
    <updated>2019-11-25T15:18:13.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="說明">說明</h1><p>在 Ubuntu 使用 sudo 權限時，總需要輸入密碼，好麻煩，透過以下設定，能一勞永逸。</p><p><img src="https://i.imgur.com/dWkifdp.png" alt></p><h1 id="步驟">步驟</h1><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 終端機輸入</span></span><br><span class="line">$ sudo vi /etc/sudoers</span><br></pre></td></tr></table></figure></p><p>將約第 26 行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sudo   ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure></p><p>改成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%sudo   ALL=(ALL:ALL) NOPASSWD:ALL</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/ohoumhT.png" alt></p><p>存檔，大功告成！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;說明&quot;&gt;說明&lt;/h1&gt;
&lt;p&gt;在 Ubuntu 使用 sudo 權限時，總需要輸入密碼，好麻煩，透過以下設定，能一勞永逸。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/dWkifdp.png&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;步驟&quot;
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Ubuntu" scheme="https://riverye.com/tags/Ubuntu/"/>
    
      <category term="sudo" scheme="https://riverye.com/tags/sudo/"/>
    
      <category term="no password" scheme="https://riverye.com/tags/no-password/"/>
    
  </entry>
  
</feed>
