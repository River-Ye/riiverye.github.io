<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://riverye.com/"/>
  <updated>2022-12-31T16:06:01.277Z</updated>
  <id>https://riverye.com/</id>
  
  <author>
    <name>River-Ye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何使用 Postman 測試 API</title>
    <link href="https://riverye.com/2022/12/31/How-to-Test-APIs-with-Postman/"/>
    <id>https://riverye.com/2022/12/31/How-to-Test-APIs-with-Postman/</id>
    <published>2022-12-30T16:00:00.000Z</published>
    <updated>2022-12-31T16:06:01.277Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>不論前後端在處理或串接 API 時，除了在瀏覽器測試外，透過 <a href="https://www.postman.com/" target="_blank" rel="noopener">Postman</a> 進行測試是非常地方便，這篇主要是紀錄如何使用，之後有人問時，就能請對方直接看這篇了 xd</p><h2><span id="說明">說明</span></h2><p>Windows 與 macOS 皆能到 <a href="https://www.postman.com/downloads/" target="_blank" rel="noopener">Postman</a> 官方網站下載，若不想安裝，也能使用 Postman 提供的 <a href="https://web.postman.co/" target="_blank" rel="noopener">web 版</a>，使用 web 版需要先註冊才能使用，介面大同小異，以下會以 macOS 操作為主</p><p>Postman 有免費版與付費版，我自己是用免費版，需求已經夠我使用，若需求比較多，免費版 Postman 已經無法滿足需求，但又不想付費時，可以考慮用 <a href="https://hoppscotch.io/" target="_blank" rel="noopener">Hoppscotch</a> (原名是 <a href="https://postwoman.io/" target="_blank" rel="noopener">Postwoman</a>)，Hoppscotch 是<a href="https://github.com/hoppscotch/hoppscotch" target="_blank" rel="noopener">開源軟體</a>，介面操作上與 Postman 也很相似，也有提供 web 版可以操作</p><p>note: 類似替代軟體蠻多的，就不多做贅述</p><h2><span id="圖文教學">圖文教學</span></h2><p>對我來說，動手做學習效果最好，以下直接提供 HTTP GET、POST 的範例，以及遇到要登入的網站時，要如何用 Postman 打 API</p><h3><span id="示範用-postman-http-get-不用登入的網站">示範用 Postman HTTP GET - 不用登入的網站</span></h3><p>以 <a href="https://echo.hoppscotch.io" target="_blank" rel="noopener">https://echo.hoppscotch.io</a> 為例<br>測試完後，點 <code>&lt;/&gt;</code> icon 並選想要的程式語言範例 code (這超好用)<br><img src="HTTP_GET_%E7%AF%84%E4%BE%8B-%E4%B8%8D%E7%94%A8%E7%99%BB%E5%85%A5%E7%9A%84%E7%B6%B2%E7%AB%99.png" alt></p><h3><span id="示範用-postman-http-post-要登入的網站">示範用 Postman HTTP POST - 要登入的網站</span></h3><p>以 <a href="https://data.gov.tw/" target="_blank" rel="noopener">政府資料開放平臺</a> 的 <a href="https://data.gov.tw/user/subscriptions" target="_blank" rel="noopener">訂閱資料集清單</a> 為例</p><p><div class="video-container"><iframe src="//www.youtube.com/embed/oHzn9hoq7QE" frameborder="0" allowfullscreen></iframe></div>在 Chrome 的開發者工具 (F12) 中，透過 Network 可以觀察網站打了哪些 endpoint<br><img src="Chrome%E7%9A%84Network.png" alt></p><h3><span id="示範打用-swagger-建立的網站">示範打用 Swagger 建立的網站</span></h3><p>簡易說明: <a href="https://swagger.io/" target="_blank" rel="noopener">Swagger</a> 可用來自動產生 API 文件，蠻多提供 API 的網站是用 Swagger 建立的，看到下圖這類型風格的網站，很高機率都是用 Swagger 建立的</p><p>圖中範例的網址: <a href="https://data.gcis.nat.gov.tw/resources/swagger/" target="_blank" rel="noopener">商工行政資料開放平臺 data.gcis.nat.gov.tw</a><img src="Swagger_example.png" alt></p><p>這邊以 <a href="https://www.cyberbiz.io/" target="_blank" rel="noopener">CYBERBIZ</a> 的 API 為例，可 Google 搜尋「CYBERBIZ API」即可找到<a href="https://www.cyberbiz.io/support/?p=20739" target="_blank" rel="noopener">相關文件與連結</a></p><h3><span id="示範用-postman-http-get-打-cyberbiz-的-api">示範用 Postman HTTP GET 打 CYBERBIZ 的 API</span></h3><p>note: 範例中的網址與相關功能，若 CYBERBIZ 有更動或失效，則不另外更新影片<br><div class="video-container"><iframe src="//www.youtube.com/embed/PGVPvpBPLi0" frameborder="0" allowfullscreen></iframe></div></p><h3><span id="示範用-postman-http-post-打-cyberbiz-的-api">示範用 Postman HTTP POST 打 CYBERBIZ 的 API</span></h3><p>note: 範例中的網址與相關功能，若 CYBERBIZ 有更動或失效，則不另外更新影片<br><div class="video-container"><iframe src="//www.youtube.com/embed/cJXictjQotU" frameborder="0" allowfullscreen></iframe></div></p><p>以下是自己寫的 Ruby Class，方便可以用 POST (GET 就不寫了 xd)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'uri'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'net/http'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'digest'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'base64'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'openssl'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CyberbizApi</span></span></span><br><span class="line">  <span class="keyword">attr_reader</span> <span class="symbol">:username</span>, <span class="symbol">:secret</span></span><br><span class="line"></span><br><span class="line">  URL = <span class="string">'https://api.cyberbiz.co/v1/'</span>.freeze</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span></span></span><br><span class="line">    @username = <span class="string">'your_username'</span></span><br><span class="line">    @secret = <span class="string">'your_secret'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(path, data)</span></span></span><br><span class="line">    send_request(<span class="symbol">:post</span>, path, data)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  private</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">send_request</span><span class="params">(request_method, path, data)</span></span></span><br><span class="line">    uri = URI(URL + path)</span><br><span class="line">    uri.query = URI.encode_www_form(data)</span><br><span class="line">    http = init_http(uri)</span><br><span class="line">    request = build_request(request_method, uri, data)</span><br><span class="line">    send_request_and_return_response(http, request)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">init_http</span><span class="params">(uri)</span></span></span><br><span class="line">    http = Net::HTTP.new(uri.host, uri.port)</span><br><span class="line">    http.use_ssl = uri.scheme == <span class="string">'https'</span></span><br><span class="line">    http</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">build_request</span><span class="params">(request_method, uri, data)</span></span></span><br><span class="line">    request =</span><br><span class="line">      <span class="keyword">case</span> request_method</span><br><span class="line">      <span class="keyword">when</span> <span class="symbol">:get</span></span><br><span class="line">        Net::HTTP::Get.new(uri.request_uri)</span><br><span class="line">      <span class="keyword">when</span> <span class="symbol">:post</span></span><br><span class="line">        Net::HTTP::Post.new(uri.request_uri)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    setting_request(request, uri, data)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">setting_request</span><span class="params">(request, uri, data)</span></span></span><br><span class="line">    request.content_type = <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">    request[<span class="string">'x-date'</span>] = Time.now.gmtime.strftime(<span class="string">'%a, %d %b %Y %T GMT'</span>)</span><br><span class="line">    request.body = uri.query</span><br><span class="line">    digest = Base64.strict_encode64(Digest::SHA256.digest(request.body))</span><br><span class="line">    request[<span class="string">'digest'</span>] = <span class="string">"SHA-256=<span class="subst">#&#123;digest&#125;</span>"</span></span><br><span class="line">    signature = generate_signature(request)</span><br><span class="line">    request[<span class="string">"authorization"</span>] = <span class="string">"hmac username=\"<span class="subst">#&#123;username&#125;</span>\", "</span>\</span><br><span class="line">                               <span class="string">"algorithm=\"hmac-sha256\", "</span>\</span><br><span class="line">                               <span class="string">"headers=\"x-date request-line digest\", "</span>\</span><br><span class="line">                               <span class="string">"signature=\"<span class="subst">#&#123;signature&#125;</span>\""</span></span><br><span class="line">    request</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">generate_signature</span><span class="params">(request)</span></span></span><br><span class="line">    x_date = request.to_hash[<span class="string">'x-date'</span>].first</span><br><span class="line">    digest = request.to_hash[<span class="string">'digest'</span>].first</span><br><span class="line">    sig_str = <span class="string">"x-date: <span class="subst">#&#123;x_date&#125;</span>\n<span class="subst">#&#123;request.method&#125;</span> <span class="subst">#&#123;request.path&#125;</span> HTTP/1.1\ndigest: <span class="subst">#&#123;digest&#125;</span>"</span></span><br><span class="line">    sha256_digest = OpenSSL::Digest.new(<span class="string">'sha256'</span>)</span><br><span class="line">    hmac_digest = OpenSSL::HMAC.digest(sha256_digest, secret, sig_str)</span><br><span class="line">    Base64.strict_encode64(hmac_digest)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">send_request_and_return_response</span><span class="params">(http, request)</span></span></span><br><span class="line">    response = http.request(request)</span><br><span class="line">    response.body</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>測試打「新增商品」<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">  title: &quot;test&quot;,</span><br><span class="line">  handle: &quot;hello&quot;,</span><br><span class="line">  published: true,</span><br><span class="line">  price: 666,</span><br><span class="line">  tax_type_id: &quot;inclusive_tax&quot;,</span><br><span class="line">&#125;</span><br><span class="line">response = CyberbizApi.new.post(&apos;products&apos;, data)</span><br></pre></td></tr></table></figure></p><h3><span id="示範用-postman-打-line-notify-api">示範用 Postman 打 LINE Notify API</span></h3><p>可參考之前寫的這篇<a href="https://riverye.com/2022/01/30/line-notify/#6-%E7%94%A8-postman-%E6%B8%AC%E8%A9%A6%E7%9C%8B%E7%9C%8B-1">用 Ruby 將訊息傳到 LINE 群組 (LINE Notify API)</a></p><h3><span id="若遇到需要夾帶上傳檔案時">若遇到需要夾帶(上傳)檔案時</span></h3><p>Postman 有支援夾帶檔案<img src="Upload_file.png" alt></p><h2><span id="小結">小結</span></h2><p>若對 Postman 不熟建議可以看上面的 Youtube 影片範例，可以到 Youtube 的網站觀看，都已經把時間戳寫好了，全部看完不用 5 分鐘</p><p>千萬不要相信前端傳送的資料，通常後端會再次驗證資料，因為前端傳的資料能輕易被修改、自定義多傳參數到後端</p><hr><p>medium 文章連結：<a href="https://link.medium.com/ZdX8mEXVcwb" target="_blank" rel="noopener">https://link.medium.com/ZdX8mEXVcwb</a><br>本文同步發布於 <a href="https://riverye.com/2022/12/31/How-to-Test-APIs-with-Postman/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;不論前後端在處理或串接 API 時，除了在瀏覽器測試外，透過 &lt;a href=&quot;https://www.postman.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Postman
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Postman" scheme="https://riverye.com/tags/Postman/"/>
    
      <category term="API" scheme="https://riverye.com/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>如何擷取電腦、手機的封包 (圖文教學)</title>
    <link href="https://riverye.com/2022/12/20/Capturing-Packets-on-a-Computer-and-Mobile-Phone/"/>
    <id>https://riverye.com/2022/12/20/Capturing-Packets-on-a-Computer-and-Mobile-Phone/</id>
    <published>2022-12-19T16:00:00.000Z</published>
    <updated>2022-12-20T15:43:42.740Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>透過網路封包擷取工具，可以擷取到 Windows、Mac、Mobile Phone 等不同裝置上的封包，自己用過 <a href="https://zh.wikipedia.org/zh-tw/Burp_suite" target="_blank" rel="noopener">Burp Suite</a>、<a href="https://zh.wikipedia.org/zh-tw/%E6%9F%A5%E7%88%BE%E6%96%AF%E4%BB%A3%E7%90%86" target="_blank" rel="noopener">Charles</a>、<a href="https://zh.wikipedia.org/zh-tw/Fiddler" target="_blank" rel="noopener">Fiddler</a> 等這幾套軟體，以自己需求來說，<a href="https://www.charlesproxy.com/" target="_blank" rel="noopener">Charles</a> 就夠用了，因此這篇會以這套軟體操作介紹為主。</p><h2><span id="說明">說明</span></h2><p>有在 macOS Ventura‌ 13.0.1 、iOS 16.2 、Windows 10、Android 交叉測試過，確認是可以擷取到封包，由於 Windows 與 macOS 操作大同小異，以及本身是用 iPhone ，故以下說明與截圖會是 macOS 和 iPhone 為主</p><p>因目前許多網站和伺服器是以 HTTPS 來加密傳輸資料，若需要解析加密的資料，可用 Charles 內建提供的憑證來處理，就能看到加密前的資料，若有疑慮可用其它軟體以及另外準備憑證處理</p><p>開始前請先到<a href="https://www.charlesproxy.com/download/" target="_blank" rel="noopener">官網下載安裝 Charles</a></p><h2><span id="免費版限制">免費版限制</span></h2><p>雖說 Charles 是付費軟體，但可以免費使用，限制如下:</p><ol><li><p>開啟程式時，需要等待 10 秒<img src="wait_ten_secondes.png" alt="等待10秒的畫面"></p></li><li><p>每次僅能使用 30 分鐘，超過需要重啟程式<img src="usage_restrictions.png" alt="每使用30分鐘會跳一次訊息"></p></li></ol><p>note: 上述限制已夠我使用，故不影響 (不確定未來政策是否會調整)</p><hr><h2><span id="macos-設定教學">macOS 設定教學</span></h2><h3><span id="影片版教學">影片版教學</span></h3><p><div class="video-container"><iframe src="//www.youtube.com/embed/EIf9zmPCJwE" frameborder="0" allowfullscreen></iframe></div></p><h3><span id="圖文教學">圖文教學</span></h3><ol><li><p>安裝憑證 (Certificate)<br>在 Charles 的 Help → SSL Proxying<br>可選擇直接安裝 (Install Charles Root Certificate)，或先另存憑證 (Save Charles Root Certificate)，在手動匯入<br>這邊以手動匯入為例<img src="charles_settings_01.png" alt="Save Charles Root Certificate"></p></li><li><p>手動匯入憑證 (直接安裝者，可略過這步驟)<br>在 macOS 的 應用程式 → 工具程式 → 鑰匙圈存取<br>將另存的憑證手動匯入，並對該憑證點滑鼠右鍵的「取得資訊」，在「信任」中，改成「永遠信任」<br><img src="charles_settings_02.png" alt="Setting Certificate"></p></li><li><p>設定 Proxy<br>在 Charles 的 Proxy → SSL Proxying Settings → SSL Proxying<br>3-1. 勾選「Enable SSL Proxying」<br>3-2. 設定所有 Host 以及 Port 都要解析 (Empty fields match all values.)<br>3-3. 「macOS Proxy」也要開著<br><img src="charles_settings_03.png" alt="Setting Proxy"></p></li><li><p>開始紀錄 (Start Recording)<br>以 Visual Studio Code 為例<img src="charles_settings_04.png" alt="Start Recording"></p></li></ol><hr><h2><span id="iphone-設定教學">iPhone 設定教學</span></h2><h3><span id="影片版教學">影片版教學</span></h3><p>有錄影，但有些資料較敏感(ex: 手機序號等)，且懶得後製影片，故不放 xd</p><h3><span id="圖文教學">圖文教學</span></h3><ol><li><p>設定 HTTP Proxy Port<br>Proxy → Proxy Settings → Proxies → Port: 8888 → OK<br><img src="iphone_settings_01.png" alt></p></li><li><p>查看電腦的區域網路 IP<br>在 Charles 的 Proxy → Local IP Addresses<br><img src="iphone_settings_02.png" alt></p></li><li><p>Install Charles Root Certificate in iOS Simulators<br><img src="iphone_settings_03.png" alt></p></li><li><p>Install Charles Root Certificate on a Mobile Device or Remote Browser<br>這邊會提醒手機的代理伺服器以及要連哪個網站才能下載憑證<br><img src="iphone_settings_04.png" alt></p></li><li><p>需確保電腦與手機在同個區域網路<br><img src="iphone_settings_05.png" alt></p></li><li><p>手機設定代理伺服器<br>手機的設定 → 一般 → Wi-Fi → 點「i」的 icon 圖案 → 設定代理伺服器<img src="iphone_settings_06.png" alt></p></li><li><p>用 Safari 開啟 <a href="chls.pro/ssh">chls.pro/ssh</a>，並下載憑證<br><img src="iphone_settings_07.png" alt></p></li><li><p>手機安裝憑證<br>手機的設定 → 已下載描述檔 → 安裝  (安裝後，可在這裡查看: 設定 → 一般 → VPN 與 裝置管)<br>測完，可在這移除<br><img src="iphone_settings_08.png" alt></p></li><li><p>手動開啟憑證 <strong>(開啟後，建議先把手機的 Wi-Fi 先關閉再開啟)</strong><br>手機的設定 → 一般 → 關於本機 → 憑證信任設定 → 測試時記得開啟<br><img src="iphone_settings_09.png" alt></p></li><li><p>以 GitHub App 為例<br><img src="iphone_settings_10.png" alt></p></li></ol><hr><h2><span id="小結">小結</span></h2><p>會有這篇是為了解決自己的痛點，像是買的除濕機提供的 App 只能設定 7 組開關時間，但我想要每天早晚指定時間都自動開啟 1 小時，因超過 App 提供 7 組的設定上限，於是乎有了解析手機 App 封包的想法，觀察打的是哪隻 API 並用 Postman 測試，最後寫成 iPhone 的捷徑與自動化，還能用 Siri 語音控制，進而實現自動化解決這問題</p><p>其實我 3 個多月前就已經完成上述的事情，發現在寫這篇文章時，有些細節都忘了，趁還有動力時，趕緊做個紀錄，免得哪天又忘記時，也能當筆記回顧</p><p>其他類似的軟體蠻多的，像是知名的 <a href="https://zh.wikipedia.org/zh-tw/Wireshark" target="_blank" rel="noopener">Wireshark</a> 等軟體，這邊就不多贅述了</p><hr><p>medium 文章連結：<a href="https://link.medium.com/3SaxKRlRUvb" target="_blank" rel="noopener">https://link.medium.com/3SaxKRlRUvb</a><br>本文同步發布於 <a href="https://riverye.com/2022/12/20/Capturing-Packets-on-a-Computer-and-Mobile-Phone/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;透過網路封包擷取工具，可以擷取到 Windows、Mac、Mobile Phone 等不同裝置上的封包，自己用過 &lt;a href=&quot;https://zh.wikipedia.org/zh-tw/Burp_su
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="抓包軟體" scheme="https://riverye.com/tags/%E6%8A%93%E5%8C%85%E8%BB%9F%E9%AB%94/"/>
    
      <category term="網路封包擷取" scheme="https://riverye.com/tags/%E7%B6%B2%E8%B7%AF%E5%B0%81%E5%8C%85%E6%93%B7%E5%8F%96/"/>
    
      <category term="Charles" scheme="https://riverye.com/tags/Charles/"/>
    
  </entry>
  
  <entry>
    <title>在 Ruby 中用 Tor 打 API：如何隱藏真實 IP</title>
    <link href="https://riverye.com/2022/12/17/Protecting-Your-Real-IP-When-Hitting-APIs-with-Ruby-and-Tor/"/>
    <id>https://riverye.com/2022/12/17/Protecting-Your-Real-IP-When-Hitting-APIs-with-Ruby-and-Tor/</id>
    <published>2022-12-16T16:00:00.000Z</published>
    <updated>2022-12-31T07:02:44.895Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>用 Ruby 在打 API 時，若不想讓人知道請求的 IP (request IP)，可以搭配用 Tor 來實踐。<br><a href="https://zh.m.wikipedia.org/zh-tw/Tor" target="_blank" rel="noopener">Tor (The Onion Router)</a> 是一個用於匿名通訊的網絡，可以用來瀏覽網頁、傳輸數據和通訊。<br>本文將介紹如何在 Ruby 中使用 Tor 進行匿名瀏覽和通訊。</p><h2><span id="說明">說明</span></h2><p>這邊以 Ruby 3.1.2 為範例，並提供 2 種方法作為參考</p><h1><span id="方法一">方法一</span></h1><p>用別人寫好的 Docker image <a href="https://github.com/mattes/rotating-proxy" target="_blank" rel="noopener">docker-rotating-proxy</a><br>note: 我個人比較習慣用這個</p><p>照著官方文件下載與執行 Docker container<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 5566:5566 -p 4444:4444 --env tors=25 mattes/rotating-proxy</span><br></pre></td></tr></table></figure></p><p>在 Command-line 測試<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --proxy 127.0.0.1:5566 https://api.my-ip.io/ip</span><br></pre></td></tr></table></figure></p><p>以下是自己寫的 Ruby Class，方便可以用 GET 或 POST<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'net/http'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'json'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TorHTTP</span></span></span><br><span class="line">  <span class="keyword">attr_reader</span> <span class="symbol">:proxy_address</span>, <span class="symbol">:proxy_port</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 在這裡指定 Tor 的 SOCKS 代理的位置</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(<span class="symbol">proxy_address:</span> <span class="string">'127.0.0.1'</span>, <span class="symbol">proxy_port:</span> <span class="number">5566</span>)</span></span></span><br><span class="line">    @proxy_address = proxy_address</span><br><span class="line">    @proxy_port = proxy_port</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(url, <span class="symbol">data:</span> <span class="literal">nil</span>)</span></span></span><br><span class="line">    send_request(<span class="symbol">:get</span>, url, data)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(url, <span class="symbol">data:</span> <span class="literal">nil</span>)</span></span></span><br><span class="line">    send_request(<span class="symbol">:post</span>, url, data)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  private</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">send_request</span><span class="params">(request_method, url, data)</span></span></span><br><span class="line">    uri = URI(url)</span><br><span class="line">    http = init_http(uri)</span><br><span class="line">    request = build_request(request_method, uri)</span><br><span class="line">    add_request_body(request, data) <span class="keyword">if</span> data</span><br><span class="line">    send_request_and_return_response(http, request)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">init_http</span><span class="params">(uri)</span></span></span><br><span class="line">    http = Net::HTTP.new(uri.host, uri.port, proxy_address, proxy_port)</span><br><span class="line">    http.use_ssl = uri.scheme == <span class="string">'https'</span></span><br><span class="line">    http.open_timeout = <span class="number">10</span></span><br><span class="line">    http.continue_timeout = <span class="number">10</span></span><br><span class="line">    http</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">build_request</span><span class="params">(request_method, uri)</span></span></span><br><span class="line">    <span class="keyword">case</span> request_method</span><br><span class="line">    <span class="keyword">when</span> <span class="symbol">:get</span></span><br><span class="line">      Net::HTTP::Get.new(uri.request_uri)</span><br><span class="line">    <span class="keyword">when</span> <span class="symbol">:post</span></span><br><span class="line">      Net::HTTP::Post.new(uri.request_uri)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">add_request_body</span><span class="params">(request, data)</span></span></span><br><span class="line">    request.body = data.to_json</span><br><span class="line">    request.content_type = <span class="string">'application/json'</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">send_request_and_return_response</span><span class="params">(http, request)</span></span></span><br><span class="line">    response = http.request(request)</span><br><span class="line">    response.body</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>測試打查詢 IP 看 IP 是否會變<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TorHTTP.new.get(<span class="string">'https://ifconfig.me'</span>)</span><br></pre></td></tr></table></figure></p><p><img src="TiSiTOK.png" alt></p><h3><span id="改成打-post-測試">改成打 POST 測試</span></h3><p>可以參考之前寫的這篇 <a href="https://riverye.com/2020/09/20/Day15-%E5%A6%82%E4%BD%95%E7%9C%8B%E8%87%AA%E5%B7%B1%E6%89%93%E5%87%BA%E5%8E%BB%E7%9A%84-request-%E5%AE%8C%E6%95%B4%E8%B3%87%E8%A8%8A%EF%BC%8C%E4%BB%A5-PostBin-%E5%92%8C-Webhook-site-%E7%82%BA%E4%BE%8B/">如何看自己打出去的 request 完整資訊，以 PostBin 和 Webhook.site 為例</a><br>這邊以 PostBin 為例<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = &#123; <span class="symbol">hello:</span> <span class="string">'world'</span> &#125;</span><br><span class="line">TorHTTP.new.post(<span class="string">'https://www.toptal.com/developers/postbin/1671278873904-9991861544549'</span>, <span class="symbol">data:</span> data)</span><br></pre></td></tr></table></figure></p><p><img src="8Xng2AD.png" alt></p><h1><span id="方法二">方法二</span></h1><ol><li>用別人寫好的 Docker image  <a href="https://github.com/PeterDaveHello/tor-socks-proxy" target="_blank" rel="noopener">Tor-socks-proxy</a></li><li>除了上述步驟外，也要安裝 <a href="https://rubygems.org/gems/socksify" target="_blank" rel="noopener">socksify gem</a><br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 也有其他方式能做到，請看官方文件</span></span><br><span class="line"><span class="comment"># 進入 IRB</span></span><br><span class="line">$ socksify_ruby localhost <span class="number">9150</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'http'</span></span><br><span class="line">HTTP.get(<span class="string">'https://ipinfo.io/ip'</span>).to_s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或跑腳本</span></span><br><span class="line">socksify_ruby localhost <span class="number">9150</span> script.rb</span><br></pre></td></tr></table></figure></li></ol><p>可以發現，它不像方法一的每次 request 的 IP 位址都不同，可看需求使用</p><p><img src="IxWpeAm.png" alt></p><hr><h2><span id="如何查自己-ip-地址">如何查自己 IP 地址</span></h2><p>這邊紀錄幾個比較常用的</p><ol><li><a href="https://ipinfo.io/ip" target="_blank" rel="noopener">https://ipinfo.io/ip</a></li><li><a href="https://ipecho.net/plain" target="_blank" rel="noopener">https://ipecho.net/plain</a></li><li><a href="https://api.my-ip.io/ip" target="_blank" rel="noopener">https://api.my-ip.io/ip</a></li><li><a href="https://ifconfig.me" target="_blank" rel="noopener">https://ifconfig.me</a></li><li><a href="https://ipinfo.tw/ip" target="_blank" rel="noopener">https://ipinfo.tw/ip</a></li><li><a href="https://www.whatismyip.com/" target="_blank" rel="noopener">https://www.whatismyip.com/</a></li><li><a href="https://ipecho.net/plain" target="_blank" rel="noopener">https://ipecho.net/plain</a></li><li><a href="https://check.torproject.org/api/ip" target="_blank" rel="noopener">https://check.torproject.org/api/ip</a></li></ol><h2><span id="小結">小結</span></h2><p>在爬網站資料時，若不想讓人知道實際 IP 時，這是一個還不錯的方法，並租一台機器在雲端上跑，就更難被發現了 XD</p><hr><p>medium 文章連結：<a href="https://link.medium.com/Aw09O7sMPvb" target="_blank" rel="noopener">https://link.medium.com/Aw09O7sMPvb</a><br>本文同步發布於 <a href="https://riverye.com/2022/12/17/Protecting-Your-Real-IP-When-Hitting-APIs-with-Ruby-and-Tor/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;用 Ruby 在打 API 時，若不想讓人知道請求的 IP (request IP)，可以搭配用 Tor 來實踐。&lt;br&gt;
&lt;a href=&quot;https://zh.m.wikipedia.org/zh-tw/
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Ruby" scheme="https://riverye.com/tags/Ruby/"/>
    
      <category term="Tor" scheme="https://riverye.com/tags/Tor/"/>
    
  </entry>
  
  <entry>
    <title>用 Ruby on Rails 幫 Excel 檔案加密、解密和欄位加上超連結、修改字形色彩</title>
    <link href="https://riverye.com/2022/01/31/excel-advanced-skills/"/>
    <id>https://riverye.com/2022/01/31/excel-advanced-skills/</id>
    <published>2022-01-30T16:00:00.000Z</published>
    <updated>2022-12-21T14:34:31.501Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>延續 <a href="https://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/">2021 鐵人賽這篇文章 (Day16 - 匯出 excel-應用篇)</a>，進階介紹如行幫 Excel 檔案加密/解密，還有幫欄位加上超連結、修改字形色彩、增加篩選、凍結第一列..等。</p><h2><span id="說明">說明</span></h2><p>標題已經夠淺白，應該不用多說明吧 (笑</p><p>note: 延續 2021 鐵人賽的 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/6" target="_blank" rel="noopener">repo 中的範例</a></p><h4><span id="demo-用的假資料-excel">demo 用的假資料 Excel</span></h4><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 產一份 demo 用的假資料</span></span><br><span class="line"></span><br><span class="line">xlsx = ShopsExcel::Generator.new.execute</span><br><span class="line">xlsx.use_shared_strings = <span class="literal">true</span></span><br><span class="line">xlsx_file = Rails.root.join(<span class="string">'data/river_demo.xlsx'</span>)</span><br><span class="line">xlsx.serialize(xlsx_file) <span class="comment"># 裡面已經有 4 筆假資料</span></span><br></pre></td></tr></table></figure></p><p><img src="mzeYefq.png" alt></p><h1><span id="excel-加密">Excel 加密</span></h1><h2><span id="使用-secure-spreadsheet-來加密">使用  來加密</span></h2><p><a href="https://github.com/ankane/secure-spreadsheet" target="_blank" rel="noopener">secure-spreadsheet 官方文件</a>很好上手，文字不多，很快就能看完<br>先安裝 <code>npm install -g secure-spreadsheet</code><br>若要針對 XLSX 加密(保護) 的話，CLI example</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure-spreadsheet --password secret --input-format xlsx &lt; input.xlsx &gt; output.xlsx</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"><span class="comment"># 使用 secure-spreadsheet 來加密</span></span><br><span class="line"></span><br><span class="line">input_xlsx_file = Rails.root.join(<span class="string">'data/river_demo.xlsx'</span>)</span><br><span class="line">password = <span class="string">'我是密碼-River'</span></span><br><span class="line">result, status = Open3.capture2(<span class="string">'secure-spreadsheet'</span>, <span class="string">'--password'</span>, password, <span class="string">'--input-format'</span>, <span class="string">'xlsx'</span>, <span class="symbol">stdin_data:</span> File.open(input_xlsx_file))</span><br><span class="line">encrypted_xlsx_file_path = input_xlsx_file.dirname.join(<span class="string">'river_demo_encrypted.xlsx'</span>) <span class="comment"># 加密後的檔案</span></span><br><span class="line">File.write(encrypted_xlsx_file_path, result)</span><br></pre></td></tr></table></figure></p><p><img src="skDVo5x.png" alt></p><p>看完上面後，有沒有很簡單，可惜這套僅支援加密<br>若同時有加密/解密需求的話，可參考以下另一個方法</p><h1><span id="excel-加密解密-另一個方法">Excel 加密/解密 (另一個方法)</span></h1><h2><span id="使用-msoffice-進行加密解密-excel-檔案">使用  進行加密/解密 Excel 檔案</span></h2><p><a href="https://github.com/herumi/msoffice" target="_blank" rel="noopener">msoffice 官方文件</a> 雖然寫是在 64-bit Windows 執行，但也有支援 Linux 喔!!</p><p>note: 安裝方法請參照<a href="https://github.com/herumi/msoffice" target="_blank" rel="noopener">官方文件說明</a></p><p>在 macOS 上實測加密/解密，是沒問題的!!</p><p>以下示範如何解密 Excel 檔案，就不再贅述如何加密</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"><span class="comment"># 假設 msoffice path 與 repo path 是同目錄名 (dirname)</span></span><br><span class="line"></span><br><span class="line">msoffice = Pathname.new(Dir.pwd).dirname.join(<span class="string">'msoffice'</span>, <span class="string">'bin'</span>, <span class="string">'msoffice-crypt.exe'</span>)</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">msoffice = Pathname.new(Dir.pwd).dirname.join(<span class="string">'msoffice/bin/msoffice-crypt.exe'</span>)</span><br><span class="line"></span><br><span class="line">input_xlsx_file = Rails.root.join(<span class="string">'data/river_demo.xlsx'</span>)</span><br><span class="line">encrypted_xlsx_file_path = input_xlsx_file.dirname.join(<span class="string">'river_demo_encrypted.xlsx'</span>)</span><br><span class="line">password = <span class="string">'我是密碼-River'</span></span><br><span class="line">decrypted_xlsx_file_path = input_xlsx_file.dirname.join(<span class="string">'river_demo_decrypted.xlsx'</span>) <span class="comment"># 解密後的檔案</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密 xlsx 檔案</span></span><br><span class="line"><span class="string">`<span class="subst">#&#123;msoffice&#125;</span> -d -p <span class="subst">#&#123;password&#125;</span> <span class="subst">#&#123;encrypted_xlsx_file_path&#125;</span> <span class="subst">#&#123;decrypted_xlsx_file_path&#125;</span>`</span></span><br></pre></td></tr></table></figure></p><h3><span id="補充-隨機產密碼">補充: 隨機產密碼</span></h3><p>若密碼要改成隨機產生 (包含數字、英文大小寫) 的話，以下幾種方法皆可產密碼</p><p>隨機產的密碼，務必要存起來，不然加密後的 Excel 會不知道開啟的密碼 XD<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ openssl rand -base64 32</span><br><span class="line"></span><br><span class="line"><span class="comment"># macOS 需安裝 brew install pwgen</span></span><br><span class="line">$ pwgen 14 1 --symbols</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ruby</span></span><br><span class="line"><span class="comment"># need require 'securerandom'</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'securerandom'</span></span><br><span class="line"></span><br><span class="line">SecureRandom.hex</span><br><span class="line">SecureRandom.base64</span><br><span class="line">SecureRandom.alphanumeric(<span class="number">20</span>) <span class="comment"># 20 為密碼長度</span></span><br></pre></td></tr></table></figure></p><p><img src="ETt4MNY.png" alt></p><hr><h1><span id="幫-excel-欄位加超連結-修改字形色彩等">幫 Excel 欄位加超連結、修改字形色彩...等</span></h1><p>仍以上面 demo 資料為主(未加密的)<br>若需要幫已加上超連結的欄位資料，修改字形色彩、加粗體底線的話，這部分的範例，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/10" target="_blank" rel="noopener">pr</a></p><h2><span id="增加超連結-hyperlink">增加超連結 (hyperlink)</span></h2><p>commit 寫比較完整，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/10/commits/850fbddad22152f877e36bcbab3407459cfa5f26" target="_blank" rel="noopener">commit</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/generator.rb</span></span><br><span class="line"></span><br><span class="line">LINK_PATTERN = <span class="regexp">/\A\[(.*)\]\((http.*)\)\z/</span> <span class="comment"># 針對資料 "[data](https://riverye.com/shops/id)"，過濾成 data 和 https://riverye.com/shops/id</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_link</span><span class="params">(row_data)</span></span></span><br><span class="line">  row_data.each_with_index.map <span class="keyword">do</span> <span class="params">|data, index|</span></span><br><span class="line">    <span class="keyword">if</span> data.is_a?(String) &amp;&amp; matched = data.match(LINK_PATTERN)</span><br><span class="line">      row_data[index] = matched[<span class="number">1</span>]</span><br><span class="line">      [index, matched[<span class="number">2</span>]]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span>.compact</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_link</span><span class="params">(sheet, links, cur_row)</span></span></span><br><span class="line">  links.map <span class="keyword">do</span> <span class="params">|index, link|</span></span><br><span class="line">    sheet.add_hyperlink(<span class="symbol">location:</span> link, <span class="symbol">ref:</span> sheet.rows[cur_row.row_index].cells[index])</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="增加篩選-凍結第一列">增加篩選、凍結第一列</span></h2><p>commit 寫比較完整，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/10/commits/1d0e45b6b665f22621689faca2c4edb5c80fb6eb" target="_blank" rel="noopener">commit</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/generator.rb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加篩選</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_auto_filter</span><span class="params">(sheet)</span></span></span><br><span class="line">  number = TITLES.size - <span class="number">1</span></span><br><span class="line">  name = ((number % <span class="number">26</span>) + <span class="string">'A'</span>.ord).chr</span><br><span class="line">  excel_column_name =</span><br><span class="line">    <span class="keyword">if</span> number &lt; <span class="number">26</span></span><br><span class="line">      name</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      (((number / <span class="number">26</span>) - <span class="number">1</span>) + <span class="string">'A'</span>.ord).chr + name</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  sheet.auto_filter = <span class="string">"A1:<span class="subst">#&#123;excel_column_name&#125;</span>1"</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 凍結第一列</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">freeze_header</span><span class="params">(sheet)</span></span></span><br><span class="line">  sheet.sheet_view.pane <span class="keyword">do</span> <span class="params">|pane|</span></span><br><span class="line">    pane.top_left_cell = <span class="string">'B2'</span></span><br><span class="line">    pane.state = <span class="symbol">:frozen_split</span></span><br><span class="line">    pane.y_split = <span class="number">1</span></span><br><span class="line">    pane.x_split = <span class="number">0</span></span><br><span class="line">    pane.active_pane = <span class="symbol">:bottom_right</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="針對有超連結欄位改成藍色字形色彩-加底線">針對有超連結欄位，改成藍色字形色彩、加底線</span></h2><p>commit 寫比較完整，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/10/commits/ce1a12d4efbcfe7d18e368f6aae3bab8581accac" target="_blank" rel="noopener">commit</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/generator.rb</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_link</span><span class="params">(sheet, links, cur_row)</span></span></span><br><span class="line">  links.map <span class="keyword">do</span> <span class="params">|index, link|</span></span><br><span class="line">    ref = sheet.rows[cur_row.row_index].cells[index]</span><br><span class="line">    <span class="comment"># ref.r # A3</span></span><br><span class="line">    ref.color = <span class="string">'0000FF'</span> <span class="comment"># 藍色</span></span><br><span class="line">    ref.u = <span class="literal">true</span> <span class="comment"># 底線</span></span><br><span class="line">    sheet.add_hyperlink(<span class="symbol">location:</span> link, <span class="symbol">ref:</span> ref)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="補測試">補測試</span></h2><p>commit 寫比較完整，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/10/commits/50b9c1d9f72a90fd84d3eb1193072a055d66662b" target="_blank" rel="noopener">commit</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/generator_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 驗證: 超連結</span></span><br><span class="line">expect_hyperlink = [first_sheet.hyperlinks.first.location, first_sheet.hyperlinks.first.ref]</span><br><span class="line">expect(expect_hyperlink).to match_array(</span><br><span class="line">  [<span class="string">"https://riverye.com/shops/<span class="subst">#&#123;@shop.id&#125;</span>"</span>, <span class="string">'A2'</span>]</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 驗證: 顏色</span></span><br><span class="line">expect(first_sheet.rows[<span class="number">1</span>].cells.map(&amp;<span class="symbol">:color</span>).map &#123; <span class="params">|d|</span> d&amp;.rgb &#125;).to match_array(</span><br><span class="line">  [<span class="string">'FF0000FF'</span>, <span class="literal">nil</span>, <span class="literal">nil</span>]</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 驗證: 底線</span></span><br><span class="line">expect(first_sheet.rows[<span class="number">1</span>].cells.map(&amp;<span class="symbol">:u</span>)).to match_array(</span><br><span class="line">  [<span class="symbol">:single</span>, <span class="literal">nil</span>, <span class="literal">nil</span>]</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><h3><span id="實際結果">實際結果</span></h3><p><img src="NLdzsvQ.png" alt></p><h2><span id="小結">小結</span></h2><p>原本是只打算寫如何幫 Excel 的 xlsx 檔案加密，想說都寫了，順便查下如何解密，若有更好的方法，歡迎留言和我說，謝謝!!</p><p>寫加入超連結那段時，邊寫邊補資料 (原本就只是單純要寫如何加超連結，改字形色彩、下底線..等，是後來補的)，同時參考<a href="https://github.com/randym/axlsx/tree/master/examples" target="_blank" rel="noopener">官方範例</a>，網路搜尋下，也能查到許多可以參考的~</p><h2><span id="參考文件">參考文件</span></h2><ol><li><a href="https://github.com/roo-rb/roo/issues/399" target="_blank" rel="noopener">Opening password-protected excel files? #399</a></li><li><a href="https://github.com/randym/axlsx/tree/master/examples" target="_blank" rel="noopener">axlsx 官方文件</a></li></ol><hr><p>medium 文章連結：<a href="https://link.medium.com/EAV6xgl0fnb" target="_blank" rel="noopener">https://link.medium.com/EAV6xgl0fnb</a><br>本文同步發布於 <a href="https://riverye.com/2022/01/31/excel-advanced-skills/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;延續 &lt;a href=&quot;https://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/&quot;&gt;
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Ruby on Rails" scheme="https://riverye.com/tags/Ruby-on-Rails/"/>
    
      <category term="Excel" scheme="https://riverye.com/tags/Excel/"/>
    
      <category term="xlsx" scheme="https://riverye.com/tags/xlsx/"/>
    
  </entry>
  
  <entry>
    <title>用 Ruby 將訊息傳到 LINE 群組 (LINE Notify API)</title>
    <link href="https://riverye.com/2022/01/30/line-notify/"/>
    <id>https://riverye.com/2022/01/30/line-notify/</id>
    <published>2022-01-29T16:00:00.000Z</published>
    <updated>2022-12-21T14:28:51.284Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>首先你要先有 LINE，若沒有，可以左轉離開了 XD</p><h2><span id="步驟">步驟</span></h2><h3><span id="1-到-line-notify-並登入個人的-line-帳號">1. 到 LINE Notify ，並登入個人的 LINE 帳號</span></h3><p><a href="https://notify-bot.line.me/zh_TW/" target="_blank" rel="noopener">LINE Notify</a></p><h4><span id="line-notify-頁面">LINE Notify 頁面</span></h4><p><img src="jZ0yzC0.png" alt></p><h4><span id="登入自己的-line">登入自己的 LINE</span></h4><p><img src="Ppm0LQ2.png" alt></p><h3><span id="2-點自己的名字進入個人頁面">2. 點自己的名字，進入「個人頁面」</span></h3><p><img src="QP1t7Fi.png" alt></p><h3><span id="3-選發行權杖">3. 選「發行權杖」</span></h3><p><img src="4uuzfmL.png" alt></p><h3><span id="4-輸入想要加入-line-notify-的-line-群組接著點發行">4. 輸入想要加入 LINE Notify 的 LINE 群組，接著點「發行」</span></h3><p><img src="vu5wfPA.png" alt></p><h4><span id="注意-若離開此頁面將不會再顯示新發行的權杖-離開頁面前請先複製權杖">注意: 若離開此頁面，將不會再顯示新發行的權杖。 離開頁面前，請先複製權杖。</span></h4><p><img src="MKY6Vag.png" alt></p><h3><span id="5-用-curl-測試看看">5. 用 <code>curl</code> 測試看看</span></h3><h4><span id="記得先把line-notify-官方帳號加入群組中">記得先把「LINE Notify 官方帳號」加入群組中</span></h4><p><a href="https://liff.line.me/1645278921-kWRPP32q/?accountId=linenotify" target="_blank" rel="noopener">LINE Notify 官方帳號</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 記得換成自己的 token</span></span><br><span class="line">curl -X POST -H <span class="string">'Authorization: Bearer &lt;access_token&gt;'</span> -F <span class="string">'message=測試發訊息'</span> https://notify-api.line.me/api/notify</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">curl -X POST -H <span class="string">'Authorization: Bearer tsxxxxxxxxxIV'</span> -F <span class="string">'message=測試發訊息'</span> https://notify-api.line.me/api/notify</span><br></pre></td></tr></table></figure></p><p><a href="https://notify-bot.line.me/doc/en/#:~:text=Message%20visible%20to%20end%2Duser-,Sample,-%24%20curl%20%2DX%20POST%20%2DH%20%27Authorization%3A%20Bearer%20%3Caccess_token%3E%27%20%2DF" target="_blank" rel="noopener">官方文件 LINE Notify API Document 提供的範例</a></p><p><img src="ZrEaxSQ.png" alt></p><h3><span id="6-用-postman-測試看看">6. 用 Postman 測試看看</span></h3><p><img src="SZjbDxH.png" alt></p><p><img src="nsY9ALs.png" alt></p><h4><span id="postman-點-ltgt-icon-可以選各式程式語言的範例">Postman 點 <code>&lt;/&gt;</code> icon ，可以選各式程式語言的範例</span></h4><p><img src="xF4Gnco.png" alt></p><h3><span id="7-用-ruby-的-irb-測試看看">7. 用 Ruby 的 <code>irb</code> 測試看看</span></h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">'net/http'</span>)</span><br><span class="line">token = <span class="string">'tsxxxxxxxxxIV'</span> <span class="comment"># 換成自己的 Token</span></span><br><span class="line">url = <span class="string">'https://notify-api.line.me/api/notify'</span></span><br><span class="line">message = <span class="string">"測試要傳的訊息\nHello World!!"</span></span><br><span class="line">uri = URI(url)</span><br><span class="line">http = Net::HTTP.new(uri.host, uri.port)</span><br><span class="line">http.use_ssl = <span class="literal">true</span> <span class="keyword">if</span> uri.scheme == <span class="string">'https'</span></span><br><span class="line">http.open_timeout = <span class="number">10</span></span><br><span class="line">http.continue_timeout = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">request = Net::HTTP::Post.new(uri)</span><br><span class="line">request[<span class="string">'Authorization'</span>] = <span class="string">"Bearer <span class="subst">#&#123;token&#125;</span>"</span></span><br><span class="line">request.set_form_data(<span class="symbol">message:</span> <span class="string">"\n<span class="subst">#&#123;message&#125;</span>"</span>)</span><br><span class="line">response = http.request(request)</span><br><span class="line">response</span><br></pre></td></tr></table></figure></p><p><img src="f2KCVif.png" alt></p><h2><span id="將-ruby-那段寫得更嚴謹些">將 Ruby 那段寫得更嚴謹些</span></h2><p>不能保證每次打 API 都是正常的，有可能剛好遇到 LINE 服務異常，導致 <a href="https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts" target="_blank" rel="noopener">Timeout</a> 等問題，應該要針對已知可能會發生的問題，進行預防和處理。</p><p>另外也應該針對 response 和 exception 存 logger，後續有異常要追問題時，才會有比較多線索和方向</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatBotNotifier</span></span></span><br><span class="line">  <span class="keyword">require</span>(<span class="string">'logger'</span>)</span><br><span class="line">  <span class="keyword">require</span>(<span class="string">'net/http'</span>)</span><br><span class="line"></span><br><span class="line">  LINE_NOTIFY_URL = <span class="string">'https://notify-api.line.me/api/notify'</span>.freeze</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">line_notify</span><span class="params">(token, message)</span></span></span><br><span class="line">    uri = URI(LINE_NOTIFY_URL)</span><br><span class="line">    http = init_http(uri)</span><br><span class="line">    call_line_api(uri, http, token, message)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  private</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">logger</span></span></span><br><span class="line">    @logger <span class="params">||</span>= Logger.new(<span class="string">'message.log'</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">init_http</span><span class="params">(uri)</span></span></span><br><span class="line">    http = Net::HTTP.new(uri.host, uri.port)</span><br><span class="line">    http.use_ssl = <span class="literal">true</span> <span class="keyword">if</span> uri.scheme == <span class="string">'https'</span></span><br><span class="line">    http.open_timeout = <span class="number">10</span></span><br><span class="line">    http.continue_timeout = <span class="number">10</span></span><br><span class="line">    http</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">call_line_api</span><span class="params">(uri, http, token, message, error_retry = <span class="number">0</span>)</span></span></span><br><span class="line">    request = Net::HTTP::Post.new(uri)</span><br><span class="line">    request[<span class="string">'Authorization'</span>] = <span class="string">"Bearer <span class="subst">#&#123;token&#125;</span>"</span></span><br><span class="line">    request.set_form_data(<span class="symbol">message:</span> <span class="string">"\n<span class="subst">#&#123;message&#125;</span>"</span>)</span><br><span class="line">    response = http.request(request)</span><br><span class="line">    logger.info(<span class="string">"<span class="subst">#&#123;__FILE_<span class="number">_</span>&#125;</span>#<span class="subst">#&#123;__method_<span class="number">_</span>&#125;</span> response: <span class="subst">#&#123;response.body&#125;</span>"</span>)</span><br><span class="line">  <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">    <span class="keyword">if</span> error_retry &lt; <span class="number">5</span></span><br><span class="line">      sleep(<span class="number">10</span>)</span><br><span class="line">      error_retry += <span class="number">1</span></span><br><span class="line">      <span class="keyword">retry</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      logger.error(<span class="string">"<span class="subst">#&#123;__FILE_<span class="number">_</span>&#125;</span>#<span class="subst">#&#123;__method_<span class="number">_</span>&#125;</span> exception: <span class="subst">#&#123;e.inspect&#125;</span>"</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">token = <span class="string">'tsxxxxxxxxxIV'</span> <span class="comment"># 換成自己的 Token</span></span><br><span class="line">message = <span class="string">"測試要傳的訊息\nHello World!!"</span></span><br><span class="line">ChatBotNotifier.new.line_notify(token, message)</span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>若有例行要傳的訊息，可以用 Linux crontab 做排程，也可用 Sidekiq 的 scheduler 處理。</p><h2><span id="參考文件">參考文件</span></h2><p><a href="https://notify-bot.line.me/doc/en/" target="_blank" rel="noopener">LINE Notify API Document</a></p><hr><p>medium 文章連結：<a href="https://link.medium.com/gkQQBO1Henb" target="_blank" rel="noopener">https://link.medium.com/gkQQBO1Henb</a><br>本文同步發布於 <a href="https://riverye.com/2022/01/30/line-notify/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;首先你要先有 LINE，若沒有，可以左轉離開了 XD&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;步驟&quot;&gt;步驟&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;1-到-line-notify-並登入個人的-lin
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="Postman" scheme="https://riverye.com/tags/Postman/"/>
    
      <category term="Ruby" scheme="https://riverye.com/tags/Ruby/"/>
    
      <category term="curl" scheme="https://riverye.com/tags/curl/"/>
    
      <category term="LINE Notify" scheme="https://riverye.com/tags/LINE-Notify/"/>
    
  </entry>
  
  <entry>
    <title>Day30 - 終於完賽的心得感言</title>
    <link href="https://riverye.com/2021/10/13/Day30-%E7%B5%82%E6%96%BC%E5%AE%8C%E8%B3%BD%E7%9A%84%E5%BF%83%E5%BE%97%E6%84%9F%E8%A8%80/"/>
    <id>https://riverye.com/2021/10/13/Day30-終於完賽的心得感言/</id>
    <published>2021-10-12T16:00:00.000Z</published>
    <updated>2022-09-23T08:45:10.294Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="參賽動機">參賽動機</span></h2><p>老實說，今年其實沒有打算要參賽，打算裝死度過</p><p>剛好身邊有朋友要轉職，鼓勵對方說可以參加鐵人賽，沒想到對方答應了...</p><p>只好硬著頭皮跟著參賽，總不能只在旁邊喊燒吧</p><p>雖然報名的前 2 個月就已經知道躲不了</p><p>一開始還會和對方說，我們就先每週寫 1-2 篇，然後傳給對方，互相鼓勵 <s>互相傷害</s></p><p>想像中的劇本是 2 個月前開始慢慢準備</p><p>到開賽前便累積 30 篇文章，接著只要每天無壓力 po 文即可</p><p>But，代誌不是憨人想得那麼簡單</p><p>殊不知自己惰性出現，事前只準備了 12 篇左右的文章...</p><p>其他 18 篇左右則是在報名後開始寫的</p><p>邊工作同時還要寫鐵人賽文章，真的蠻硬的</p><p>無數個夜晚、週末都在寫鐵人賽文章</p><p>好在有一些的庫存，壓力不會像去年一樣這麼大</p><p>建議要參加的人，可以先準備庫存</p><p>都不準備直接每天寫的話，會非常的嗨 (過來人經驗)</p><h2><span id="總結">總結</span></h2><p>事前就開始思考整體的架構，果不其然，預期與實際有些出入 (笑)</p><p>整體應該算還可以吧 (?)</p><p>前半段左右的文章，蠻多都是工作中累積的經驗</p><p>無意間知道有些同事知道我在寫鐵人賽文章</p><p>甚至連其他部門的人也知道...</p><p>挺害羞的，想說低調寫低調完賽就好</p><p>這邊要聲明下</p><p>後半段寫與「股票」相關的文章，是我在 3-4 個月前下班與週末心血來潮寫的 Side Project</p><p>絕不是上班時寫的，才不是薪水小偷呢!! <s>你才薪水小偷，你全家都薪水小偷</s></p><p>另外，送上其中一首好聽的音樂與大家分享 <a href="https://youtu.be/sHxh3wvnE6g" target="_blank" rel="noopener">與你更靠近(Closer To You)</a></p><p>沒意外的話，明年不會參加了，連續參加三屆的鐵人賽，應該夠了吧(逃) xDD</p><p>最後，「你必須很努力，才能看起來毫不費力」</p><p>謝謝大家的觀看</p><h2><span id="大補帖">大補帖</span></h2><table><thead><tr><th style="text-align:center">編號</th><th>名稱</th><th style="text-align:center">小菜的 Blog</th><th style="text-align:center">鐵人賽</th><th style="text-align:center">Medium</th></tr></thead><tbody><tr><td style="text-align:center">01</td><td>Day01 - 鐵人賽我又來囉</td><td style="text-align:center"><a href="http://riverye.com/2021/09/14/Day01-%E9%90%B5%E4%BA%BA%E8%B3%BD%E6%88%91%E5%8F%88%E4%BE%86%E5%9B%89/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264068" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/rhBstgf2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">02</td><td>Day02 - 修改 Rails console edit 編輯模式</td><td style="text-align:center"><a href="http://riverye.com/2021/09/15/Day02-%E4%BF%AE%E6%94%B9-Rails-console-edit-%E7%B7%A8%E8%BC%AF%E6%A8%A1%E5%BC%8F">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264100" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/L7ujeSg2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">03</td><td>Day03 - Gem-strip_attributes 介紹與應用</td><td style="text-align:center"><a href="http://riverye.com/2021/09/16/Day03-Gem-strip-attributes-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264570" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/tBNoHEh2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">04</td><td>Day04 - Gem-activerecord-import 批次建立介紹與應用</td><td style="text-align:center"><a href="http://riverye.com/2021/09/17/Day04-Gem-activerecord-import-%E6%89%B9%E6%AC%A1%E5%BB%BA%E7%AB%8B%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264572" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/GX2nvti2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">05</td><td>Day05 - Gem-paranoia 軟刪除介紹與應用</td><td style="text-align:center"><a href="http://riverye.com/2021/09/18/Day05-Gem-paranoia-%E8%BB%9F%E5%88%AA%E9%99%A4%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264573" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/ay1JSdj2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">06</td><td>Day06 - 監控 Sidekiq 有無正常運作(或執行超過多久)</td><td style="text-align:center"><a href="http://riverye.com/2021/09/19/Day06-%E7%9B%A3%E6%8E%A7-Sidekiq-%E6%9C%89%E7%84%A1%E6%AD%A3%E5%B8%B8%E9%81%8B%E4%BD%9C-%E6%88%96%E5%9F%B7%E8%A1%8C%E8%B6%85%E9%81%8E%E5%A4%9A%E4%B9%85/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264574" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/mtoj9Ck2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">07</td><td>Day07 - Gem-sidekiq-limit_fetch 限制 sidekiq queue 執行數量</td><td style="text-align:center"><a href="https://riverye.com/2021/09/20/Day07-Gem-sidekiq-limit-fetch-%E9%99%90%E5%88%B6-sidekiq-queue-%E5%9F%B7%E8%A1%8C%E6%95%B8%E9%87%8F/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264576" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/WH74csl2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">08</td><td>Day08 - Gem-sidekiq-grouping 允許單個 sidekiq 處理多個相似(一樣)的 jobs</td><td style="text-align:center"><a href="http://riverye.com/2021/09/21/Day08-Gem-sidekiq-grouping-%E5%85%81%E8%A8%B1%E5%96%AE%E5%80%8B-sidekiq-%E8%99%95%E7%90%86%E5%A4%9A%E5%80%8B%E7%9B%B8%E4%BC%BC-%E4%B8%80%E6%A8%A3-%E7%9A%84-jobs">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264578" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/0SSdkIm2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">09</td><td>Day09 - Gem-jwt 介紹與應用</td><td style="text-align:center"><a href="http://riverye.com/2021/09/22/Day09-Gem-jwt-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264580" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/OYkJftn2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">10</td><td>Day10 - 如何用手機連 Ruby on Rails Local 開發中的專案</td><td style="text-align:center"><a href="http://riverye.com/2021/09/23/Day10-%E5%A6%82%E4%BD%95%E7%94%A8%E6%89%8B%E6%A9%9F%E9%80%A3-Ruby-on-Rails-Local-%E9%96%8B%E7%99%BC%E4%B8%AD%E7%9A%84%E5%B0%88%E6%A1%88/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264598" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/wiiTrho2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">11</td><td>Day11 - Gem-rqrcode 或 barby 產 QR Code</td><td style="text-align:center"><a href="http://riverye.com/2021/09/24/Day11-Gem-rqrcode-%E6%88%96-barby-%E7%94%A2-QR-Code/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264600" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/ray451o2Mjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">12</td><td>Day12 - 解析圖片中的 QR Code 資料</td><td style="text-align:center"><a href="http://riverye.com/2021/09/25/Day12-%E8%A7%A3%E6%9E%90%E5%9C%96%E7%89%87%E4%B8%AD%E7%9A%84-QR-Code-%E8%B3%87%E6%96%99/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10264602" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/MDSrOdpGOjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">13</td><td>Day13 - PDF 加密、解密的處理</td><td style="text-align:center"><a href="http://riverye.com/2021/09/26/Day13-PDF-%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86%E7%9A%84%E8%99%95%E7%90%86/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10271819" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/JoYN5HDVPjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">14</td><td>Day14 - PDF 加浮水印</td><td style="text-align:center"><a href="http://riverye.com/2021/09/27/Day14-PDF-%E5%8A%A0%E6%B5%AE%E6%B0%B4%E5%8D%B0/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10271878" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/uqXuO7EVPjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">15</td><td>Day15 - 匯出(下載) PDF</td><td style="text-align:center"><a href="http://riverye.com/2021/09/28/Day15-%E5%8C%AF%E5%87%BA-%E4%B8%8B%E8%BC%89-PDF/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10271932" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/91hPYYFVPjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">16</td><td>Day16 - 匯出 excel-應用篇</td><td style="text-align:center"><a href="http://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/GmNaDhwgQjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">17</td><td>Day17 - 匯出 excel-測試篇</td><td style="text-align:center"><a href="http://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272496" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/H7KaCZbhRjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">18</td><td>Day18 - 匯入 excel-應用篇</td><td style="text-align:center"><a href="http://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/Teq2MzayRjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">19</td><td>Day19 - 匯入 excel-測試篇</td><td style="text-align:center"><a href="http://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272599" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/sYWyCHbyRjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">20</td><td>Day20 - 用 Ruby on Rails 抓臺灣證券交易所資料-每日收盤行情</td><td style="text-align:center"><a href="http://riverye.com/2021/10/03/Day20-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272778" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/DtL2qRIuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">21</td><td>Day21 - 用 Ruby on Rails 抓臺灣證券交易所資料-除權除息計算結果表</td><td style="text-align:center"><a href="http://riverye.com/2021/10/04/Day21-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272820" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/FasXk7JuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">22</td><td>Day22 - 用 Ruby on Rails 處理臺灣證券交易所資料-DB 設計</td><td style="text-align:center"><a href="http://riverye.com/2021/10/05/Day22-%E7%94%A8-Ruby-on-Rails-%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-DB-%E8%A8%AD%E8%A8%88/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272854" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/s8TWR4KuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">23</td><td>Day23 - 將臺灣證券交易所的每日收盤行情存入 DB</td><td style="text-align:center"><a href="http://riverye.com/2021/10/06/Day23-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85%E5%AD%98%E5%85%A5-DB/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272899" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/HmmocOLuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">24</td><td>Day24 - 將臺灣證券交易所的除權除息計算結果表存入 DB</td><td style="text-align:center"><a href="http://riverye.com/2021/10/07/Day24-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8%E5%AD%98%E5%85%A5-DB/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10272913" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/VfJfmvMuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">25</td><td>Day25 - 透過 Rake 自動下載處理臺灣證券交易所的資料</td><td style="text-align:center"><a href="http://riverye.com/2021/10/08/Day25-%E9%80%8F%E9%81%8E-Rake-%E8%87%AA%E5%8B%95%E4%B8%8B%E8%BC%89%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E8%B3%87%E6%96%99/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10273391" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/wzKY4dNuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">26</td><td>Day26 - 用 Ruby on Rails 寫分析股票的技術指標</td><td style="text-align:center"><a href="http://riverye.com/2021/10/09/Day26-%E7%94%A8-Ruby-on-Rails-%E5%AF%AB%E5%88%86%E6%9E%90%E8%82%A1%E7%A5%A8%E7%9A%84%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10273425" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/G7zXw5NuTjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">27</td><td>Day27 - 如何讓 Google 搜尋到你的網站</td><td style="text-align:center"><a href="http://riverye.com/2021/10/10/Day27-%E5%A6%82%E4%BD%95%E8%AE%93-Google-%E6%90%9C%E5%B0%8B%E5%88%B0%E4%BD%A0%E7%9A%84%E7%B6%B2%E7%AB%99/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10274871" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/LgXnsCqVWjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">28</td><td>Day28 - 如何埋 GA (Google Analytics)</td><td style="text-align:center"><a href="http://riverye.com/2021/10/11/Day28-%E5%A6%82%E4%BD%95%E5%9F%8B-GA-Google-Analytics/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10275551" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/c5HrqkbCYjb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">29</td><td>Day29 - 透過 PageSpeed Insights 了解網站速度優化</td><td style="text-align:center"><a href="http://riverye.com/2021/10/12/Day29-%E9%80%8F%E9%81%8E-PageSpeed-Insights-%E4%BA%86%E8%A7%A3%E7%B6%B2%E7%AB%99%E9%80%9F%E5%BA%A6%E5%84%AA%E5%8C%96/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10276008" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/CVmaqyOb0jb" target="_blank" rel="noopener">點我</a></td></tr><tr><td style="text-align:center">30</td><td>Day30 - 終於完賽的心得感言</td><td style="text-align:center"><a href="http://riverye.com/2021/10/13/Day30-%E7%B5%82%E6%96%BC%E5%AE%8C%E8%B3%BD%E7%9A%84%E5%BF%83%E5%BE%97%E6%84%9F%E8%A8%80/">點我</a></td><td style="text-align:center"><a href="https://ithelp.ithome.com.tw/articles/10276149" target="_blank" rel="noopener">點我</a></td><td style="text-align:center"><a href="https://link.medium.com/XwwhFnnm0jb" target="_blank" rel="noopener">點我</a></td></tr></tbody></table><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10276149" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10276149</a><br>medium 文章連結：<a href="https://link.medium.com/XwwhFnnm0jb" target="_blank" rel="noopener">https://link.medium.com/XwwhFnnm0jb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/13/Day30-%E7%B5%82%E6%96%BC%E5%AE%8C%E8%B3%BD%E7%9A%84%E5%BF%83%E5%BE%97%E6%84%9F%E8%A8%80/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;參賽動機&quot;&gt;參賽動機&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;老實說，今年其實沒有打算要參賽，打算裝死度過&lt;/p&gt;
&lt;p&gt;剛好身邊有朋友要轉職，鼓勵對方說可以參加鐵人賽，沒想到對方答應了...&lt;/p&gt;
&lt;p&gt;只好硬著頭皮跟著參賽，總不能只在旁邊喊燒吧&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day29 - 透過 PageSpeed Insights 了解網站速度優化</title>
    <link href="https://riverye.com/2021/10/12/Day29-%E9%80%8F%E9%81%8E-PageSpeed-Insights-%E4%BA%86%E8%A7%A3%E7%B6%B2%E7%AB%99%E9%80%9F%E5%BA%A6%E5%84%AA%E5%8C%96/"/>
    <id>https://riverye.com/2021/10/12/Day29-透過-PageSpeed-Insights-了解網站速度優化/</id>
    <published>2021-10-11T16:00:00.000Z</published>
    <updated>2022-12-21T14:32:44.188Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>若想進行網站速度優化，Google 有提供 <a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">PageSpeed Insights</a> 與 <a href="https://www.thinkwithgoogle.com/intl/zh-tw/feature/testmysite/" target="_blank" rel="noopener">Think with Google</a> 這兩項工具可供參考</p><h2><span id="說明">說明</span></h2><p>使用方式非常的簡單，將想要測試的網址，輸入在 Google 提供的網站中進行測試即可</p><h3><span id="pagespeed-insights">PageSpeed Insights</span></h3><p><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">https://developers.google.com/speed/pagespeed/insights/</a></p><p><img src="3LNUsA5.png" alt></p><h4><span id="試著把-google-提供的網址輸入進去看看">試著把 Google 提供的網址輸入進去看看...</span></h4><p>以下為行動版的分數</p><p><img src="uaD8fVb.png" alt></p><p>以下為電腦版的分數</p><p><img src="2ZQfTri.png" alt></p><h4><span id="實際跑完顯示的詳細資訊">實際跑完顯示的詳細資訊</span></h4><p>發現同樣的網址，連續測試時，每次的分數不完全一樣，當參考即可</p><p><img src="HlacHUr.jpg" alt></p><hr><h3><span id="比較您的行動網站載入速度-think-with-google">比較您的行動網站載入速度 - Think with Google</span></h3><p><a href="https://www.thinkwithgoogle.com/intl/zh-tw/feature/testmysite/" target="_blank" rel="noopener">https://www.thinkwithgoogle.com/intl/zh-tw/feature/testmysite/</a></p><p><img src="ufCOhtV.png" alt></p><h4><span id="試著把-google-提供的網址輸入進去看看">試著把 Google 提供的網址輸入進去看看...</span></h4><p><img src="eIGeHNJ.png" alt></p><h4><span id="實際跑完顯示的詳細資訊">實際跑完顯示的詳細資訊</span></h4><p>頁面的左上角可以「取得完整報表」</p><p><img src="PEoqcEY.jpg" alt></p><h2><span id="小結">小結</span></h2><p>跑出來的結果，可以當作參考，在自行評估是否要調整</p><p>也可以看下自己公司、競爭對手的網站的分數如何，分數只是分數，不能代表什麼，當作茶餘飯後閒聊即可</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10276008" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10276008</a><br>medium 文章連結：<a href="https://link.medium.com/CVmaqyOb0jb" target="_blank" rel="noopener">https://link.medium.com/CVmaqyOb0jb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/12/Day29-%E9%80%8F%E9%81%8E-PageSpeed-Insights-%E4%BA%86%E8%A7%A3%E7%B6%B2%E7%AB%99%E9%80%9F%E5%BA%A6%E5%84%AA%E5%8C%96/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;若想進行網站速度優化，Google 有提供 &lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day28 - 如何埋 GA (Google Analytics)</title>
    <link href="https://riverye.com/2021/10/11/Day28-%E5%A6%82%E4%BD%95%E5%9F%8B-GA-Google-Analytics/"/>
    <id>https://riverye.com/2021/10/11/Day28-如何埋-GA-Google-Analytics/</id>
    <published>2021-10-10T16:00:00.000Z</published>
    <updated>2022-12-21T14:30:32.626Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p><a href="https://ithelp.ithome.com.tw/articles/10274871" target="_blank" rel="noopener">前篇教學</a>已經能讓 Google 搜尋到網站，接下來若想做流量分析的話，需要埋 <a href="https://analytics.google.com/analytics/" target="_blank" rel="noopener">Google Analytics</a> (簡稱: GA)</p><h2><span id="如何使用">如何使用</span></h2><p>首先要有 Google 帳號，接著到這裡<a href="https://analytics.google.com/analytics/web/?authuser=0#provision/SignUp/" target="_blank" rel="noopener">註冊 Google Analytics</a>，照著網頁提示註冊即可</p><p><img src="sMLU5ab.png" alt></p><h3><span id="註冊完-ga-後點選網站">註冊完 GA 後，點選「網站」</span></h3><p><img src="ldU3Eyz.png" alt></p><h3><span id="網站網址-串流名稱要填寫">網站網址、串流名稱，要填寫</span></h3><p><img src="fhDTNYX.png" alt></p><h3><span id="這邊以全域網站代碼為例">這邊以「全域網站代碼」為例</span></h3><p>Google 會提供一組 HTML HEAD，貼到自己專案中的 HTML HEAD 中，並部署</p><p><img src="5rX52XW.png" alt></p><h3><span id="檢查自己專案是否有埋成功">檢查自己專案是否有埋成功</span></h3><p>可透過開發者工具 (快捷鍵 F12)，並搜尋 <code>GoogleAnalyticsObject</code> ，看是否有找到對應的 code</p><p><img src="2trPhLC.jpg" alt></p><h3><span id="回到-ga-檢查是否有流量">回到 GA 檢查是否有流量</span></h3><p>上個步驟檢查有的話，理論上就大功告成了</p><p><img src="YfPhJQ1.png" alt></p><h2><span id="小結">小結</span></h2><p>對行銷人來說，這是非常基本的事情，但對於初次接觸且不熟行銷的人來說，會需要稍微了解下</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10275551" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10275551</a><br>medium 文章連結：<a href="https://link.medium.com/c5HrqkbCYjb" target="_blank" rel="noopener">https://link.medium.com/c5HrqkbCYjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/11/Day28-%E5%A6%82%E4%BD%95%E5%9F%8B-GA-Google-Analytics/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10274871&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;前篇教學&lt;/a&gt;已經能讓 Goo
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day27 - 如何讓 Google 搜尋到你的網站</title>
    <link href="https://riverye.com/2021/10/10/Day27-%E5%A6%82%E4%BD%95%E8%AE%93-Google-%E6%90%9C%E5%B0%8B%E5%88%B0%E4%BD%A0%E7%9A%84%E7%B6%B2%E7%AB%99/"/>
    <id>https://riverye.com/2021/10/10/Day27-如何讓-Google-搜尋到你的網站/</id>
    <published>2021-10-09T16:00:00.000Z</published>
    <updated>2022-12-21T14:34:26.989Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>網站上線後，希望給更多人能找到的話，通常會用 <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">Google Search Console</a>，讓自己的網站可以被 Google 搜尋的到</p><p>note: 已經會設定的人，可以左轉離開了~</p><h2><span id="如何使用">如何使用</span></h2><p>到 <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">https://search.google.com/search-console/about</a> ，Google 很貼心提供中文介面，基本上就是照著步驟做，網站下方也有提供教學影片</p><p><img src="RpyQpgS.png" alt></p><h3><span id="可以選擇輸入網域或網址前置字元以下兩種驗證方式會不同會各別示範">可以選擇輸入「網域」或「網址前置字元」，以下兩種驗證方式會不同，會各別示範</span></h3><p><img src="LHMz0BC.png" alt></p><h3><span id="網址前置字元提供以下幾種驗證">「網址前置字元」提供以下幾種驗證</span></h3><ol><li>HTML 檔案 (建議用這個)</li><li>HTML 標記</li><li>Google Analytics (分析)</li><li>Google 代碼管理工具</li><li>網域名稱供應商</li></ol><p>Google 會提供 HTML 檔案，跟著放到專案(部落格)中，一起部署後，就能在回到這頁做驗證了</p><p>note: 驗證成功後，也不能移除喔~</p><p><img src="tYV9oet.png" alt></p><h3><span id="網域驗證">「網域」驗證</span></h3><p>我自己是在 <a href="https://www.gandi.net/" target="_blank" rel="noopener">Gandi.net</a> 買網域的</p><p>直接輸入網域後，會跳出如下視窗，接著進行第三方驗證即可</p><p><img src="7UKU3rc.png" alt></p><h3><span id="網域驗證完成畫面如下">「網域」驗證完成畫面如下</span></h3><p><img src="bovQvOo.png" alt></p><h3><span id="接著等待-google-資料處理約一天時間通常會更快">接著等待 Google 資料處理，約一天時間(通常會更快)</span></h3><p>一天後再來看，就能知道是否設定成功了<br><img src="KXiW8qD.png" alt></p><h3><span id="可用之後的畫面">可用之後的畫面</span></h3><p><img src="Gp3tfz4.png" alt></p><h2><span id="小結">小結</span></h2><p>這篇是定位在完全不知道如何讓自己網站被 Google 搜尋到的小白看的，被搜尋到只是剛起步，後續如何導流量、SEO、使用者體驗...等，可在自行研究或請益身邊的行銷好友們~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10274871" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10274871</a><br>medium 文章連結：<a href="https://link.medium.com/LgXnsCqVWjb" target="_blank" rel="noopener">https://link.medium.com/LgXnsCqVWjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/10/Day27-%E5%A6%82%E4%BD%95%E8%AE%93-Google-%E6%90%9C%E5%B0%8B%E5%88%B0%E4%BD%A0%E7%9A%84%E7%B6%B2%E7%AB%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;網站上線後，希望給更多人能找到的話，通常會用 &lt;a href=&quot;https://search.google.com/search-console/about&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day26 - 用 Ruby on Rails 寫分析股票的技術指標</title>
    <link href="https://riverye.com/2021/10/09/Day26-%E7%94%A8-Ruby-on-Rails-%E5%AF%AB%E5%88%86%E6%9E%90%E8%82%A1%E7%A5%A8%E7%9A%84%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/"/>
    <id>https://riverye.com/2021/10/09/Day26-用-Ruby-on-Rails-寫分析股票的技術指標/</id>
    <published>2021-10-08T16:00:00.000Z</published>
    <updated>2022-12-21T14:30:06.699Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在做選股之前，可透過技術指標來分析，像是可以用 KD、均線、量價...等</p><h2><span id="說明">說明</span></h2><p>這邊要申明下，這邊是以技術交流為主，不會有任何投資建議，當自己寫了一套選股策略後，除了要做回測外，要知道沒有 100% 勝率且永遠有效的方法，如果有，請私訊讓我知道 xDD</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/stock.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stock</span> &lt; ApplicationRecord</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">specify_date</span><span class="params">(date)</span></span></span><br><span class="line">    daily_quotes.find_by(<span class="symbol">transaction_date:</span> date.to_date)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">simple_moving_average</span><span class="params">(code, number)</span></span></span><br><span class="line">    stock = <span class="keyword">self</span>.find_by!(<span class="symbol">code:</span> code)</span><br><span class="line">    stock.simple_moving_average(number)</span><br><span class="line">  <span class="keyword">rescue</span> ActiveRecord::RecordNotFound =&gt; e</span><br><span class="line">    puts <span class="string">"無此股票代號: <span class="subst">#&#123;code&#125;</span>"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">simple_moving_average</span><span class="params">(number)</span></span></span><br><span class="line">    result = daily_quotes.order(<span class="string">"transaction_date DESC"</span>).limit(number).select(<span class="symbol">:closing_price</span>)</span><br><span class="line">    <span class="keyword">if</span> result.size == number</span><br><span class="line">      (result.sum(&amp;<span class="symbol">:closing_price</span>) / number).round(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="number">0</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，成交量前幾名的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">top_ranks_trade_volume</span><span class="params">(number, date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    <span class="keyword">self</span>.latest_transaction_date(date)</span><br><span class="line">        .order(<span class="string">"daily_quotes.trade_volume DESC"</span>)</span><br><span class="line">        .limit(number)</span><br><span class="line">        .select(<span class="symbol">:name</span>, <span class="symbol">:code</span>, <span class="string">"daily_quotes.trade_volume"</span>)</span><br><span class="line">        .map &#123; <span class="params">|stock|</span> &#123; <span class="string">"股票名稱"</span> =&gt; stock.name, <span class="string">"股票代號"</span> =&gt; stock.code, <span class="string">"成交量(張)"</span> =&gt; stock.trade_volume / <span class="number">1000</span> &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，成交量破XXXX張的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">volume_broke_lot</span><span class="params">(number, date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    <span class="keyword">self</span>.latest_transaction_date(date)</span><br><span class="line">        .where(<span class="string">"daily_quotes.trade_volume &gt; ?"</span>, number * <span class="number">1000</span>)</span><br><span class="line">        .order(<span class="string">"daily_quotes.trade_volume DESC"</span>)</span><br><span class="line">        .select(<span class="symbol">:name</span>, <span class="symbol">:code</span>, <span class="string">"daily_quotes.trade_volume"</span>)</span><br><span class="line">        .map &#123; <span class="params">|stock|</span> &#123; <span class="string">"股票名稱"</span> =&gt; stock.name, <span class="string">"股票代號"</span> =&gt; stock.code, <span class="string">"成交量(張)"</span> =&gt; stock.trade_volume / <span class="number">1000</span> &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，漲停的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_limit_up_stocks</span><span class="params">(date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    latest_transaction_date = find_latest_transaction_dates(<span class="number">2</span>, date)</span><br><span class="line">    candidate_stocks = find_ups_and_downs(latest_transaction_date)</span><br><span class="line">    candidate_stocks.select <span class="keyword">do</span> <span class="params">|key, values|</span></span><br><span class="line">      latest_info = <span class="literal">nil</span></span><br><span class="line">      yesterday_info = <span class="literal">nil</span></span><br><span class="line">      values.each <span class="keyword">do</span> <span class="params">|value|</span></span><br><span class="line">        <span class="keyword">if</span> value.transaction_date == latest_transaction_date[<span class="number">0</span>]</span><br><span class="line">          latest_info = value</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          yesterday_info = value</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">next</span> <span class="keyword">if</span> latest_info.ups_and_downs != <span class="string">"+"</span> <span class="params">||</span> latest_info.closing_price != latest_info.highest_price</span><br><span class="line"></span><br><span class="line">      latest_info.closing_price &gt;= yesterday_info.closing_price * <span class="number">1.095</span></span><br><span class="line">    <span class="keyword">end</span>.keys</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，跌停的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_limit_down_stocks</span><span class="params">(date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    latest_transaction_date = find_latest_transaction_dates(<span class="number">2</span>, date)</span><br><span class="line">    candidate_stocks = find_ups_and_downs(latest_transaction_date)</span><br><span class="line">    candidate_stocks.select <span class="keyword">do</span> <span class="params">|key, values|</span></span><br><span class="line">      latest_info = <span class="literal">nil</span></span><br><span class="line">      yesterday_info = <span class="literal">nil</span></span><br><span class="line">      values.each <span class="keyword">do</span> <span class="params">|value|</span></span><br><span class="line">        <span class="keyword">if</span> value.transaction_date == latest_transaction_date[<span class="number">0</span>]</span><br><span class="line">          latest_info = value</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          yesterday_info = value</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">next</span> <span class="keyword">if</span> latest_info.ups_and_downs != <span class="string">"-"</span> <span class="params">||</span> latest_info.closing_price != latest_info.lowest_price</span><br><span class="line"></span><br><span class="line">      latest_info.closing_price &lt;= yesterday_info.closing_price / <span class="number">1.095</span></span><br><span class="line">    <span class="keyword">end</span>.keys</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  private</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出最新 X 天的交易日期</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_latest_transaction_dates</span><span class="params">(number, date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    <span class="keyword">if</span> date</span><br><span class="line">      DailyQuote.where(<span class="string">"transaction_date &lt;= ?"</span>, date.to_date)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      DailyQuote</span><br><span class="line">    <span class="keyword">end</span>.select(<span class="symbol">:transaction_date</span>).order(<span class="string">"transaction_date DESC"</span>).distinct.limit(number).pluck(<span class="symbol">:transaction_date</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_ups_and_downs</span><span class="params">(latest_transaction_date)</span></span></span><br><span class="line">    <span class="keyword">self</span>.joins(<span class="symbol">:daily_quotes</span>)</span><br><span class="line">        .where(<span class="symbol">daily_quotes:</span> &#123; <span class="symbol">transaction_date:</span> latest_transaction_date[-<span class="number">1</span>]..latest_transaction_date[<span class="number">0</span>] &#125;)</span><br><span class="line">        .order(<span class="string">"daily_quotes.trade_volume DESC"</span>)</span><br><span class="line">        .select(<span class="symbol">:code</span>, <span class="symbol">:name</span>,</span><br><span class="line">                <span class="string">"daily_quotes.transaction_date"</span>, <span class="string">"daily_quotes.opening_price"</span>, <span class="string">"daily_quotes.closing_price"</span>,</span><br><span class="line">                <span class="string">"daily_quotes.highest_price"</span>, <span class="string">"daily_quotes.lowest_price"</span>, <span class="string">"daily_quotes.ups_and_downs"</span>,</span><br><span class="line">               )</span><br><span class="line">        .group_by &#123; <span class="params">|stock|</span> &#123; <span class="string">"股票名稱"</span> =&gt; stock.name, <span class="string">"股票代號"</span> =&gt; stock.code &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="實際執行畫面">實際執行畫面</span></h2><p><img src="8FSCAhq.png" alt></p><h2><span id="小結">小結</span></h2><p>每當寫完一個技術指標後，如何驗證自己寫的是否正確呢?</p><p>我的做法是去用其他平台，然後看結果是否與我一樣 XD</p><p>有更好的方法或發現有寫錯的地方，歡迎和我說喔</p><p>與「臺灣證券交易所」有關的系列文，這邊告一段落了，後面還有 4 篇鐵人賽文章要寫 (掩面哭，怎還沒結束 QAQ)</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10273425" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10273425</a><br>medium 文章連結：<a href="https://link.medium.com/G7zXw5NuTjb" target="_blank" rel="noopener">https://link.medium.com/G7zXw5NuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/09/Day26-%E7%94%A8-Ruby-on-Rails-%E5%AF%AB%E5%88%86%E6%9E%90%E8%82%A1%E7%A5%A8%E7%9A%84%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在做選股之前，可透過技術指標來分析，像是可以用 KD、均線、量價...等&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這邊要申明下，這邊是以技術交流為主，不會有任何投資建議
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day25 - 透過 Rake 自動下載處理臺灣證券交易所的資料</title>
    <link href="https://riverye.com/2021/10/08/Day25-%E9%80%8F%E9%81%8E-Rake-%E8%87%AA%E5%8B%95%E4%B8%8B%E8%BC%89%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E8%B3%87%E6%96%99/"/>
    <id>https://riverye.com/2021/10/08/Day25-透過-Rake-自動下載處理臺灣證券交易所的資料/</id>
    <published>2021-10-07T16:00:00.000Z</published>
    <updated>2022-12-21T14:34:01.195Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>已經能從「臺灣證券交易所」抓資料、存入 DB，接下來要做自動化處理</p><h2><span id="說明">說明</span></h2><p>由於我電腦沒有 24 小時開著，加上專案也不會一直開著，需要時才會手動下 Rake 執行，因此沒有寫在 schedule，這部分可因需求，自行調整，這邊以 Rake 為例</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lib/tasks/twse.rake</span></span><br><span class="line"></span><br><span class="line">namespace <span class="symbol">:twse</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"auto execute all"</span></span><br><span class="line">  task <span class="symbol">auto:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Rake::Task[<span class="string">"twse:download_all"</span>].invoke</span><br><span class="line">    Rake::Task[<span class="string">"twse:save_all"</span>].invoke</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"download twse ALLBUT0999、TWT49U data"</span></span><br><span class="line">  task <span class="symbol">download_all:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Rake::Task[<span class="string">"twse:download_file"</span>].invoke</span><br><span class="line">    Rake::Task[<span class="string">"twse:download_dr_file"</span>].invoke</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"download twse ALLBUT0999 每日收盤行情(全部(不含權證、牛熊證、可展延牛熊證)) data"</span></span><br><span class="line">  task <span class="symbol">download_file:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Allbut0999::Download.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"download twse TWT49U 除權除息計算結果表 data"</span></span><br><span class="line">  task <span class="symbol">download_dr_file:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Twt49u::Download.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"ALLBUT0999、TWT49U CVS save to database"</span></span><br><span class="line">  task <span class="symbol">save_all:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Rake::Task[<span class="string">"twse:save_dr_to_db"</span>].invoke</span><br><span class="line">    Rake::Task[<span class="string">"twse:save_to_db"</span>].invoke</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"ALLBUT0999 CVS save to database"</span></span><br><span class="line">  task <span class="symbol">save_to_db:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Allbut0999::SaveToDb.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"TWT49U CVS save to database"</span></span><br><span class="line">  task <span class="symbol">save_dr_to_db:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Twt49u::SaveToDb.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>在 Terminal 輸入</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rake twse:auto</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line">bundle <span class="built_in">exec</span> rake twse:auto</span><br></pre></td></tr></table></figure></p><h2><span id="實際執行畫面">實際執行畫面</span></h2><p><img src="g9jp0O0.png" alt></p><h2><span id="小結">小結</span></h2><p>現在只需要手動下一行 code 就會自動下載、存入 DB、上傳到 GitHub，非常的方便</p><p>工程師的特性，發現要做重複的事情時，會想辦法做成自動化處理~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10273391" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10273391</a><br>medium 文章連結：<a href="https://link.medium.com/wzKY4dNuTjb" target="_blank" rel="noopener">https://link.medium.com/wzKY4dNuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/08/Day25-%E9%80%8F%E9%81%8E-Rake-%E8%87%AA%E5%8B%95%E4%B8%8B%E8%BC%89%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E8%B3%87%E6%96%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;已經能從「臺灣證券交易所」抓資料、存入 DB，接下來要做自動化處理&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;由於我電腦沒有 24 小時開著，加上專案也不會一直開著，需要
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day24 - 將臺灣證券交易所的除權除息計算結果表存入 DB</title>
    <link href="https://riverye.com/2021/10/07/Day24-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8%E5%AD%98%E5%85%A5-DB/"/>
    <id>https://riverye.com/2021/10/07/Day24-將臺灣證券交易所的除權除息計算結果表存入-DB/</id>
    <published>2021-10-06T16:00:00.000Z</published>
    <updated>2022-12-21T14:32:09.212Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>前面已經知道如何抓「臺灣證券交易所」的除權除息計算結果表 CSV 檔，接下來要處理資料，並存入 DB</p><h2><span id="說明">說明</span></h2><p>需要考量的情境，與<a href="https://ithelp.ithome.com.tw/articles/10272899" target="_blank" rel="noopener">前一篇</a>是一樣的 (描述越來越精簡 XD)</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/twt_49u/save_to_db.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Twt49u</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">SaveToDb</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      start_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;start_time.to_s&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">      latest_data_date = find_latest_data_date</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> latest_data_date == start_time.to_date</span><br><span class="line"></span><br><span class="line">      is_linux = <span class="string">`uname -a`</span>[<span class="regexp">/Linux/</span>].present?</span><br><span class="line">      file_paths = Dir[<span class="string">"data/twse/TWT49U/*"</span>]</span><br><span class="line">      file_paths.each <span class="keyword">do</span> <span class="params">|file_path|</span></span><br><span class="line">        rows = decode_data(file_path, is_linux)</span><br><span class="line">        first_year, end_year = time_range(rows)</span><br><span class="line">        row_index, end_index = rows_range(rows)</span><br><span class="line">        all_rows, data_date_infos = filter_rows(rows, row_index, end_index)</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> not_process?(data_date_infos, latest_data_date)</span><br><span class="line"></span><br><span class="line">        filtered_stocks = filter_by_stocks(all_rows)</span><br><span class="line">        Stock.import(filtered_stocks) <span class="keyword">if</span> filtered_stocks.present?</span><br><span class="line"></span><br><span class="line">        import_ex_stocks(all_rows)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - start_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_data_date</span></span></span><br><span class="line">      ExStock.latest_data_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">time_range</span><span class="params">(rows)</span></span></span><br><span class="line">      first_year, first_month, first_day, end_year, end_month, end_day = rows[<span class="number">0</span>].scan(<span class="regexp">/\d+/</span>)</span><br><span class="line">      [first_year, end_year].each_with_index <span class="keyword">do</span> <span class="params">|year, index|</span></span><br><span class="line">        year = <span class="string">"20"</span> + (year.to_i + <span class="number">11</span>).to_s[<span class="number">1</span>..<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">if</span> index.zero?</span><br><span class="line">          first_year = year</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          end_year =year</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> [first_year, end_year]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rows_range</span><span class="params">(rows)</span></span></span><br><span class="line">      row_index = <span class="literal">nil</span></span><br><span class="line">      rows.each_with_index <span class="keyword">do</span> <span class="params">|row, index|</span></span><br><span class="line">        <span class="keyword">if</span> row.<span class="keyword">include</span>?(<span class="string">"資料日期"</span>)</span><br><span class="line">          row_index = index</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      end_index = <span class="literal">nil</span></span><br><span class="line">      rows.each_with_index <span class="keyword">do</span> <span class="params">|row, index|</span></span><br><span class="line">        <span class="keyword">if</span> row.<span class="keyword">include</span>?(<span class="string">"公式"</span>)</span><br><span class="line">          end_index = index</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> [row_index, end_index]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_rows</span><span class="params">(rows, row_index, end_index)</span></span></span><br><span class="line">      all_rows = []</span><br><span class="line">      data_date_infos = []</span><br><span class="line">      rows[(row_index + <span class="number">1</span>)..(end_index - <span class="number">1</span>)].each <span class="keyword">do</span> <span class="params">|row_string|</span></span><br><span class="line">        row_item = []</span><br><span class="line">        row_string.split(<span class="string">'",'</span>).each &#123; <span class="params">|row|</span> row_item &lt;&lt; row.gsub(<span class="regexp">/[=|,|"]/</span>, <span class="string">''</span>) &#125;</span><br><span class="line"></span><br><span class="line">        year, month, day = row_item[<span class="number">0</span>].scan(<span class="regexp">/\d+/</span>)</span><br><span class="line">        year = <span class="string">"20"</span> + (year.to_i + <span class="number">11</span>).to_s[<span class="number">1</span>..<span class="number">2</span>]</span><br><span class="line">        data_date = year + month + day</span><br><span class="line">        row_item[<span class="number">0</span>] = data_date.to_date</span><br><span class="line">        all_rows &lt;&lt; row_item</span><br><span class="line">        data_date_infos &lt;&lt; row_item[<span class="number">0</span>]</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> [all_rows, data_date_infos]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">not_process?</span><span class="params">(data_date_infos, latest_data_date)</span></span></span><br><span class="line">      data_date_infos.uniq!</span><br><span class="line">      latest_data_date.present? &amp;&amp; data_date_infos.max &lt;= latest_data_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_by_stocks</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stock_infos = []</span><br><span class="line">      all_rows.each &#123; <span class="params">|rows|</span> stock_infos &lt;&lt; &#123; <span class="symbol">code:</span> rows[<span class="number">1</span>], <span class="symbol">name:</span> rows[<span class="number">2</span>] &#125; &#125;</span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_stocks = []</span><br><span class="line">      stock_infos.each <span class="keyword">do</span> <span class="params">|stock_info|</span></span><br><span class="line">        stock = stocks[stock_info[<span class="symbol">:code</span>]]</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> stock</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> need_create_stocks.any? &#123; <span class="params">|item|</span> item.code == stock_info[<span class="symbol">:code</span>] &#125;</span><br><span class="line"></span><br><span class="line">        need_create_stocks &lt;&lt; Stock.new(<span class="symbol">code:</span> stock_info[<span class="symbol">:code</span>], <span class="symbol">name:</span> stock_info[<span class="symbol">:name</span>])</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      need_create_stocks</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">import_ex_stocks</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_ex_stocks = []</span><br><span class="line">      all_rows.each <span class="keyword">do</span> <span class="params">|row|</span></span><br><span class="line">        stock = stocks[row[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        need_create_ex_stocks &lt;&lt; stock.exs.new(</span><br><span class="line">          <span class="symbol">data_date:</span> row[<span class="number">0</span>],</span><br><span class="line">          <span class="symbol">closing_price_before:</span> row[<span class="number">3</span>],</span><br><span class="line">          <span class="symbol">reference_price:</span> row[<span class="number">4</span>],</span><br><span class="line">          <span class="symbol">dr_value:</span> row[<span class="number">5</span>],</span><br><span class="line">          <span class="symbol">dividend_right:</span> ExStock::DIVIDEND_RIGHT[row[<span class="number">6</span>]],</span><br><span class="line">          <span class="symbol">limit_up:</span> row[<span class="number">7</span>],</span><br><span class="line">          <span class="symbol">limit_down:</span> row[<span class="number">8</span>],</span><br><span class="line">          <span class="symbol">opening_reference_price:</span> row[<span class="number">9</span>],</span><br><span class="line">          <span class="symbol">ex_dividend_reference_price:</span> row[<span class="number">10</span>],</span><br><span class="line">          <span class="symbol">reporting_day:</span> row[<span class="number">12</span>],</span><br><span class="line">          <span class="symbol">price_book:</span> row[<span class="number">13</span>],</span><br><span class="line">          <span class="symbol">eps:</span> row[<span class="number">14</span>],</span><br><span class="line">        )</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      ExStock.import(need_create_ex_stocks) <span class="keyword">if</span> need_create_ex_stocks.present?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="檢查是否有存入-db">檢查是否有存入 DB</span></h2><p><img src="fTpuAHD.png" alt></p><h2><span id="小結">小結</span></h2><p>我猜看到這，已經不少人看不懂或沒在看了 (笑)</p><p>說明越寫越精簡，想說 code 已經直接貼出來了，直接看 code 比較快，若發現有更好的寫法，歡迎留言和我說~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272913" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272913</a><br>medium 文章連結：<a href="https://link.medium.com/VfJfmvMuTjb" target="_blank" rel="noopener">https://link.medium.com/VfJfmvMuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/07/Day24-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8%E5%AD%98%E5%85%A5-DB/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;前面已經知道如何抓「臺灣證券交易所」的除權除息計算結果表 CSV 檔，接下來要處理資料，並存入 DB&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;需要考量的情境，與&lt;a h
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day23 - 將臺灣證券交易所的每日收盤行情存入 DB</title>
    <link href="https://riverye.com/2021/10/06/Day23-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85%E5%AD%98%E5%85%A5-DB/"/>
    <id>https://riverye.com/2021/10/06/Day23-將臺灣證券交易所的每日收盤行情存入-DB/</id>
    <published>2021-10-05T16:00:00.000Z</published>
    <updated>2022-12-21T14:33:52.396Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>前面已經知道如何抓「臺灣證券交易所」的每日收盤行情 CSV 檔，接下來要處理資料，並存入 DB</p><h2><span id="說明">說明</span></h2><p>在處理過程中，需要考量，可能會有新上市的公司，若有的話，要建立 <code>Stock</code>，至於已經下市的公司，則應該要軟刪除 (這部分還沒做，可自行研究)</p><p>同一天的資料，若執行多次，應該要判斷是否已在 DB 建立過，不應該重複建立</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/allbut_0999/save_to_db.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Allbut0999</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">SaveToDb</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      start_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;start_time.to_s&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">      end_transaction_date = find_latest_transaction_date</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> end_transaction_date == start_time</span><br><span class="line"></span><br><span class="line">      is_linux = <span class="string">`uname -a`</span>[<span class="regexp">/Linux/</span>].present?</span><br><span class="line">      file_paths = Dir[<span class="string">"data/twse/ALLBUT0999/*/*/*"</span>]</span><br><span class="line">      file_paths.each <span class="keyword">do</span> <span class="params">|file_path|</span></span><br><span class="line">        rows = decode_data(file_path, is_linux)</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> not_process?(rows, end_transaction_date)</span><br><span class="line"></span><br><span class="line">        row_index = find_rows_index(rows)</span><br><span class="line">        all_rows = filter_rows(rows, row_index)</span><br><span class="line">        filtered_stocks = filter_by_stocks(all_rows)</span><br><span class="line">        Stock.import(filtered_stocks) <span class="keyword">if</span> filtered_stocks.present?</span><br><span class="line"></span><br><span class="line">        import_daily_quotes(all_rows)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - start_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_transaction_date</span></span></span><br><span class="line">      DailyQuote.latest_transaction_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">not_process?</span><span class="params">(rows, end_transaction_date)</span></span></span><br><span class="line">      year, month, day = rows[<span class="number">0</span>].scan(<span class="regexp">/\d+/</span>)</span><br><span class="line">      year = <span class="string">"20"</span> + (year.to_i + <span class="number">11</span>).to_s[<span class="number">1</span>..<span class="number">2</span>]</span><br><span class="line">      @file_date = year + month + day</span><br><span class="line">      end_transaction_date.present? &amp;&amp; @file_date.to_date &lt;= end_transaction_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_rows_index</span><span class="params">(rows)</span></span></span><br><span class="line">      row_index = <span class="literal">nil</span></span><br><span class="line">      rows.each_with_index &#123; <span class="params">|row, index|</span> row_index = index <span class="keyword">if</span> row.<span class="keyword">include</span>?(<span class="string">"證券代號"</span>) &#125;</span><br><span class="line">      row_index</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_rows</span><span class="params">(rows, row_index)</span></span></span><br><span class="line">      all_rows = []</span><br><span class="line">      rows[(row_index + <span class="number">1</span>)..-<span class="number">1</span>].each <span class="keyword">do</span> <span class="params">|row_string|</span></span><br><span class="line">        row_item = []</span><br><span class="line">        row_string.split(<span class="string">',"'</span>).each &#123; <span class="params">|row|</span> row_item &lt;&lt; row.gsub(<span class="regexp">/[=|,|"]/</span>, <span class="string">''</span>) &#125;</span><br><span class="line">        all_rows &lt;&lt; row_item</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      all_rows</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_by_stocks</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stock_infos = []</span><br><span class="line">      all_rows.each &#123; <span class="params">|rows|</span> stock_infos &lt;&lt; &#123; <span class="symbol">code:</span> rows[<span class="number">0</span>], <span class="symbol">name:</span> rows[<span class="number">1</span>] &#125; &#125;</span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_stocks = []</span><br><span class="line">      stock_infos.each <span class="keyword">do</span> <span class="params">|stock_info|</span></span><br><span class="line">        stock = stocks[stock_info[<span class="symbol">:code</span>]]</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> stock</span><br><span class="line"></span><br><span class="line">        need_create_stocks &lt;&lt; Stock.new(<span class="symbol">code:</span> stock_info[<span class="symbol">:code</span>], <span class="symbol">name:</span> stock_info[<span class="symbol">:name</span>])</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      need_create_stocks</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">import_daily_quotes</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_daily_quotes = []</span><br><span class="line">      all_rows.each <span class="keyword">do</span> <span class="params">|row|</span></span><br><span class="line">        stock = stocks[row[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">        need_create_daily_quotes &lt;&lt; stock.daily_quotes.new(</span><br><span class="line">          <span class="symbol">transaction_date:</span> @file_date.to_date,</span><br><span class="line">          <span class="symbol">trade_volume:</span> row[<span class="number">2</span>],</span><br><span class="line">          <span class="symbol">number_of_transactions:</span> row[<span class="number">3</span>],</span><br><span class="line">          <span class="symbol">trade_price:</span> row[<span class="number">4</span>],</span><br><span class="line">          <span class="symbol">opening_price:</span> row[<span class="number">5</span>],</span><br><span class="line">          <span class="symbol">highest_price:</span> row[<span class="number">6</span>],</span><br><span class="line">          <span class="symbol">lowest_price:</span> row[<span class="number">7</span>],</span><br><span class="line">          <span class="symbol">closing_price:</span> row[<span class="number">8</span>],</span><br><span class="line">          <span class="symbol">ups_and_downs:</span> row[<span class="number">9</span>],</span><br><span class="line">          <span class="symbol">price_difference:</span> row[<span class="number">10</span>],</span><br><span class="line">          <span class="symbol">last_best_bid_price:</span> row[<span class="number">11</span>],</span><br><span class="line">          <span class="symbol">last_best_bid_volume:</span> row[<span class="number">12</span>],</span><br><span class="line">          <span class="symbol">last_best_ask_price:</span> row[<span class="number">13</span>],</span><br><span class="line">          <span class="symbol">last_best_ask_volume:</span> row[<span class="number">14</span>],</span><br><span class="line">          <span class="symbol">price_earning_ratio:</span> row[<span class="number">15</span>],</span><br><span class="line">        )</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      DailyQuote.import(need_create_daily_quotes) <span class="keyword">if</span> need_create_daily_quotes.present?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="檢查是否有存入-db">檢查是否有存入 DB</span></h2><p><img src="0BmUTWQ.png" alt></p><h2><span id="小結">小結</span></h2><p>現在看別人寫好的 code ，應該會覺得蠻簡單的，當下自己在做的時候，並沒有範例的 code 可以參考，邊摸索邊做出來的，過程的酸甜苦辣只有自己知道，唯有自己做過，才會知道~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272899" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272899</a><br>medium 文章連結：<a href="https://link.medium.com/HmmocOLuTjb" target="_blank" rel="noopener">https://link.medium.com/HmmocOLuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/06/Day23-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85%E5%AD%98%E5%85%A5-DB/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;前面已經知道如何抓「臺灣證券交易所」的每日收盤行情 CSV 檔，接下來要處理資料，並存入 DB&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在處理過程中，需要考量，可能會有
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day22 - 用 Ruby on Rails 處理臺灣證券交易所資料-DB 設計</title>
    <link href="https://riverye.com/2021/10/05/Day22-%E7%94%A8-Ruby-on-Rails-%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-DB-%E8%A8%AD%E8%A8%88/"/>
    <id>https://riverye.com/2021/10/05/Day22-用-Ruby-on-Rails-處理臺灣證券交易所資料-DB-設計/</id>
    <published>2021-10-04T16:00:00.000Z</published>
    <updated>2022-09-23T08:45:10.272Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>有了前 2 篇從「臺灣證券交易所」取得 CSV 檔後，接著要把資料存入 DB，在存入前，需要先有 DB，本篇以 DB 設計為主</p><h2><span id="說明">說明</span></h2><p>預期會有</p><ol><li>一個 Model 紀錄股票名稱、代號 (<code>Stock</code>)</li><li>一個 Model 紀錄每日收盤行情相關資訊 (<code>DailyQuote</code>)</li><li>一個 Model 紀錄除權除息計算結果表 (<code>ExStock</code>)</li><li><code>Stock</code> 與 <code>DailyQuote</code> 為一對多關聯</li><li><code>Stock</code> 與 <code>ExStock</code> 為一對多關聯</li></ol><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateStocks</span> &lt; ActiveRecord::Migration[6.1]</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    create_table <span class="symbol">:stocks</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">      t.string   <span class="symbol">:name</span>, <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.string   <span class="symbol">:code</span>, <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.datetime <span class="symbol">:deleted_at</span></span><br><span class="line"></span><br><span class="line">      t.timestamps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    add_index <span class="symbol">:stocks</span>, <span class="symbol">:code</span>, <span class="symbol">unique:</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateDailyQuotes</span> &lt; ActiveRecord::Migration[6.1]</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    create_table <span class="symbol">:daily_quotes</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">      t.string  <span class="symbol">:code</span>, <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.date    <span class="symbol">:transaction_date</span>, <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 收盤日期</span></span><br><span class="line">      t.bigint  <span class="symbol">:trade_volume</span>                  <span class="comment"># 成交股數</span></span><br><span class="line">      t.bigint  <span class="symbol">:number_of_transactions</span>        <span class="comment"># 成交筆數</span></span><br><span class="line">      t.bigint  <span class="symbol">:trade_price</span>                   <span class="comment"># 成交金額</span></span><br><span class="line">      t.float   <span class="symbol">:opening_price</span>                 <span class="comment"># 開盤價</span></span><br><span class="line">      t.float   <span class="symbol">:highest_price</span>                 <span class="comment"># 最高價</span></span><br><span class="line">      t.float   <span class="symbol">:lowest_price</span>                  <span class="comment"># 最低價</span></span><br><span class="line">      t.float   <span class="symbol">:closing_price</span>                 <span class="comment"># 收盤價</span></span><br><span class="line">      t.string  <span class="symbol">:ups_and_downs</span>                 <span class="comment"># 漲跌</span></span><br><span class="line">      t.float   <span class="symbol">:price_difference</span>              <span class="comment"># 價差</span></span><br><span class="line">      t.float   <span class="symbol">:last_best_bid_price</span>           <span class="comment"># 最後揭示買價</span></span><br><span class="line">      t.bigint  <span class="symbol">:last_best_bid_volume</span>          <span class="comment"># 最後揭示買量</span></span><br><span class="line">      t.float   <span class="symbol">:last_best_ask_price</span>           <span class="comment"># 最後揭示賣價</span></span><br><span class="line">      t.bigint  <span class="symbol">:last_best_ask_volume</span>          <span class="comment"># 最後揭示賣量</span></span><br><span class="line">      t.float   <span class="symbol">:price_earning_ratio</span>           <span class="comment"># 本益比</span></span><br><span class="line"></span><br><span class="line">      t.timestamps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    add_index <span class="symbol">:daily_quotes</span>, %i[code transaction_date], <span class="symbol">unique:</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateExStocks</span> &lt; ActiveRecord::Migration[6.1]</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    create_table <span class="symbol">:ex_stocks</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">      t.string  <span class="symbol">:code</span>,                        <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.date    <span class="symbol">:data_date</span>,                   <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 資料日期</span></span><br><span class="line">      t.float   <span class="symbol">:closing_price_before</span>,        <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 除權息前收盤價</span></span><br><span class="line">      t.float   <span class="symbol">:reference_price</span>,             <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 除權息參考價</span></span><br><span class="line">      t.float   <span class="symbol">:dr_value</span>,                    <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 權值+息值</span></span><br><span class="line">      t.integer <span class="symbol">:dividend_right</span>,              <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 權/息</span></span><br><span class="line">      t.float   <span class="symbol">:limit_up</span>,                    <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 漲停價格</span></span><br><span class="line">      t.float   <span class="symbol">:limit_down</span>,                  <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 跌停價格</span></span><br><span class="line">      t.float   <span class="symbol">:opening_reference_price</span>,     <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 開盤競價基準</span></span><br><span class="line">      t.float   <span class="symbol">:ex_dividend_reference_price</span>, <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 減除股利參考價</span></span><br><span class="line">      t.string  <span class="symbol">:reporting_day</span>                            <span class="comment"># 最近一次申報資料 季別/日期</span></span><br><span class="line">      t.float   <span class="symbol">:price_book</span>                               <span class="comment"># 最近一次申報每股 (單位)淨值</span></span><br><span class="line">      t.float   <span class="symbol">:eps</span>                                      <span class="comment"># 最近一次申報每股 (單位)盈餘</span></span><br><span class="line"></span><br><span class="line">      t.timestamps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    add_index <span class="symbol">:ex_stocks</span>, %i[code data_date], <span class="symbol">unique:</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/stock.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stock</span> &lt; ApplicationRecord</span></span><br><span class="line">  validates <span class="symbol">:name</span>, <span class="symbol">:code</span>, <span class="symbol">presence:</span> <span class="literal">true</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">uniqueness:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  has_many <span class="symbol">:daily_quotes</span>,               <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></span><br><span class="line">  has_many <span class="symbol">:exs</span>, <span class="symbol">class_name:</span> <span class="string">"ExStock"</span>, <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></span><br><span class="line">  </span><br><span class="line">  scope <span class="symbol">:latest_transaction_date</span>, -&gt; (date = <span class="literal">nil</span>) <span class="keyword">do</span></span><br><span class="line">    date = date ? date.to_date : DailyQuote.latest_transaction_date</span><br><span class="line">    <span class="keyword">self</span>.joins(<span class="symbol">:daily_quotes</span>).where(<span class="symbol">daily_quotes:</span> &#123; <span class="symbol">transaction_date:</span> date &#125;)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/daily_quote.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DailyQuote</span> &lt; ApplicationRecord</span></span><br><span class="line">  acts_as_paranoid</span><br><span class="line"></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">:transaction_date</span>, <span class="symbol">presence:</span> <span class="literal">true</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">uniqueness:</span> &#123; <span class="symbol">scope:</span> <span class="symbol">:transaction_date</span>,</span><br><span class="line">    <span class="symbol">message:</span> <span class="string">"該收盤日期已有紀錄"</span> &#125;</span><br><span class="line"></span><br><span class="line">  belongs_to <span class="symbol">:stock</span>, <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span></span><br><span class="line"></span><br><span class="line">  scope <span class="symbol">:latest_transaction_date</span>, -&gt; &#123; maximum(<span class="symbol">:transaction_date</span>) &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/ex_stock.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExStock</span> &lt; ApplicationRecord</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">:data_date</span>, <span class="symbol">:closing_price_before</span>, <span class="symbol">:reference_price</span>, <span class="symbol">:dr_value</span>,</span><br><span class="line">            <span class="symbol">:dividend_right</span>, <span class="symbol">:limit_up</span>, <span class="symbol">:limit_down</span>, <span class="symbol">:opening_reference_price</span>, <span class="symbol">:ex_dividend_reference_price</span>,</span><br><span class="line">            <span class="symbol">presence:</span> <span class="literal">true</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">uniqueness:</span> &#123; <span class="symbol">scope:</span> <span class="symbol">:data_date</span>, <span class="symbol">message:</span> <span class="string">"該資料日期已有紀錄"</span> &#125;</span><br><span class="line"></span><br><span class="line">  belongs_to <span class="symbol">:stock</span>, <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span></span><br><span class="line"></span><br><span class="line">  DIVIDEND_RIGHT = &#123;</span><br><span class="line">    <span class="string">"息"</span>   =&gt; <span class="string">"xd"</span>,</span><br><span class="line">    <span class="string">"權"</span>   =&gt; <span class="string">"xr"</span>,</span><br><span class="line">    <span class="string">"權息"</span> =&gt; <span class="string">"dr"</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  enum <span class="symbol">dividend_right:</span> &#123;</span><br><span class="line">    <span class="symbol">xd:</span> <span class="number">0</span>, <span class="comment"># 除息 (Exclude Dividend)</span></span><br><span class="line">    <span class="symbol">xr:</span> <span class="number">1</span>, <span class="comment"># 除權 (Exclude Right)</span></span><br><span class="line">    <span class="symbol">dr:</span> <span class="number">2</span>, <span class="comment"># 除權除息(同時) (DR (Dividend + Right))</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  scope <span class="symbol">:latest_data_date</span>, -&gt; &#123; maximum(<span class="symbol">:data_date</span>) &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>設計建立好 DB 後，接下來的兩篇會示範把前兩篇抓下來的資料存到 DB~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272854" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272854</a><br>medium 文章連結：<a href="https://link.medium.com/s8TWR4KuTjb" target="_blank" rel="noopener">https://link.medium.com/s8TWR4KuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/05/Day22-%E7%94%A8-Ruby-on-Rails-%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-DB-%E8%A8%AD%E8%A8%88/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;有了前 2 篇從「臺灣證券交易所」取得 CSV 檔後，接著要把資料存入 DB，在存入前，需要先有 DB，本篇以 DB 設計為主&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day21 - 用 Ruby on Rails 抓臺灣證券交易所資料-除權除息計算結果表</title>
    <link href="https://riverye.com/2021/10/04/Day21-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8/"/>
    <id>https://riverye.com/2021/10/04/Day21-用-Ruby-on-Rails-抓臺灣證券交易所資料-除權除息計算結果表/</id>
    <published>2021-10-03T16:00:00.000Z</published>
    <updated>2022-12-21T14:31:58.958Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>這篇主要以抓「臺灣證券交易所」的「除權除息計算結果表」為主</p><h2><span id="取得除權除息計算結果表csv-檔">取得「除權除息計算結果表」CSV 檔</span></h2><p>目標是從臺灣證券交易所的「<a href="https://www.twse.com.tw/zh/page/trading/exchange/TWT49U.html" target="_blank" rel="noopener">除權除息計算結果表</a>」取得每日的 CSV 檔</p><p>note: 本資訊自民國92年5月5日起提供</p><p><img src="tpjTZSx.png" alt></p><h3><span id="下載的檔案內容如下">下載的檔案內容如下</span></h3><p>從上面已經知道，只提供 2003-05-05 之後的檔案</p><p><img src="10vPfTk.png" alt></p><h2><span id="實作">實作</span></h2><p>下載「<a href="https://www.twse.com.tw/zh/page/trading/exchange/TWT49U.html" target="_blank" rel="noopener">除權除息計算結果表</a>」時，資料日期可以直接從 2003-05-05 直接抓到最新一天，需留意時間範圍太大時，可能會遇到 <code>read_timeout</code> ，可選擇時間範圍別抓這麼廣，或把 <code>read_timeout</code> 時間拉長</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/twt_49u/download.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Twt49u</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Download</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      current_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;current_time.to_s&#125;</span>"</span></span><br><span class="line">      start_date = find_latest_data_date(current_time)</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> start_date == <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      data_path = Rails.root.join(<span class="string">"data/twse/TWT49U"</span>)</span><br><span class="line">      file_path = data_path.join(<span class="string">"TWT49U_<span class="subst">#&#123;start_date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>_<span class="subst">#&#123;current_time.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>.csv"</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> File.exists?(file_path)</span><br><span class="line"></span><br><span class="line">      FileUtils.mkdir_p(data_path) <span class="keyword">unless</span> File.directory?(data_path)</span><br><span class="line"></span><br><span class="line">      download_file(start_date, current_time, data_path, file_path)</span><br><span class="line">      upload_to_github</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - current_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, backtrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_data_date</span><span class="params">(current_time)</span></span></span><br><span class="line">      latest_data_date = ExStock.latest_data_date</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> latest_data_date</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> latest_data_date == current_time</span><br><span class="line"></span><br><span class="line">        latest_data_date + <span class="number">1</span>.day</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        Date.parse(<span class="string">"2003-05-05"</span>) <span class="comment"># 僅支援抓 2003-05-05 之後的資料</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_file</span><span class="params">(start_date, current_time, data_path, file_path)</span></span></span><br><span class="line">      remote_file = Down::NetHttp.download(</span><br><span class="line">        <span class="string">"<span class="subst">#&#123;BASE_URL&#125;</span>exchangeReport/TWT49U?response=csv&amp;strDate=<span class="subst">#&#123;start_date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>&amp;endDate=<span class="subst">#&#123;current_time.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>"</span>,</span><br><span class="line">        <span class="symbol">read_timeout:</span> <span class="number">120</span>,</span><br><span class="line">      )</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> remote_file.size &lt; <span class="number">3</span></span><br><span class="line">        FileUtils.rm_rf(remote_file.path)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        FileUtils.mv(remote_file.path, data_path.join(file_path.basename.to_s))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p><code>find_latest_data_date</code> 中的 <code>ExStock</code> 為建立的 Model，這篇可以先略過，下一篇會說明 DB 的設計</p><p>有了處理「每日收盤行情」的經驗後，在處理類似的資料時，會比較快些</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272820" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272820</a><br>medium 文章連結：<a href="https://link.medium.com/FasXk7JuTjb" target="_blank" rel="noopener">https://link.medium.com/FasXk7JuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/04/Day21-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這篇主要以抓「臺灣證券交易所」的「除權除息計算結果表」為主&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;取得除權除息計算結果表csv-檔&quot;&gt;取得「除權除息計算結果表」CSV 檔&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;目標是從
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day20 - 用 Ruby on Rails 抓臺灣證券交易所資料-每日收盤行情</title>
    <link href="https://riverye.com/2021/10/03/Day20-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85/"/>
    <id>https://riverye.com/2021/10/03/Day20-用-Ruby-on-Rails-抓臺灣證券交易所資料-每日收盤行情/</id>
    <published>2021-10-02T16:00:00.000Z</published>
    <updated>2022-12-21T14:30:04.934Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>這篇開始會有幾篇是與「臺灣證券交易所」有關，示範如何用 Ruby on Rails 來爬蟲將資料抓回來處理，並自己建立 DB，方便自己在 Local 可以測試</p><p>這部分起，不提供 sample pr or repo (個人有放 GitHub private，目前沒打算公開)</p><p>預計會示範如何抓「每日收盤行情」、「除權除息計算結果表」、設計 DB 架構、寫點簡易的技術指標選股</p><p>謎之音: 其實是原本規劃的題目，寫到膩了，想調整下內容 <s>(才不承認是拿之前自己做的 Side Project 來擠牙膏)</s></p><h2><span id="說明">說明</span></h2><p>這邊不會教股票相關的知識，我也只是一隻小菜鳥，會以技術實作層面呈現，若有寫錯或更好的寫法，歡迎不吝指教</p><h2><span id="取得每日收盤行情csv-檔">取得「每日收盤行情」CSV 檔</span></h2><p>目標是從臺灣證券交易所的「<a href="https://www.twse.com.tw/zh/page/trading/exchange/MI_INDEX.html" target="_blank" rel="noopener">每日收盤行情</a>」取得每日的 CSV 檔</p><p>note: 本資訊自民國93年2月11日起提供</p><p><img src="cjRuwPh.png" alt></p><h3><span id="下載的檔案內容如下">下載的檔案內容如下</span></h3><p>從上面已經知道，只提供 2004-02-11 之後的檔案</p><p><img src="tGEidr8.jpg" alt></p><h2><span id="實作">實作</span></h2><p>預計會用到以下 3 個 Gem，分別是 <a href="https://rubygems.org/gems/iconv" target="_blank" rel="noopener">iconv</a>、<a href="https://rubygems.org/gems/down" target="_blank" rel="noopener">down</a>、<a href="https://rubygems.org/gems/activerecord-import" target="_blank" rel="noopener">activerecord-import</a></p><p>note: Mac 的話，<code>iconv</code> 可以不用裝，最初是在 Windows 上寫的，後來變成在兩種作業系統輪流寫 XD</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'iconv'</span>, <span class="string">'~&gt; 1.0'</span>, <span class="string">'&gt;= 1.0.8'</span></span><br><span class="line">gem <span class="string">'down'</span>, <span class="string">'~&gt; 5.2'</span>, <span class="string">'&gt;= 5.2.2'</span></span><br><span class="line">gem <span class="string">'activerecord-import'</span>, <span class="string">'~&gt; 1.1'</span></span><br></pre></td></tr></table></figure></p><p>由於已經知道下載、儲存 DB 會有許多方法是共用的，因此這邊直接抽 <code>helpers</code></p><p>note: 剛開始做的時候不知道，邊做邊重構，慢慢整理的，其中 <code>decode_data</code> 這方法會在存 DB 時才會用到，因此可先忽略</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/helpers.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse</span></span></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">Helpers</span></span></span><br><span class="line"></span><br><span class="line">    BASE_URL = <span class="string">"https://www.twse.com.tw/"</span>.freeze</span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----- download start -----</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_to_github</span></span></span><br><span class="line">      need_update_github = <span class="string">`cd data/twse &amp;&amp; git remote -v`</span></span><br><span class="line"></span><br><span class="line">      system(<span class="string">'cd data/twse &amp;&amp; git add . &amp;&amp; git commit -m "update data" &amp;&amp; git push'</span>) <span class="keyword">if</span> need_update_github.present?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment"># ----- download end -----</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----- save_to_db start -----</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode_data</span><span class="params">(file_path, is_linux)</span></span></span><br><span class="line">      <span class="keyword">if</span> is_linux</span><br><span class="line">        <span class="comment"># for windows Ubuntu</span></span><br><span class="line">        file = File.open(file_path, <span class="string">"r:UTF-8"</span>)</span><br><span class="line">        decoded_data = Iconv.iconv(<span class="string">"utf-8"</span>, <span class="string">"big-5"</span>, file.read)</span><br><span class="line">        decoded_data[<span class="number">0</span>].split(<span class="string">"\r\n"</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="comment"># for mac</span></span><br><span class="line">        file = File.open(file_path, <span class="string">"r:BIG5"</span>)</span><br><span class="line">        decoded_data = file.read</span><br><span class="line">        decoded_data.split(<span class="string">"\r\n"</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment"># ----- save_to_db end -----</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>下載每日收盤行情中的「每日收盤行情(全部(不含權證、牛熊證、可展延牛熊證))」</p><p>note: 不能太密集的抓資料，會被 Bang，至於間隔幾秒怎麼知道的，trial and error 是一個方法</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/allbut_0999/download.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Allbut0999</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Download</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      current_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;current_time.to_s&#125;</span>"</span></span><br><span class="line">      data_path = Rails.root.join(<span class="string">"data/twse/ALLBUT0999"</span>)</span><br><span class="line">      start_date = find_latest_transaction_date(current_time)</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> start_date == <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      (start_date..Date.current).each <span class="keyword">do</span> <span class="params">|date|</span></span><br><span class="line">        month_path = data_path.join(date.year.to_s, date.month.to_s)</span><br><span class="line">        file_path = month_path.join(<span class="string">"MI_INDEX_ALLBUT0999_<span class="subst">#&#123;date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>.csv"</span>)</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> File.exists?(file_path) <span class="params">||</span> date.sunday?</span><br><span class="line"></span><br><span class="line">        FileUtils.mkdir_p(month_path) <span class="keyword">unless</span> File.directory?(month_path)</span><br><span class="line"></span><br><span class="line">        download_file(date, month_path)</span><br><span class="line">        sleep <span class="number">3</span> <span class="comment"># 太密集抓資料會被 bang</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      upload_to_github</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - current_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, backtrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_transaction_date</span><span class="params">(current_time)</span></span></span><br><span class="line">      latest_transaction_date = DailyQuote.latest_transaction_date</span><br><span class="line">      <span class="keyword">if</span> latest_transaction_date</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> latest_transaction_date == current_time</span><br><span class="line"></span><br><span class="line">        latest_transaction_date + <span class="number">1</span>.day</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        Date.parse(<span class="string">"2004-02-11"</span>) <span class="comment"># 僅支援抓 2014-02-11 之後的資料</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_file</span><span class="params">(date, month_path)</span></span></span><br><span class="line">      remote_file = Down.download(<span class="string">"<span class="subst">#&#123;BASE_URL&#125;</span>exchangeReport/MI_INDEX?response=csv&amp;date=<span class="subst">#&#123;date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>&amp;type=ALLBUT0999"</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> remote_file.size.zero?</span><br><span class="line">        FileUtils.rm_rf(remote_file.path)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        FileUtils.mv(remote_file.path, month_path.join(remote_file.original_filename))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>製作的過程，踩到蠻多雷的 (ex: 下載要間隔幾秒、如何處理資料...等)，可能與一開始在 Windows 上開發有關，逐一解決遇到的問題，還蠻好玩的，主要是享受開發的過程</p><p>上面有寫 <code>upload_to_github</code> 這方法，將抓下來的資料，自動上傳到 GitHub repo，若只是想單純試看看，沒有要自己建 repo 的話，這段可移除</p><p><code>find_latest_transaction_date</code> 中的 <code>DailyQuote</code> 為建立的 Model，這篇可以先略過，後面會有一篇文章說明 DB 的設計</p><p>另外也可以到「<a href="https://openapi.twse.com.tw/" target="_blank" rel="noopener">臺灣證券交易所 OpenAPI</a>」打 API 取資料，這邊就不多闡述了</p><p>下一篇會示範如何抓「除權除息計算結果表」的資料</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272778" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272778</a><br>medium 文章連結：<a href="https://link.medium.com/DtL2qRIuTjb" target="_blank" rel="noopener">https://link.medium.com/DtL2qRIuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/03/Day20-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這篇開始會有幾篇是與「臺灣證券交易所」有關，示範如何用 Ruby on Rails 來爬蟲將資料抓回來處理，並自己建立 DB，方便自己在 Local 可以測試&lt;/p&gt;
&lt;p&gt;這部分起，不提供 sample p
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>禱告事項</title>
    <link href="https://riverye.com/2021/10/03/fasted-and-prayed/"/>
    <id>https://riverye.com/2021/10/03/fasted-and-prayed/</id>
    <published>2021-10-02T16:00:00.000Z</published>
    <updated>2022-12-21T14:31:42.535Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="猜對就給你看" />    <label for="hbePass">猜對就給你看</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="50ef6d8274077c4f1755fbc35ab10378febee31cef81e059796d991456475ddc">6a160f69659dbd354f4bdd84f335229b5fa4d4a4035d06d8b416fcf72ce591554467cb27e1d66077effb5390c0a944ae300aba9d2082eb02ee76e3bdded90d469949c44e69a1c7413a298e1963cef2b2fa39883373f8ec88e9f6159d291017cd88594eb11a7b1b1ce63d15ada53930006e227dc1be52b68ea254c099ad5df2868eea56f7559999d4621678f353415cd0725f139c9cac6c436f72962c196822cec10aa5ba2d3fa4eec9f924a2759d7352aef396e3d836161293ab5aa8b34860468f32214b423c763fb03a72dd6753a69bfe8c8f7a1d9391cc339a5a9fff9904c1664b660ced998c7b3e83656260e2c7a091f6377e22ad41265efc61001c9a180b0f6309d2f029eff6e4001c9e3f6031b52cdbe5c09bbe6f69bceb74076aa498700b9b2d3a186c59671c8abf4f5c4803850e0a6b185838df0b56af77531108204ed4cc825a1a5806680cb9d0ede9e04d18738ce31d4b279360ecc8e42e049f8655c14f303285978a063275619ec40513c448175149591ae33ec86cee1f5cde0d0dff324ec76af3ba2ad441284ed876a21305b1fad52977068b214e234c0a411b2c6a0554036938bd6d630349a797dbad97d371c79e2f3272b0a19b0dcc4ecdb56ef7681fec4f54fc010ff1b7289297965bba04c0ac8a36ab7964fe9c249812118fe3f558a708e13dab47cb5908e816630941db8493d53d1df3caadf85272675dc5d0ef86df11fa9b1fefb00533fba02605383f8b8b3448c4db49dc62f606049fb844d10c29f508d826194fcd2769119047c3bc76b6f374c2b2642850e7b9015fb7c01a62671a5b3bdb9bdbeb7c3e45bf7e816fd20a17c212964ccf774c4cf67c634de80e9039ecab12cd7aa6dab592b861e42dfc75c8ebbb74c9b465b6b14118acab873ad3626d0d5cbd51ea6e505f75f99682eae390474a637bcb42b4916f5bbd346b7e50811647836ed04fd5a2e9fb5f2a0a20876092af610ccd097bb6db6f843c50479dd06d3dad84b01c49c1b7510e58db313d2a11aae770aa793f933c819329e8abf68adccc406a376fe9fb2c27f203c46afb527a54388273114f655102ad873d8d4a28591974b12170b181b722f2f540f546da31b45ff9afb9a3b119ae3190d44b78b24d6df3facc16d765596dcd9ba0227bb074b76741bc13e26066649a8bd93f2e29d415933c37157df62c3b374053a51a80fd0110ffeb15e98f71b5737c66feacd43418e30d343ecd9494df55ab25c37258b2c4d85e10d41bae318a51749f7bc1282c8db243068a605c869a741000f04052f713c1948b93a650ce5fa5d1e5f6a3b23db3b3440d77b0132bd3387a2154e2656527e4633571c0bcb13737179c301208d44cab42341c4108b26345338056a0a271102d82b23609c5360fd89361dd646ba15a3b8c10a0167f1245ba1826722cd9bf80ee314fe6afcbdbd2a3da6aaee42b27c08ca473a5e433e7e211b6bfc3323228d505d804f600b2580dceb45b76fcd977e317d405706c5e79c28d7356e7b122ec3f1c0a18dd70db7d2602f238ec248f838c2901b449b73d1894701a513ea387ab5457f9b916f99c22c382c69efd4775aff17d20addaab6482f63b451b25858b0182eac5f5123e2af8b2ca1ce50953861721554708c5817bec86ac23862105d57b4cc822597b600a0855d22ffb00cad7a4f36ad44078c4c844e629bdf62a3772e557f70cc46530ccef980a9151c836de4e7f31eb48d71ee7a4ccfd6b7eecbc487fde346374ab9c72749dc7c669485cfd15c332165914ef9691fbd3a46d3795ad4ee5b0c19667ac751ba12bb33d70ae4dd56f6ff531fca934456d25657ee4bd018a49345d8eb3b306a9586502364cd665bb79ea5d45560ff54cc8734d06b4d4ea2548b903448ae433e14794dd676037a03760b5c0331020825064d8825bd19cff4e6cc2e8e3267701610125d64b1b36ed11d4dcbc6999f556a7f2c7abef60b98398dbf244c0b3ce1079c57347c91e550ad82d4c4ae15eab4d30f8be5a86d4bd94b5da8a1de124d5aac34671fcb7506c64e7d2ba056378892255a9830aa54dfb4f460b1ee50078ebf1ca14c0c7c2cb5f8faaf676e09ad58bca1b3e26403289a68d8265c89d30ba57cd307fba5d403ae22d7d13de3bcd3de74f8df80f7fd35d0f736e6c3a93e43b23d100a217b35d7e74ecf3c5e0eb770a5a957f6b99a2bffdc00cc58dacce69793752e9f4a03058c41c19cd770a32150a5e40b63f97f52cfea23093a77582b6e103f9e9fd990026c45ee39ec7f94039f31824c80be0fe10450210417409a972e87d5ba97182ecf5ed650801281c9e1c3975a0dcab8ce17400040444ab9806be4b820eafc39a96d395c09ad35259a1816d4ba91f79f6eba81882c11203b9ba3298b0d01399fd5b9ac3ec36b925e7907a84198fbe3ae7a689288f449ac79d9016e85993c035f1b0aa64fb1d2108a14b1a0cf99d0f0096c6ae175c1b5fbc62199a38834b83af37d8024a34f0fe307cbdba8cc4c7f9f8662da4634280d1d590009e31af57b5710b71333c66c56cdcdc3855dc3dc29035bb5e1ae4876ca9bd4aa81d1e85e76f50b654428a35527f5ba5c1c3ad3e08a39d40e651dfc0628cfdb98143ad3c26a611511a50717b5969562938c33140a1d4e1b1d83afc47fdb4716298fab7ea8f33bcaddedbc1ba9f480bb7726722fcd5a16d875215532aa630f734adda62f5ff748e6612be1b071e653155dc743107dd903a845cf900701127515162d5fea9da94a52ed17e6cd4f4c04ba1fecc513441afc1a9b3dac5ed589552b9f4dde8a77e5c1fc3db6284634a8ad1cde394adc4642645e346e0cc9307107d100bfd3acddae31d80dee4e92e10239caf956c92f47417bba0267e0d241f8b9494c33f3f9ec69ae47e4a29177b763e1d2a0eb817c1abdd0a2abec02177785349b591591ace835df01c6ce944949e574332b42b486fd53c6c3270f18520489cd1ca38b6180059fd3fad8e61e46c6a63f54743b2ea5772bdc5c7fc8fd507b01198a46971e3efbb09d7771ea78d48edb7779c892e1e4e6c622ef6a0de6690df272cc93f0bb4ee75419c617f619de3e4e475aa6e1aaee5427ecc35043f903d0181e8fc20c823468a3064f7f17bf86f25baf628eba5c2d9105b428f97621f412da4e95d885823dfb19229dbf4e8aee8d97b7a8c53bac18fbb0fadbf08a16523f30a4315b21ee15a1fe1ecb5aaaa4df7aaca5c06ca9eae99dff01aab940d8d32d7fd95445bbcbfc342cea29341b7d006f12c60437e7f88f940d9d46ea4eddcd2d21b7945dc65831e372fe605c13fbc60be0979f42dfbd961f06e247f70d5c8896035799fbe75a66c537b4140df82036809f1c9d3bf1022cc1b05133d2bc57b77b73a8effa8f522f353d90a26bb3bc4966c1fe715f3f66a5b130d1bfe89665eeefcbab6dccfa95a3100c021abd70ad8a91f19af32fecf2a5f4259e30e2efc6ca4460996638c010d3bf4adc967c66d7001d2ba4f27fa18071e85941ecc998f5c0fe12d6e923f99cf626af29336f2ba175a57fac7024d76901b3d7110911f1a2843f4fc9010abeae80b8e84404ae31ccbfa30e5c70151509a23139caab8ff700066ad9ff5afeb9972213960c4b38a5966bd2e40557308fa3b293a40350687c4cb3b4b01e10c64349d8f3042a03daf23420ef1f86353bbab5c0619e3af6f356a6620fac8a1f5eec06c5293b34bfbe9912a99eb6d885b45b6c6739f0910d0dc3ed4c5e514d58ed9d2eacb7324716e34bb7d61538d03d2dbfc9bee9e70e70856aaf349599fe1940d05016d2150162563af6e9c4f9ce234148fbeaa7526fff3dd638e8416ef14e5295e24ef720b9738c6974e38d7a493892d048bfb88665c0c1d9864a93bf345da026403e149978bcf4b327861f63bb1987a5fa97e5d41ad2785fa5e7b8c84df4381f36edf4fd01b973b5afe2fbe0cb5717ce5a0fabcfec31de00c52519e9517bb9b91e09c5671a6fcb171b779dfa4a15a6f7255258e7b0c6aa8e7d3cffd3b787c05fb9d699ea11ba5696d730a0da0d9b7e369cd9625583f490061585baf63fad6634ce166036fecfb6441215f063b6f1c23e8c9c4eeec63d7965099ca86415e305c6634777cff37cef746b6284a0773689115b1fc8e88cc20</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      輸入密碼才看的到喔
    
    </summary>
    
    
    
      <category term="禱告" scheme="https://riverye.com/tags/%E7%A6%B1%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Day19 - 匯入 excel-測試篇</title>
    <link href="https://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/"/>
    <id>https://riverye.com/2021/10/02/Day19-匯入-excel-測試篇/</id>
    <published>2021-10-01T16:00:00.000Z</published>
    <updated>2022-09-23T08:45:10.281Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>繼<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">上篇</a>匯入 Excel 實作，這篇以撰寫測試為主</p><h2><span id="實作">實作</span></h2><p>測試的寫法有蠻多種，這邊以其中一種為例，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/9" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/parser_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe ShopsExcel::Parser <span class="keyword">do</span></span><br><span class="line">  describe <span class="string">'execute'</span> <span class="keyword">do</span></span><br><span class="line">    let(<span class="symbol">:excel_file</span>) &#123; Tempfile.new(<span class="string">%w[shops_import .xlsx]</span>) &#125;</span><br><span class="line">    let(<span class="symbol">:excel</span>) <span class="keyword">do</span></span><br><span class="line">      file = excel_file</span><br><span class="line">      file.binmode</span><br><span class="line"></span><br><span class="line">      xlsx = Axlsx::Package.new</span><br><span class="line">      workbook = xlsx.workbook</span><br><span class="line">      workbook.add_worksheet(<span class="symbol">name:</span> <span class="string">'商家清單'</span>) <span class="keyword">do</span> <span class="params">|sheet|</span></span><br><span class="line">        sheet.add_row(excel_titles)</span><br><span class="line">        sheet.add_row(content_array1)</span><br><span class="line">        sheet.add_row(content_array2)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      xlsx.use_shared_strings = <span class="literal">true</span></span><br><span class="line">      xlsx.serialize(file)</span><br><span class="line"></span><br><span class="line">      file.rewind</span><br><span class="line">      file</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    let(<span class="symbol">:excel_titles</span>) &#123; ShopsExcel::Generator::TITLES &#125;</span><br><span class="line">    let(<span class="symbol">:content_array1</span>) &#123; [<span class="string">'shop_name_1'</span>, <span class="string">'river@riverye.com'</span>, <span class="string">'hello'</span>] &#125;</span><br><span class="line">    let(<span class="symbol">:content_array2</span>) &#123; [<span class="string">'shop_name_2'</span>, <span class="string">'test@riverye.com'</span>,  <span class="string">'world'</span>] &#125;</span><br><span class="line"></span><br><span class="line">    subject &#123; described_class.new.execute(excel) &#125;</span><br><span class="line"></span><br><span class="line">    context <span class="string">'create shops successfully'</span> <span class="keyword">do</span></span><br><span class="line">      it <span class="string">'data correctly'</span> <span class="keyword">do</span></span><br><span class="line">        expect &#123; subject &#125;.to change &#123; Shop.count &#125;.by(<span class="number">2</span>)</span><br><span class="line">        [content_array1, content_array2].each <span class="keyword">do</span> <span class="params">|content_array|</span></span><br><span class="line">          shop1 = Shop.find_by(<span class="symbol">name:</span> content_array[<span class="number">0</span>])</span><br><span class="line">          expect(shop1).to have_attributes(</span><br><span class="line">            <span class="symbol">name:</span> content_array[<span class="number">0</span>],</span><br><span class="line">            <span class="symbol">email:</span> content_array[<span class="number">1</span>],</span><br><span class="line">            <span class="symbol">note:</span> content_array[<span class="number">2</span>],</span><br><span class="line">          )</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    context <span class="string">'when return error'</span> <span class="keyword">do</span></span><br><span class="line">      let(<span class="symbol">:logger</span>) &#123; double &#125;</span><br><span class="line"></span><br><span class="line">      before <span class="keyword">do</span></span><br><span class="line">        allow(Rails).to receive(<span class="symbol">:logger</span>).and_return(logger)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">expect_error_message</span><span class="params">(error_message)</span></span></span><br><span class="line">        expect(logger).to receive(<span class="symbol">:error</span>).with(<span class="regexp">/\[ShopsExcel::Parser Error\] <span class="subst">#&#123;error_message&#125;</span>/</span>)</span><br><span class="line">        expect &#123; subject &#125;.to change &#123; Shop.count &#125;.by(<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when title is empty'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:excel_titles</span>) &#123; [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'輸入資料有誤，比對 Excel 標頭與預期不同'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when data is empty'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:content_array1</span>) &#123; [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; content_array1 &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'無資料'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when data is duplicate'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; content_array1 &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'有重複的商家名稱，請檢查'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when shop exists'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:shop</span>) &#123; create(<span class="symbol">:shop</span>) &#125;</span><br><span class="line">        let(<span class="symbol">:content_array1</span>) &#123; [shop.name, shop.email, shop.note] &#125;</span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; [<span class="string">'shop_name_2'</span>, <span class="string">'test@riverye.com'</span>, <span class="string">'world'</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">"有 1 筆已建立過: <span class="subst">#&#123;shop.name&#125;</span>"</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>這篇其實是與<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">上篇</a>一起先寫好 code ，接著才開始寫文章，在寫測試過程中，有發現原本寫的方法要微調，這也是撰寫測試的好處，能發現一些沒留意到的眉眉角角 <s>(說這麼多，就是擠牙膏嘛)</s></p><p>若有更好的寫法，歡迎留言和我說~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/roo-rb/roo" target="_blank" rel="noopener">Roo GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272599" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272599</a><br>medium 文章連結：<a href="https://link.medium.com/sYWyCHbyRjb" target="_blank" rel="noopener">https://link.medium.com/sYWyCHbyRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;繼&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10272591&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上篇&lt;/a&gt;匯入 Excel 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day18 - 匯入 excel-應用篇</title>
    <link href="https://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/"/>
    <id>https://riverye.com/2021/10/01/Day18-匯入-excel-應用篇/</id>
    <published>2021-09-30T16:00:00.000Z</published>
    <updated>2022-09-23T08:45:10.289Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>使用者除了有匯出報表的需求外，也會有需要大量匯入的情境，匯入會更需要驗證輸入的資料，有可能是空的資料、跟預期輸入 Excel 完全不同、重複的資料 (需看情境是否接受重複的資料)、部分資料輸入錯誤...等</p><h2><span id="實作">實作</span></h2><p>這邊會需要使用到 <a href="https://rubygems.org/gems/roo" target="_blank" rel="noopener">roo</a> 和 <a href="https://rubygems.org/gems/roo-xls" target="_blank" rel="noopener">roo-xls</a> 這 2 個 Gem ，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/8" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'roo'</span>, <span class="string">'~&gt; 2.8'</span>, <span class="string">'&gt;= 2.8.3'</span></span><br><span class="line">gem <span class="string">'roo-xls'</span>, <span class="string">'~&gt; 1.2'</span></span><br></pre></td></tr></table></figure></p><p>以下範例有做簡單的驗證，像是判斷輸入的 Excel 標題列是否一樣、是否有資料、是否有重複的資料、是否與 DB 資料重複</p><p>大量匯入時，可改用 <code>activerecord-import</code> 處理，可參考這篇<a href="https://ithelp.ithome.com.tw/articles/10264572" target="_blank" rel="noopener">文章</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/parser.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ShopsExcel</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">ParseError</span> &lt; StandardError;</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Parser</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(file_path)</span></span></span><br><span class="line">      list = read_excel(file_path)</span><br><span class="line">      sheet = list.sheet(<span class="number">0</span>)</span><br><span class="line">      validate_title_names!(sheet)</span><br><span class="line">      validate_shop_names!(sheet)</span><br><span class="line">      process_shops(sheet)</span><br><span class="line">    <span class="keyword">rescue</span> ParseError =&gt; e</span><br><span class="line">      subject = <span class="string">"[<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span> Error] <span class="subst">#&#123;e.message&#125;</span>, \nbacktrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">      Rails.logger.error subject</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_excel</span><span class="params">(file_path)</span></span></span><br><span class="line">      Roo::Spreadsheet.open(file_path)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_title_names!</span><span class="params">(sheet)</span></span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> sheet.row(<span class="number">1</span>) == ShopsExcel::Generator::TITLES</span><br><span class="line"></span><br><span class="line">      raise ParseError, <span class="string">'輸入資料有誤，比對 Excel 標頭與預期不同'</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_shop_names!</span><span class="params">(sheet)</span></span></span><br><span class="line">      all_shop_names = sheet.column(<span class="number">1</span>)[<span class="number">1</span>..-<span class="number">1</span>]</span><br><span class="line">      raise ParseError, <span class="string">'無資料'</span> <span class="keyword">if</span> all_shop_names.blank?</span><br><span class="line">      raise ParseError, <span class="string">'有重複的商家名稱，請檢查'</span> <span class="keyword">if</span> all_shop_names.uniq.size != all_shop_names.size</span><br><span class="line"></span><br><span class="line">      existed_shop_names = Shop.where(<span class="symbol">name:</span> all_shop_names).pluck(<span class="symbol">:name</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> existed_shop_names.blank?</span><br><span class="line"></span><br><span class="line">      raise ParseError, <span class="string">"有 <span class="subst">#&#123;existed_shop_names.size&#125;</span> 筆已建立過: <span class="subst">#&#123;existed_shop_names.join(<span class="string">', '</span>)&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_shops</span><span class="params">(sheet)</span></span></span><br><span class="line">      shops = []</span><br><span class="line">      (<span class="number">2</span>..sheet.last_row).each <span class="keyword">do</span> <span class="params">|index|</span></span><br><span class="line">        col_values = sheet_row(sheet, index)</span><br><span class="line">        shop = Shop.new(col_values)</span><br><span class="line">        shops &lt;&lt; shop</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      Shop.import(shops)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sheet_row</span><span class="params">(sheet, index)</span></span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="symbol">name:</span> sheet.row(index)[<span class="number">0</span>],  <span class="comment"># 商家名稱</span></span><br><span class="line">        <span class="symbol">email:</span> sheet.row(index)[<span class="number">1</span>], <span class="comment"># 信箱</span></span><br><span class="line">        <span class="symbol">note:</span> sheet.row(index)[<span class="number">2</span>],  <span class="comment"># 備註</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>在 <code>rails console</code> 輸入以下</p><p><a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/%E5%95%86%E5%AE%B6%E7%B8%BD%E8%A1%A8.xlsx" target="_blank" rel="noopener">範例的 Excel 檔</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">file = Rails.root.join(<span class="string">"data/商家總表.xlsx"</span>).to_s</span><br><span class="line">ShopsExcel::Parser.new.execute(file)</span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>匯入要做的基本驗證蠻多的，需考量各種情境，並盡可能地去預防處理，和匯出一樣，建議都是放 sidekiq 處理，完成後再寄信給使用者，告知匯入結果</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/roo-rb/roo" target="_blank" rel="noopener">Roo GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272591</a><br>medium 文章連結：<a href="https://link.medium.com/Teq2MzayRjb" target="_blank" rel="noopener">https://link.medium.com/Teq2MzayRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;使用者除了有匯出報表的需求外，也會有需要大量匯入的情境，匯入會更需要驗證輸入的資料，有可能是空的資料、跟預期輸入 Excel 完全不同、重複的資料 (需看情境是否接受重複的資料)、部分資料輸入錯誤...等&lt;/
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day17 - 匯出 excel-測試篇</title>
    <link href="https://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/"/>
    <id>https://riverye.com/2021/09/30/Day17-匯出-excel-測試篇/</id>
    <published>2021-09-29T16:00:00.000Z</published>
    <updated>2022-09-23T08:45:10.249Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p><a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">上篇</a>題到如何製作產 Excel 檔，這篇以撰寫測試為主</p><h2><span id="說明">說明</span></h2><p>延續<a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">上篇</a>完成的補寫測試，這邊還有額外安裝 <code>factory_bot_rails</code> <a href="https://rubygems.org/gems/factory_bot_rails" target="_blank" rel="noopener">Gem</a> 使用，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/7" target="_blank" rel="noopener">pr</a></p><h2><span id="實作">實作</span></h2><p>主要測試內容為: 工作列表名稱 (worksheet)、Excel 標題列、內容，確認資料正確性</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/generator_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe ShopsExcel::Generator <span class="keyword">do</span></span><br><span class="line">  subject &#123; described_class.new.execute &#125;</span><br><span class="line"></span><br><span class="line">  before <span class="keyword">do</span></span><br><span class="line">    @shop = create(<span class="symbol">:shop</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  it <span class="string">'generate rows correctly'</span> <span class="keyword">do</span></span><br><span class="line">    xlsx = subject</span><br><span class="line">    first_sheet = xlsx.workbook.worksheets[<span class="number">0</span>]</span><br><span class="line">    expect(first_sheet.name).to eq(<span class="string">'商家清單'</span>)</span><br><span class="line">    expect(first_sheet.rows[<span class="number">0</span>].cells.map(&amp;<span class="symbol">:value</span>)).to match_array(</span><br><span class="line">      <span class="string">%w[商家名稱 信箱 備註]</span></span><br><span class="line">    )</span><br><span class="line">    expect(first_sheet.rows[<span class="number">1</span>].cells.map(&amp;<span class="symbol">:value</span>)).to match_array(</span><br><span class="line">      [@shop.name, @shop.email, @shop.note]</span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>一開始不熟悉時，會做比較慢，蠻正常的，因為沒做過所以也沒頭緒，多做幾次後，就會逐漸上手，慢慢的就能變成先寫完測試，再開始實作內容了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/thoughtbot/factory_bot_rails" target="_blank" rel="noopener">factory_bot_rails GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272496" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272496</a><br>medium 文章連結：<a href="https://link.medium.com/H7KaCZbhRjb" target="_blank" rel="noopener">https://link.medium.com/H7KaCZbhRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10272151&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上篇&lt;/a&gt;題到如何製作產 Ex
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
</feed>
