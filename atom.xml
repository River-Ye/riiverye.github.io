<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://riverye.com/"/>
  <updated>2019-11-07T16:06:51.749Z</updated>
  <id>https://riverye.com/</id>
  
  <author>
    <name>River-Ye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有趣的 4 題白板題</title>
    <link href="https://riverye.com/2019/11/08/%E6%9C%89%E8%B6%A3%E7%9A%84-4-%E9%A1%8C%E7%99%BD%E6%9D%BF%E9%A1%8C/"/>
    <id>https://riverye.com/2019/11/08/有趣的-4-題白板題/</id>
    <published>2019-11-07T16:00:00.000Z</published>
    <updated>2019-11-07T16:06:51.749Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="猜的到就給你看" />    <label for="hbePass">猜的到就給你看</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="eea9cd9c504aace1fc1e4962064691eb3dad196376039a884b454fa78cbff6cc"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      輸入密碼才看的到內容喔
    
    </summary>
    
    
      <category term="Ruby" scheme="https://riverye.com/categories/Ruby/"/>
    
    
      <category term="Ruby" scheme="https://riverye.com/tags/Ruby/"/>
    
      <category term="method" scheme="https://riverye.com/tags/method/"/>
    
      <category term="keyword arguments" scheme="https://riverye.com/tags/keyword-arguments/"/>
    
      <category term="block" scheme="https://riverye.com/tags/block/"/>
    
  </entry>
  
  <entry>
    <title>來個三題 LeetCode easy 吧</title>
    <link href="https://riverye.com/2019/11/07/%E4%BE%86%E5%80%8B%E4%B8%89%E9%A1%8C-Leetcode-easy-%E5%90%A7/"/>
    <id>https://riverye.com/2019/11/07/來個三題-Leetcode-easy-吧/</id>
    <published>2019-11-06T16:00:00.000Z</published>
    <updated>2019-11-07T14:53:53.903Z</updated>
    
    <content type="html"><![CDATA[<p>近期被問到用 Ruby 解三題 <a href="https://leetcode.com" target="_blank" rel="noopener">LeetCode</a> easy 題目，分別是：</p><ol><li><a href="https://leetcode.com/problems/single-number" target="_blank" rel="noopener">136. Single Number</a></li><li><a href="https://leetcode.com/problems/add-digits" target="_blank" rel="noopener">258. Add Digits</a></li><li><a href="https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array" target="_blank" rel="noopener">448. Find All Numbers Disappeared in an Array</a></li></ol><h2>題目</h2><h3>題目(<a href="https://leetcode.com/problems/single-number" target="_blank" rel="noopener">136. Single Number</a>)：</h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Given a non-empty array of integers, every element appears twice except <span class="keyword">for</span> one. Find that single one.</span><br><span class="line"></span><br><span class="line"><span class="symbol">Note:</span></span><br><span class="line"></span><br><span class="line">Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</span><br><span class="line"></span><br><span class="line">Example <span class="number">1</span><span class="symbol">:</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Input:</span> [<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line"><span class="symbol">Output:</span> <span class="number">1</span></span><br><span class="line">Example <span class="number">2</span><span class="symbol">:</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Input:</span> [<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="symbol">Output:</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer[]&#125; nums</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_number</span><span class="params">(nums)</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h3>題目(<a href="https://leetcode.com/problems/add-digits" target="_blank" rel="noopener">258. Add Digits</a>)：</h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Given a non-negative integer num, repeatedly add all its digits <span class="keyword">until</span> the result has only one digit.</span><br><span class="line"></span><br><span class="line"><span class="symbol">Example:</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Input:</span> <span class="number">38</span></span><br><span class="line"><span class="symbol">Output:</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">Explanation:</span> The process is <span class="symbol">like:</span> <span class="number">3</span> + <span class="number">8</span> = <span class="number">11</span>, <span class="number">1</span> + <span class="number">1</span> = <span class="number">2</span>.</span><br><span class="line">             Since <span class="number">2</span> has only one digit, <span class="keyword">return</span> it.</span><br><span class="line">Follow <span class="symbol">up:</span></span><br><span class="line">Could you <span class="keyword">do</span> it without any loop/recursion <span class="keyword">in</span> O(<span class="number">1</span>) runtime?</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer&#125; num</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_digits</span><span class="params">(num)</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h3>題目(<a href="https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array" target="_blank" rel="noopener">448. Find All Numbers Disappeared in an Array</a>)：</h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Given an array of integers where <span class="number">1</span> ≤ a[i] ≤ n (n = size of array), some elements appear twice <span class="keyword">and</span> others appear once.</span><br><span class="line"></span><br><span class="line">Find all the elements of [<span class="number">1</span>, n] inclusive that <span class="keyword">do</span> <span class="keyword">not</span> appear <span class="keyword">in</span> this array.</span><br><span class="line"></span><br><span class="line">Could you <span class="keyword">do</span> it without extra space <span class="keyword">and</span> <span class="keyword">in</span> O(n) runtime? You may assume the returned list does <span class="keyword">not</span> count as extra space.</span><br><span class="line"></span><br><span class="line"><span class="symbol">Example:</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Input:</span></span><br><span class="line">[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="symbol">Output:</span></span><br><span class="line">[<span class="number">5</span>,<span class="number">6</span>]</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer[]&#125; nums</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer[]&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_disappeared_numbers</span><span class="params">(nums)</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><hr><h2>答案</h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 136. Single Number</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">single_number</span><span class="params">(nums)</span></span></span><br><span class="line">  <span class="comment"># 原本寫法 (時間複雜度不會過)</span></span><br><span class="line">  <span class="comment"># nums.select&#123; |x| nums.count(x) == 1&#125;.first</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 後來寫法</span></span><br><span class="line">  <span class="comment"># XOR 數位邏輯的互斥或閘(XOR)</span></span><br><span class="line">  nums.inject(<span class="symbol">:^</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 258. Add Digits</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_digits</span><span class="params">(num)</span></span></span><br><span class="line">  <span class="comment"># 原本寫法</span></span><br><span class="line">  <span class="keyword">return</span> num <span class="keyword">if</span> num &lt; <span class="number">10</span></span><br><span class="line">  add_digits(num / <span class="number">10</span> + num % <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 後來寫法</span></span><br><span class="line">  <span class="comment"># 使用三元運算、遞迴</span></span><br><span class="line">  num &lt; <span class="number">10</span> ? num : add_digits(num / <span class="number">10</span> + num % <span class="number">10</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 448. Find All Numbers Disappeared in an Array</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_disappeared_numbers</span><span class="params">(nums)</span></span></span><br><span class="line">  [*<span class="number">1</span>..nums.size] - nums</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><hr><h2>小結</h2><ol><li>先搞懂題目問什麼</li><li>可以先用 RSpec 在本地端測試 (可忽略步驟 2.)</li><li>再丟到 LeetCode 上測試</li><li><a href="https://zh.wikipedia.org/wiki/%E6%99%82%E9%96%93%E8%A4%87%E9%9B%9C%E5%BA%A6" target="_blank" rel="noopener">時間複雜度</a>沒過再來思考如何解決 (先求有再求好)</li></ol>]]></content>
    
    <summary type="html">
    
      面試題目
    
    </summary>
    
    
      <category term="Ruby" scheme="https://riverye.com/categories/Ruby/"/>
    
    
      <category term="Leetcode" scheme="https://riverye.com/tags/Leetcode/"/>
    
      <category term="刷題" scheme="https://riverye.com/tags/%E5%88%B7%E9%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>修復 BIOS Boot Sequence 找不到 Windows 10</title>
    <link href="https://riverye.com/2019/11/03/%E4%BF%AE%E5%BE%A9-BIOS-Boot-Sequence-%E6%89%BE%E4%B8%8D%E5%88%B0-Windows-10/"/>
    <id>https://riverye.com/2019/11/03/修復-BIOS-Boot-Sequence-找不到-Windows-10/</id>
    <published>2019-11-02T16:00:00.000Z</published>
    <updated>2019-11-03T05:55:44.324Z</updated>
    
    <content type="html"><![CDATA[<h1>環境介紹</h1><p>新買 SSD M.2 SATA 240GB 當作主要系統裝到品牌電腦，並將原本品牌電腦中的 HDD 格式化後當資料碟使用，預計安裝作業系統如下</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作業系統：Windows <span class="number">10</span> x64</span><br><span class="line">系統版本：<span class="number">1903</span> (OS 組建 <span class="number">18362.418</span>)</span><br></pre></td></tr></table></figure></p><h1>什麼情況需要?</h1><p>安裝作業系統後，發現 BIOS 在 UEFI 及 Legacy Boot 皆抓不到安裝後的作業系統，且顯示「No bootable devices found.」</p><h1>開始前</h1><p>若有資料請先用 <a href="https://www.google.com/search?q=WinPE&amp;oq" target="_blank" rel="noopener">WinPE</a> 或其他方式將資料備份再開始進行。<br>若是新硬碟則沒有備份資料問題。</p><h1>操作流程</h1><ol><li><p>自行準備 <a href="https://www.microsoft.com/zh-tw/download/windows-usb-dvd-download-tool" target="_blank" rel="noopener">USB Windows 10 安裝作業系統</a>，確認能用 USB 安裝作業系統。<br>備註：光碟安裝也 OK，速度較慢，建議以 USB 3.0 以上隨身碟安裝較快。</p></li><li><p>先將 BIOS 改 Legacy Boot，並以 USB 為開機第一順位。</p></li><li><p>安裝作業系統。</p></li><li><p>安裝完作業系統重開後，顯示「No bootable devices found.」，接著重開機回 USB 安裝作業系統內。</p></li><li><p>鍵盤同時鍵入「Shift + F10」，會跳出 Windows 命令提示字元 (cmd.exe)</p></li><li><p>進入 diskaprt 模式</p></li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br></pre></td></tr></table></figure></p><ol start="7"><li>檢視所有磁碟機</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list disk</span><br></pre></td></tr></table></figure></p><ol start="8"><li>選擇已安裝作業系統的磁碟</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select disk 1</span><br><span class="line"></span><br><span class="line"># select disk &lt;你的磁碟數字代號&gt;</span><br></pre></td></tr></table></figure></p><ol start="9"><li>顯示所有磁碟區</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list volume</span><br></pre></td></tr></table></figure></p><ol start="10"><li>選擇已安裝作業系統中磁碟容量約 557 MB 左右的磁碟</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select volume 2</span><br><span class="line"></span><br><span class="line"># select volume &lt;你的磁碟數字代號&gt;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/OV3gwQy.png" alt></p><ol start="11"><li>移除磁碟代號並指定磁碟代號</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">remove letter=c</span><br><span class="line"></span><br><span class="line">assign letter=l</span><br></pre></td></tr></table></figure></p><ol start="12"><li>選擇已安裝作業系統磁碟</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select volume 1</span><br></pre></td></tr></table></figure></p><ol start="13"><li>移除磁碟代號並指定磁碟代號</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">remove letter=d</span><br><span class="line"></span><br><span class="line">assign letter=c</span><br></pre></td></tr></table></figure></p><ol start="14"><li>確認是否修改成功</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list volume</span><br></pre></td></tr></table></figure></p><ol start="15"><li>選擇磁碟容量約 557 MB 左右的磁碟</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select volume 2</span><br></pre></td></tr></table></figure></p><ol start="16"><li>調整格式</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FORMAT FS=FAT32 LABEL=&quot;BOOT&quot;</span><br><span class="line"></span><br><span class="line"># 會需要跑幾秒</span><br></pre></td></tr></table></figure></p><ol start="17"><li>離開 diskpart 模式</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></p><ol start="18"><li>路徑改磁碟機 l:</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l:</span><br></pre></td></tr></table></figure></p><ol start="19"><li>手動設定 <a href="https://www.google.com/search?q=bcdboot&amp;oq" target="_blank" rel="noopener">BCDBoot</a></li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">md efi</span><br><span class="line">cd edi</span><br><span class="line"></span><br><span class="line">md microsoft</span><br><span class="line">cd microsoft</span><br><span class="line"></span><br><span class="line">md boot</span><br><span class="line">cd boot</span><br><span class="line"></span><br><span class="line">bootrec /fixboot</span><br><span class="line">bcdboot c:\Windows /l en-us /s l: /f ALL</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure></p><ol start="20"><li><p>關機，拔隨身碟</p></li><li><p>開機，確認是否會繼續執行 Windows 10</p></li><li><p>將 BIOS 的 Legacy Boot 改回 UEFI</p></li></ol><h1>小結</h1><p>正常情況下，不太會遇到這問題，但某些品牌電腦安裝作業系統時，可能會踩到這雷，會花比較多時間和 BIOS 及指令交戰，由於太深刻了，寫此文紀錄解決方法，有更好方法歡迎在底下留言討論。</p><h1>參考</h1><p><a href="https://youtu.be/6C0V7bneycU" target="_blank" rel="noopener">No UEFI Compatible file system was found.</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;環境介紹&lt;/h1&gt;
&lt;p&gt;新買 SSD M.2 SATA 240GB 當作主要系統裝到品牌電腦，並將原本品牌電腦中的 HDD 格式化後當資料碟使用，預計安裝作業系統如下&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
    
      <category term="環境修復" scheme="https://riverye.com/categories/%E7%92%B0%E5%A2%83%E4%BF%AE%E5%BE%A9/"/>
    
    
      <category term="BIOS" scheme="https://riverye.com/tags/BIOS/"/>
    
      <category term="Boot" scheme="https://riverye.com/tags/Boot/"/>
    
      <category term="UEFI" scheme="https://riverye.com/tags/UEFI/"/>
    
      <category term="Windows 10" scheme="https://riverye.com/tags/Windows-10/"/>
    
  </entry>
  
  <entry>
    <title>如何在不重灌的情況下修復 Ubuntu OS</title>
    <link href="https://riverye.com/2019/10/27/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E9%87%8D%E7%81%8C%E7%9A%84%E6%83%85%E6%B3%81%E4%B8%8B%E4%BF%AE%E5%BE%A9-Ubuntu-OS/"/>
    <id>https://riverye.com/2019/10/27/如何在不重灌的情況下修復-Ubuntu-OS/</id>
    <published>2019-10-26T16:00:00.000Z</published>
    <updated>2019-10-27T13:49:40.165Z</updated>
    
    <content type="html"><![CDATA[<h1>環境介紹</h1><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">作業系統：Windows <span class="number">10</span> x64</span><br><span class="line">系統版本：<span class="number">1903</span> (OS 組建 <span class="number">18362.418</span>)</span><br><span class="line">Ubuntu <span class="number">18.04</span> LTS</span><br></pre></td></tr></table></figure></p><h1>什麼情況需要?</h1><p>以我自己為例，在 Windows 10 底下安裝 Ubuntu 後，除了寫 code 外，也會摸索 Unbutu 的功能，各種測試，玩到系統有異常反應時，但又不想重灌 Ubuntu，此時就會需要！<br>好處是能解決大部分的問題，還能省去裝軟體的時間及繁瑣。<br>(遇到特例問題依然無解的話，重灌是最快的方式 XD)</p><h1>開始前</h1><p><strong>資料備份，這點非常重要！</strong></p><p>照以下所有步驟操作即可完成修復：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm /var/lib/apt/lists/lock</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm /var/lib/dpkg/lock-frontend</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg --configure -a</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt clean</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update --fix-missing</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install -f</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dpkg --configure -a</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt dist-upgrade</span><br></pre></td></tr></table></figure></p><p>最後，輸入以下指令並重開 Ubuntu 即完工！</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure></p><p>完成以上步驟後，Ubuntu 已經恢復正常狀態，資料也都還保留著。</p><p>此方法，不見得對所有情況都適用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;環境介紹&lt;/h1&gt;
&lt;p&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span
      
    
    </summary>
    
    
      <category term="環境修復" scheme="https://riverye.com/categories/%E7%92%B0%E5%A2%83%E4%BF%AE%E5%BE%A9/"/>
    
    
      <category term="Ubuntu" scheme="https://riverye.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>從無到有的 Blog 建置教學 (含 domain 購買轉址)</title>
    <link href="https://riverye.com/2019/10/23/%E5%BE%9E%E7%84%A1%E5%88%B0%E6%9C%89%E7%9A%84-Blog-%E5%BB%BA%E7%BD%AE%E6%95%99%E5%AD%B8-%E5%90%AB-domain-%E8%B3%BC%E8%B2%B7%E8%BD%89%E5%9D%80/"/>
    <id>https://riverye.com/2019/10/23/從無到有的-Blog-建置教學-含-domain-購買轉址/</id>
    <published>2019-10-22T16:00:00.000Z</published>
    <updated>2019-10-24T16:07:28.392Z</updated>
    
    <content type="html"><![CDATA[<h2>說在前面</h2><p>本篇以 Windows 環境架設 Blog，同時記錄自己 Blog 建立的過程。</p><hr><h2>環境建置</h2><p>開始前，你要先有：</p><ol><li>Node.js</li><li>Git (<a href="https://riverye.com/2019/10/12/Windows%2010%20%E5%AE%89%E8%A3%9D%20Ruby%20+%20Rails%20+%20Node.js%20+%20Git%20+%20postgresql/">可參考這篇建置 Node.js 及 Git 環境</a>)</li><li><a href="https://github.com/" target="_blank" rel="noopener">GitHub 帳號</a> (免費註冊使用)</li></ol><hr><h2>nvm 安裝</h2><p>完成上述基本環境建置後，需先安裝 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a> 才能安裝 Hexo，先在 Ubuntu 輸入</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -o- <span class="symbol">https:</span>/<span class="regexp">/raw.githubusercontent.com/nvm</span>-sh/nvm/v<span class="number">0</span>.<span class="number">35.0</span>/install.sh <span class="params">| bash</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params"># 安裝 nvm</span></span><br><span class="line"><span class="params"># 接著重開 Ubuntu</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/rezazFO.png" alt></p><p>確認 nvm 是否安裝</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ command -v nvm</span><br><span class="line"></span><br><span class="line"><span class="comment"># nvm</span></span><br></pre></td></tr></table></figure></p><p>列出所有可以安裝的 nvm 版本</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm ls-remote</span><br></pre></td></tr></table></figure></p><p>安裝 node 12.13.0</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install <span class="number">12.13</span>.<span class="number">0</span></span><br><span class="line">$ nvm install &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 截止至今，最新版本為 12.13.0</span></span><br></pre></td></tr></table></figure></p><p>檢視本地端可以使用的版本</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ nvm ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下為顯示結果</span></span><br><span class="line">-&gt;     v12.<span class="number">13.0</span></span><br><span class="line">         system</span><br><span class="line">default -&gt; <span class="number">12.13</span>.<span class="number">0</span> (-&gt; v12.<span class="number">13.0</span>)</span><br><span class="line">node -&gt; stable (-&gt; v12.<span class="number">13.0</span>) (default)</span><br><span class="line">stable -&gt; <span class="number">12.13</span> (-&gt; v12.<span class="number">13.0</span>) (default)</span><br><span class="line">iojs -&gt; N/A (default)</span><br><span class="line">unstable -&gt; N/A (default)</span><br><span class="line">lts/* -&gt; lts/erbium (-&gt; v12.<span class="number">13.0</span>)</span><br><span class="line">lts/argon -&gt; v4.<span class="number">9.1</span> (-&gt; N/A)</span><br><span class="line">lts/boron -&gt; v6.<span class="number">17.1</span> (-&gt; N/A)</span><br><span class="line">lts/carbon -&gt; v8.<span class="number">16.2</span> (-&gt; N/A)</span><br><span class="line">lts/dubnium -&gt; v1<span class="number">0</span>.<span class="number">16.3</span> (-&gt; N/A)</span><br><span class="line">lts/erbium -&gt; v12.<span class="number">13.0</span></span><br><span class="line"><span class="comment"># 以上為顯示結果</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/gaXlW0S.png" alt></p><p>確認 node 路徑來源</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ which node</span><br><span class="line"><span class="comment"># /home/river/.nvm/versions/node/v12.13.0/bin/node</span></span><br><span class="line"></span><br><span class="line">$ nvm use system</span><br><span class="line"><span class="comment"># 切換回系統的 Node.js</span></span><br><span class="line"><span class="comment"># Now using system version of node: v12.11.1 (npm v6.11.3)</span></span><br><span class="line"></span><br><span class="line">$ which node</span><br><span class="line"><span class="comment"># /usr/bin/node</span></span><br><span class="line"></span><br><span class="line">$ nvm use <span class="number">12.13</span>.<span class="number">0</span></span><br><span class="line"><span class="comment"># 切換 nvm 版本</span></span><br><span class="line"><span class="comment"># Now using node v12.13.0 (npm v6.12.0)</span></span><br><span class="line"></span><br><span class="line">$ which node</span><br><span class="line"><span class="comment"># /home/river/.nvm/versions/node/v12.13.0/bin/node</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/il2HvsH.png" alt></p><hr><h2>安裝 Hexo</h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></p><p>查詢 Hexo 版本</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下為顯示結果</span></span><br><span class="line">hexo-<span class="symbol">cli:</span> <span class="number">3.1</span>.<span class="number">0</span></span><br><span class="line"><span class="symbol">os:</span> Linux <span class="number">4.4</span>.<span class="number">0</span>-<span class="number">18362</span>-Microsoft linux x64</span><br><span class="line"><span class="symbol">node:</span> <span class="number">12.13</span>.<span class="number">0</span></span><br><span class="line"><span class="symbol">v8:</span> <span class="number">7.7</span>.<span class="number">299.13</span>-node.<span class="number">12</span></span><br><span class="line"><span class="symbol">uv:</span> <span class="number">1.32</span>.<span class="number">0</span></span><br><span class="line"><span class="symbol">zlib:</span> <span class="number">1.2</span>.<span class="number">11</span></span><br><span class="line"><span class="symbol">brotli:</span> <span class="number">1.0</span>.<span class="number">7</span></span><br><span class="line"><span class="symbol">ares:</span> <span class="number">1.15</span>.<span class="number">0</span></span><br><span class="line"><span class="symbol">modules:</span> <span class="number">72</span></span><br><span class="line"><span class="symbol">nghttp2:</span> <span class="number">1.39</span>.<span class="number">2</span></span><br><span class="line"><span class="symbol">napi:</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">llhttp:</span> <span class="number">1.1</span>.<span class="number">4</span></span><br><span class="line"><span class="symbol">http_parser:</span> <span class="number">2.8</span>.<span class="number">0</span></span><br><span class="line"><span class="symbol">openssl:</span> <span class="number">1.1</span>.<span class="number">1</span>d</span><br><span class="line"><span class="symbol">cldr:</span> <span class="number">35.1</span></span><br><span class="line"><span class="symbol">icu:</span> <span class="number">64.2</span></span><br><span class="line"><span class="symbol">tz:</span> <span class="number">2019</span>a</span><br><span class="line"><span class="symbol">unicode:</span> <span class="number">12.1</span></span><br><span class="line"><span class="comment"># 以上為顯示結果</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/Ra7FZmI.png" alt></p><p>初始化這個部落格</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;資料夾名稱&gt;</span><br><span class="line">$ hexo init RiverBlog</span><br><span class="line"># 自由命名</span><br><span class="line"></span><br><span class="line">$ npm install</span><br><span class="line"># 安裝相關套件</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/K8yL7nD.png" alt></p><p>執行 Hexo server</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 瀏覽器輸入 http://localhost:4000</span></span><br><span class="line"><span class="comment"># 預設 port 4000 想更換可改輸入 $ hexo s -p XXXX</span></span><br><span class="line"><span class="comment"># XXXX 可換成想輸入的數字</span></span><br><span class="line"><span class="comment"># 關閉 hexo server 指令 Ctrl + C</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/KCgdXng.png" alt></p><p><img src="https://i.imgur.com/hjEhPtU.png" alt></p><hr><h2>更換主題</h2><p>預設 themes 不喜歡的話，可到 <a href="https://hexo.io/themes/index.html" target="_blank" rel="noopener">Hexo Themes</a> 挑喜歡的主題</p><p>備註：挑選喜歡的主題後，務必詳讀該主題 GitHub 及 <a href="https://hexo.io/zh-tw/api/index.html" target="_blank" rel="noopener">Hexo 官方文件</a>，後續才知道如何改 (各主題修改方式不盡相同，依該主題 GitHub 文件說明為主)</p><p>以「<a href="https://zhwangart.github.io/" target="_blank" rel="noopener">Ocean</a>」主題為例</p><p><img src="https://i.imgur.com/di5fei5.png" alt></p><p>進入 <a href="https://github.com/zhwangart/hexo-theme-ocean" target="_blank" rel="noopener">GitHub</a> 後，複製下載連結</p><p><img src="https://i.imgur.com/O3GNCcr.png" alt></p><p>切換到 themes 資料夾</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes</span><br><span class="line"><span class="comment"># 切換到 themes 資料夾</span></span><br><span class="line"></span><br><span class="line">$ git clone &lt;URL&gt;</span><br><span class="line">$ git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/zhwangart</span><span class="regexp">/hexo-theme-ocean.git</span></span><br><span class="line"><span class="regexp"># 將想要的主題 clone 下來</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">$ cd ..</span></span><br><span class="line"><span class="regexp"># 回上一層資料夾</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">$ code .</span></span><br><span class="line"><span class="regexp"># 開啟 VScode 編輯軟體</span></span><br></pre></td></tr></table></figure></p><p>備註：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Visual Studio Code 官方網站</a></p><p><img src="https://i.imgur.com/3dvHaet.png" alt></p><p><strong>修改「_config.yml」前，先把 hexo server 關閉</strong></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改前</span></span><br><span class="line"><span class="symbol">theme:</span> landscape</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改後</span></span><br><span class="line"><span class="symbol">theme:</span> hexo-theme-ocean</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改的是「RiverBlog」底下的「_config.yml」</span></span><br><span class="line"><span class="comment"># 而非「themes」底下的「_config.yml」</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/37gv33Y.png" alt></p><p>theme 主題替換後，再次執行</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 開啟瀏覽器，會發現主題已更換</span></span><br><span class="line"><span class="comment"># 若預設主題確定不會再使用，可把「themes」底下的資料夾「landscape」刪除</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/4DuZGry.png" alt></p><hr><h2>新增文章</h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"&lt;title&gt;"</span></span><br><span class="line">$ hexo new <span class="string">"標題寫在這裡，Hello World"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 這指令很常用，每次新增文章都要這麼做</span></span><br></pre></td></tr></table></figure></p><p>Hexo 支援 <a href="https://markdown.tw/" target="_blank" rel="noopener">Markdown 語法</a>，使用方法自行翻閱 API</p><p><img src="https://i.imgur.com/2V6sZUo.png" alt></p><p><strong>編輯文章時 <code>$ hexo s</code> 免關，可直接重新整理瀏覽器，即時觀看內容</strong></p><p><img src="https://i.imgur.com/8TZSfNG.png" alt></p><hr><h2>部署 GitHub</h2><p>當 Blog 改成想要的形狀後，接下來要部署到 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></p><h3>安装 deploy git 插件</h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 要在對的路徑做這件事情喔</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/USbCTZ1.png" alt></p><h3>登入 GitHub 後，選「New repository」</h3><p><img src="https://i.imgur.com/w4qJh0t.png" alt></p><p>在 GitHub 新增一個名稱為 &lt;username&gt;.github.io 的專案</p><p>範例：<br>Repository name：RiverBlog.github.io</p><p><strong>備註：username 須與 GitHub 名稱一樣，後面「.github.io」不可省略，以免 CSS、JavaScript 效果吃不到 (這超重要!!!)</strong></p><p><img src="https://i.imgur.com/JCrh1bh.png" alt></p><p>產生的「.git」連結複製起來，「_config.yml」檔案會用到</p><p>備註：此網頁先不要關，後面會用到</p><p><img src="https://i.imgur.com/VYodIO4.png" alt></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改前</span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line">  <span class="symbol">type:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改後</span></span><br><span class="line"><span class="symbol">deploy:</span></span><br><span class="line">  <span class="symbol">type:</span> git</span><br><span class="line">  <span class="symbol">repo:</span> <span class="symbol">https:</span>/<span class="regexp">/github.com/</span>River-Ye/riverye.github.io.git</span><br><span class="line">  <span class="symbol">branch:</span> master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 空格不能省略</span></span><br><span class="line"><span class="comment"># 其中 repo 換成自己的 GitHub 連結</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/SCHMLfO.png" alt></p><p>在 Ubuntu 及 Git Bash 皆輸入</p><p>備註：已經有再用 git push 者，可省略此步驟</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 輸入 GitHub 名稱、信箱</span></span><br><span class="line">$ git config --global user.name <span class="string">"your_name"</span></span><br><span class="line">$ git config --global user.email <span class="string">"your_email"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例</span></span><br><span class="line">$ git config --global user.name <span class="string">"River-Ye"</span></span><br><span class="line">$ git config --global user.email <span class="string">"xxxx@gmail.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢視目前設定</span></span><br><span class="line">$ git config --list</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/WyJKAFC.png" alt></p><p><img src="https://i.imgur.com/ygqrLBQ.png" alt></p><p>完成 GitHub 設定後，接下來要部署到 GitHub</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 產生靜態檔後就部署</span></span><br><span class="line"><span class="comment"># 這指令會很常用，每次有新文章或修改內容時，都會用到!!!</span></span><br><span class="line"><span class="comment"># 之前提過 Windows 底下的 Ubuntu push GitHub 輸入帳號密碼時，會說驗證錯誤</span></span><br><span class="line"><span class="comment"># 因此需透過 Git Bash push</span></span><br><span class="line"><span class="comment"># Mac 則無此問題</span></span><br></pre></td></tr></table></figure></p><p>備註：Mac 使用者，執行完 <code>$ hexo g -d</code> 即完成部署並推上 GitHub，可直接跳到「<a href="#rang-lian-jie-zheng-chang-hua">讓連結正常化</a>」開始觀看</p><p><img src="https://i.imgur.com/nE61zVL.png" alt></p><p>忽略此錯誤訊息，接下來改用 Git Bash push</p><p><img src="https://i.imgur.com/hXR1FAN.png" alt></p><p>Git Bash 輸入</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ cd /c/demo/RiverBlog/.deploy_git/</span><br><span class="line"><span class="comment"># 切換到 「.deploy_git」 資料夾</span></span><br><span class="line"></span><br><span class="line">$ git remote add river_blog <span class="symbol">https:</span>/<span class="regexp">/github.com/</span>River-Ye/RiverBlog.github.io.git</span><br><span class="line">$ git remote add &lt;遠端 branch 名稱，自由命名&gt; &lt;遠端連結&gt;</span><br><span class="line"><span class="comment"># 手動新增 GitHub 遠端 branch 名稱、連結</span></span><br><span class="line"></span><br><span class="line">$ git remote -v</span><br><span class="line"><span class="comment"># 查詢 remote 有哪些</span></span><br><span class="line"></span><br><span class="line">$ git push -u river_blog master</span><br><span class="line">$ git push -u &lt;遠端 branch 名稱&gt; &lt;本地端 branch 名稱&gt;</span><br><span class="line"><span class="comment"># push 到 GitHub</span></span><br><span class="line"><span class="comment"># Windwos 第一次 push 以後，之後指令改成</span></span><br><span class="line"><span class="comment"># $ git push &lt;遠端 branch 名稱&gt; &lt;本地端 branch 名稱&gt; -f</span></span><br><span class="line"><span class="comment"># 範例：</span></span><br><span class="line"><span class="comment"># $ git push river master -f</span></span><br><span class="line"></span><br><span class="line">$ git log</span><br><span class="line"><span class="comment"># 查看 git log</span></span><br></pre></td></tr></table></figure></p><p>過程中，會需要輸入 GitHub 名稱、密碼</p><p>備註：第一次會需要輸入 GitHub 名稱、密碼，之後不用再輸入</p><p><img src="https://i.imgur.com/ncKGKVX.png" alt></p><p>打開 <a href="https://github.com/river-demo/river-demo.github.io" target="_blank" rel="noopener">GitHub project</a> 的 Settings，下方即可看到 GitHub 網址連結 <a href="https://river-demo.github.io/" target="_blank" rel="noopener">https://river-demo.github.io/</a></p><p><img src="https://i.imgur.com/l0Hp88A.png" alt></p><p>完成以上步驟即可獲得 username.github.io 的網址</p><hr><h2>讓連結正常化</h2><p><strong>此時會發現 Blog 中的連結幾乎失效</strong>，回到「_config.yml」中設定</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改前</span></span><br><span class="line"><span class="symbol">url:</span> <span class="symbol">http:</span>/<span class="regexp">/yoursite.com/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 修改後</span></span><br><span class="line"><span class="symbol">url:</span> <span class="symbol">https:</span>/<span class="regexp">/river-demo.github.io/</span></span><br><span class="line"><span class="symbol">url:</span> <span class="symbol">https:</span>/<span class="regexp">/riverye.com/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可用 username.github.io 或自己的 domain</span></span><br><span class="line"><span class="comment"># 看需求調整</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/anXPrIa.png" alt></p><hr><h2>客製化 domain</h2><p>有了 <a href="https://river-demo.github.io/" target="_blank" rel="noopener">https://river-demo.github.io/</a> 後，想把網址換成專屬網域名稱，以下兩個方法可供參考：</p><ol><li><a href="https://www.gandi.net/zh-hant" target="_blank" rel="noopener">Gandi.net</a> ( <a href="https://riverye.com">riverye.com</a> 在這買的)</li><li><a href="https://www.freenom.com/" target="_blank" rel="noopener">freenom</a> ( <a href="https://river-demo.tk" target="_blank" rel="noopener">river-demo.tk</a> 在這挑的，教學用，免費，但網址比較醜)</li></ol><hr><h3><a href="https://www.gandi.net/zh-hant" target="_blank" rel="noopener">Gandi.net</a></h3><p>搜尋想買的網域名稱後，信用卡刷一波就有了</p><p><img src="https://i.imgur.com/1FiBwYb.png" alt></p><p>新增 DNS 紀錄</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">類型： A</span><br><span class="line">TTL： <span class="number">1800</span></span><br><span class="line">IPv4： <span class="number">185.199</span>.<span class="number">108.153</span></span><br></pre></td></tr></table></figure></p><p>參考：<a href="https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site#configuring-a-records-with-your-dns-provider" target="_blank" rel="noopener">GitHub 官方列表</a></p><p><img src="https://i.imgur.com/NB3FJGB.png" alt></p><p>GitHub 設定如下</p><p><img src="https://i.imgur.com/xLTmPfr.png" alt></p><p>稍等片刻即完成 <a href="https://riverye.com">riverye.com</a></p><hr><h3><a href="https://www.freenom.com/" target="_blank" rel="noopener">freenom</a></h3><p>搜尋想要的網域名稱後，可選擇信用卡刷一波，或挑免費的使用</p><p>備註： freenom 註冊按鈕藏在購物車內<br>跟著使用體驗流程走，便會看到註冊畫面 (很隱藏)</p><p><img src="https://i.imgur.com/N57PuPO.jpg" alt></p><p>購買完成後，從首頁上方「Services」點選「My Domains」接著設定「Manage Domain」中的「Manage Freenom DNS」</p><p><img src="https://i.imgur.com/A5nYfDo.png" alt></p><p>Manage Freenom DNS 設定如下</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">| Name |</span> Type  <span class="params">| TTL  |</span>     Target      <span class="params">|</span></span><br><span class="line"><span class="params">|</span> ---- <span class="params">| ----- |</span> ---- <span class="params">| --------------- |</span></span><br><span class="line"><span class="params">|      |</span>   A   <span class="params">| 1800 |</span> <span class="number">185.199</span>.<span class="number">108.153</span> <span class="params">|</span></span><br><span class="line"><span class="params">|</span> ---- <span class="params">| ----- |</span> ---- <span class="params">| --------------- |</span></span><br><span class="line"><span class="params">|  WWW |</span> CNAME <span class="params">| 1800 |</span> river-demo.tk   <span class="params">|</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/jXWONT1.png" alt></p><p>GitHub 設定如下</p><p><img src="https://i.imgur.com/X3ZUwhD.png" alt></p><p>稍等片刻即完成 <a href="https://river-demo.tk" target="_blank" rel="noopener">river-demo.tk</a></p><h2>完成以上步驟，恭喜有專屬 domain Blog (灑花</h2><hr><h2>Q &amp; A</h2><h3>1. 之前裝過 Node.js 為何還要裝 NVM ?</h3><p>先前我們有使用 Ubuntu 本身的 apt-get 安裝 Node.js<br>不過那是被安裝到 /usr/bin/node<br>有時候安裝套件需要 sudo 提供管理者權限<br>非常麻煩，因此我們使用 nvm 來安裝另一個 Node.js<br>這個 Node.js 的執行檔就任我們使用，不需要提供管理者權限了</p><h3>2. Hexo 上沒喜歡的 themes，有別的選擇嗎 ?</h3><p>沒關係，給你滿滿的選擇：<br>jekyll <a href="https://jekyllrb.com/" target="_blank" rel="noopener">https://jekyllrb.com/</a><br>Ghost <a href="https://ghost.org" target="_blank" rel="noopener">https://ghost.org</a><br>Hugo <a href="https://gohugo.io" target="_blank" rel="noopener">https://gohugo.io</a><br>Hexo <a href="https://hexo.io" target="_blank" rel="noopener">https://hexo.io</a><br>Octopress <a href="http://octopress.org/" target="_blank" rel="noopener">http://octopress.org/</a><br>VuePress <a href="https://vuepress.vuejs.org" target="_blank" rel="noopener">https://vuepress.vuejs.org</a></p><p>附上：<a href="https://www.staticgen.com/" target="_blank" rel="noopener">靜態頁面產生器的比較</a></p><h3>3. 為什麼你 GitHub Settings 中的「Enforce HTTPS」可以勾 ?</h3><p>讓子彈飛一回，就有了 (約半小時左右)</p><h3>4. 為什麼更新 GitHub 後，原本 domain 會失效 ?</h3><p>GitHub 的 Settings 跑掉，手動改回原本 domain 即可</p><p><img src="https://i.imgur.com/fdrStDS.png" alt></p><hr><h2>最後的最後</h2><p>照著上面操作，或許能畫葫蘆出一個 Blog，但沒相關知識 (HTML5、Git、Linux 指令...等) 的話，會發現改不太動，甚至玩壞時不知該如何處理，這時請擅用 Google 自行解決問題</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;說在前面&lt;/h2&gt;
&lt;p&gt;本篇以 Windows 環境架設 Blog，同時記錄自己 Blog 建立的過程。&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;環境建置&lt;/h2&gt;
&lt;p&gt;開始前，你要先有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;Git (&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="教學文" scheme="https://riverye.com/categories/%E6%95%99%E5%AD%B8%E6%96%87/"/>
    
    
      <category term="部落格" scheme="https://riverye.com/tags/%E9%83%A8%E8%90%BD%E6%A0%BC/"/>
    
      <category term="Blog" scheme="https://riverye.com/tags/Blog/"/>
    
      <category term="domain" scheme="https://riverye.com/tags/domain/"/>
    
      <category term="GitHub" scheme="https://riverye.com/tags/GitHub/"/>
    
      <category term="Hexo" scheme="https://riverye.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 安裝 Ruby + Rails + Node.js + Git + postgresql</title>
    <link href="https://riverye.com/2019/10/12/Windows%2010%20%E5%AE%89%E8%A3%9D%20Ruby%20+%20Rails%20+%20Node.js%20+%20Git%20+%20postgresql/"/>
    <id>https://riverye.com/2019/10/12/Windows 10 安裝 Ruby + Rails + Node.js + Git + postgresql/</id>
    <published>2019-10-11T16:00:00.000Z</published>
    <updated>2019-10-30T16:20:12.173Z</updated>
    
    <content type="html"><![CDATA[<p>一口氣將常用的軟體建置起來<br>包含 Ubuntu、Ruby、rvm、Rails、Node.js、npm、Git、postgresql...等<br>實用度滿分的大補帖~~</p><h1>環境建置</h1><h2>環境介紹</h2><p>作業系統環境：<br>作業系統：Windows 10 x64<br>系統版本：1903 (OS 組建 18362.418)</p><p><img src="https://i.imgur.com/qrWaiDm.png" alt></p><p><img src="https://i.imgur.com/o9Cbjm2.png" alt></p><hr><h2>安裝 Ubuntu</h2><p><strong>為何要先安裝 Ubuntu ?</strong><br>因為許多 code 軟體在 Windows 上支援度很低甚至不支援<br>在 Windows 上安裝 Ubuntu 子系統來操作算是比較方便了<br>(還是比不過 Mac 方便...</p><p>接下來開始一連串安裝教學：</p><p>Windows 10 內建「Microsoft Store」，透過 Microsoft Store 安裝 <a href="https://www.microsoft.com/zh-tw/p/ubuntu-1804-lts/9n9tngvndl3q" target="_blank" rel="noopener">Ubuntu 18.04 LTS</a></p><p><img src="https://i.imgur.com/X9a93zl.png" alt></p><p><img src="https://i.imgur.com/XIEdVNL.png" alt></p><p><img src="https://i.imgur.com/ONrdnMj.png" alt></p><p>接著開啟 Ubuntu，出現以下的錯誤，用管理者權限開啟「Windows PowerShell」</p><p><img src="https://i.imgur.com/yGQQPtx.png" alt></p><p>開啟「Windows PowerSeell」，輸入</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure></p><p>並重新開機，再次開啟 Ubuntu 即可正常使用。</p><p><img src="https://i.imgur.com/BhMvAK9.png" alt></p><p><img src="https://i.imgur.com/gCMp9KN.png" alt></p><hr><p>第一次開啟 Ubuntu 需要跑幾分鐘，接著輸入自訂義的帳號及密碼。</p><p><img src="https://i.imgur.com/onytyQS.png" alt></p><hr><h2>安裝 Ruby</h2><p>在 Ubuntu (以下簡稱「終端機 (Terminal)」) 中輸入如下：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install ruby</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代表註解，不用輸入</span></span><br><span class="line"><span class="comment"># $ 代表這段指令要在 Terminal 輸入， $ 本身不用輸入</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/99qn2tB.png" alt></p><p><img src="https://i.imgur.com/EzHNA2q.png" alt></p><p><img src="https://i.imgur.com/UbmGboH.png" alt></p><hr><p>確認 Ruby 是否安裝及版本查詢</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -v           # ruby 2.5.1p57 (2018-03-29 revision 63029 [x86_64-linux-gnu])</span><br><span class="line">$ ruby --version    # 與上面指令效果一樣，擇一使用即可</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/e6n3ISm.png" alt></p><hr><h2>安裝 rvm</h2><p>依序於 Terminal 輸入如下：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ \curl -sSL <span class="symbol">https:</span>/<span class="regexp">/get.rvm.io | bash -s stable</span></span><br><span class="line"><span class="regexp">$ gpg --keyserver hkp:/</span><span class="regexp">/pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</span></span><br><span class="line"><span class="regexp">$ \curl -sSL https:/</span><span class="regexp">/get.rvm.io | bash -s stable</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"># 安裝後，Ubuntu 要重開</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/Y9LUDQX.png" alt></p><p><img src="https://i.imgur.com/LpHIgCm.png" alt></p><p><img src="https://i.imgur.com/B9FzlPj.png" alt></p><p>rvm 版本查詢</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rvm -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># rvm 1.29.9 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/JG0rtYE.png" alt></p><p>列出目前所有可安裝的清單</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm list known</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/DIS7lDN.png" alt></p><h3>安裝 Ruby 2.6.3 版本</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rvm install 2.6.3</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/dPB7opK.png" alt></p><p>版本確認</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># ruby 2.6.3p62 (2019-04-16 revision 67580) [x86_64-linux]</span></span><br></pre></td></tr></table></figure></p><hr><h2>安裝 Rails</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install rails</span><br></pre></td></tr></table></figure></p><p>上述指令會安裝目前最新版本 Rails (寫文章時最新版本為 Rails 6.0.0)</p><p><img src="https://i.imgur.com/Ft5ILs9.png" alt></p><h3>安裝特定版本 Rails</h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ gem install rails -v <span class="number">5.2</span>.<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 Rails 5.2.3 版本為例</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/iCY9R6m.png" alt></p><hr><h2>建立 Rails 專案</h2><h3>建立 Rails 6.0.0 專案</h3><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rails new your_project_name</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/jpy36h7.png" alt></p><p><img src="https://i.imgur.com/qWiHRVF.png" alt></p><h2>安裝 Node.js</h2><p>以安裝 Node.js 12.x 版本為例</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt install build-essential apt-transport-https lsb-release ca-certificates curl</span><br><span class="line">$ curl -sL <span class="symbol">https:</span>/<span class="regexp">/deb.nodesource.com/setup</span>_12.x <span class="params">| sudo -E bash -</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/4ElSULN.png" alt></p><p>安裝 Node.js 和 npm</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install nodejs</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/gJPYGHa.png" alt></p><p>版本查詢</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v    # v12.11.1</span><br><span class="line">$ npm -v     # v6.11.3</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/Yxa80zW.png" alt></p><p>參考：<br><a href="https://websiteforstudents.com/how-to-install-node-js-10-11-12-on-ubuntu-16-04-18-04-via-apt-and-snap/" target="_blank" rel="noopener">How To Install Node.Js 10 / 11 / 12 On Ubuntu 16.04 | 18.04 Via APT And SNAP</a></p><hr><p>裝好 Node.js 後，回到 Rails 專案繼續下一步<br>接著執行 rails server</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rails serever</span><br><span class="line">$ rails s</span><br><span class="line"></span><br><span class="line"># 上述兩個指令意思一樣</span><br></pre></td></tr></table></figure></p><p>會發現依然噴許多錯誤訊息</p><p><img src="https://i.imgur.com/SpfE9t6.png" alt></p><p>錯誤訊息中貼心提醒缺少 webpacker，由於 webpacker 需要 yarn<br>因此先安裝 yran 後再裝 webpacker<br>依序輸入：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ rails webpacker:install</span><br><span class="line">$ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -</span><br><span class="line">$ echo &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; | sudo tee /etc/apt/sources.list.d/yarn.list</span><br><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install yarn</span><br><span class="line">$ yarn --version</span><br><span class="line">$ rails webpacker:install</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/U1XTAmY.png" alt></p><p>成功開啟的畫面如下：</p><p><img src="https://i.imgur.com/IKYcI8r.png" alt></p><h3>建立特定版本 Rails 專案</h3><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ rails _5.<span class="number">2.3_</span> new your_project_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 rails 5.2.3 版本為例</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/fjeC86u.png" alt></p><p><img src="https://i.imgur.com/YtiO55b.png" alt></p><p>接著執行 Rails 專案</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rails server</span><br><span class="line">$ rails s</span><br><span class="line"></span><br><span class="line"># 上述兩個指令意思一樣</span><br></pre></td></tr></table></figure></p><p>成功開啟的畫面如下：</p><p><img src="https://i.imgur.com/laDbxHb.png" alt></p><p>參考：<br><a href="https://yarnpkg.com/lang/en/docs/install/#debian-stable" target="_blank" rel="noopener">Yarn Docs</a></p><hr><h2>安裝 Git</h2><p>下載連結：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p><p><img src="https://i.imgur.com/FPxfB7U.png" alt></p><p>下載後，執行，無腦安裝法，下一步直到安裝好為止。</p><p><img src="https://i.imgur.com/CiGOsTG.png" alt></p><p>輸入</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git version</span><br></pre></td></tr></table></figure></p><p>確認安裝版本即大功告成</p><p><img src="https://i.imgur.com/ndCsCAw.png" alt></p><h2>Ubuntu 上 Git 版本更新</h2><p>Ubuntu 很貼心內建 Git v2.17.1 版本，覺得版本老舊更新如下：</p><ol><li>先更新本地端索引：</li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt install make libssl-dev libghc-zlib-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>到 Git 的 <a href="https://github.com/git/git" target="_blank" rel="noopener">GitHub</a> 上挑選需要更新的版本<br><img src="https://i.imgur.com/e3DnTkm.png" alt></p></li><li><p>先移到暫存區</p></li></ol><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd /tmp</span><br></pre></td></tr></table></figure></p><ol start="4"><li>使用 <code>wget</code> 命令安裝複製的 zip 文件鏈接。我們將為文件指定一個新名稱：git.zip</li></ol><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget <span class="symbol">https:</span>/<span class="regexp">/github.com/git</span><span class="regexp">/git/archive</span><span class="regexp">/v2.23.0.zip -O git.zip</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"># 以 Git 2.23.0 版本為例</span></span><br></pre></td></tr></table></figure></p><ol start="5"><li>解壓縮下載的文件，並通過輸入以下內容進入目錄</li></ol><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ unzip git.zip</span><br><span class="line">$ cd git-*</span><br></pre></td></tr></table></figure></p><ol start="6"><li>輸入以下兩個指令來製作軟體並進行安裝</li></ol><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ make prefix=<span class="regexp">/usr/local</span> all</span><br><span class="line">$ sudo make prefix=<span class="regexp">/usr/local</span> install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安裝完後，Ubuntu 要重開</span></span><br></pre></td></tr></table></figure></p><ol start="7"><li>安裝完成後，確認 Git 版本</li></ol><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># git version 2.23.0</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/ElPiHRV.png" alt></p><p>參考：<br><a href="https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-18-04" target="_blank" rel="noopener">How To Install Git on Ubuntu 18.04</a></p><hr><h2>安裝 postgresql</h2><p>Rails 內建資料庫 SQLite 練習上很方便，但實務完全不會用<br>(詳細原因自行 Google)<br>因此我們要手動安裝 postgresql 資料庫，以備需要時可以使用<br>至於如何更換 Rails 專案內資料庫，有機會再寫一篇介紹</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install wget ca-certificates</span><br><span class="line">$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -</span><br><span class="line">$ sudo sh -c &apos;echo &quot;deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main&quot; &gt;&gt; /etc/apt/sources.list.d/pgdg.list&apos;</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install postgresql postgresql-contrib</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/FujtKO7.png" alt></p><p>版本查詢</p><p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ psql <span class="comment">--version</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># psql (PostgreSQL) 11.5 (Ubuntu 11.5-3.pgdg18.04+1)</span></span><br></pre></td></tr></table></figure></p><p><strong>接下來會比較繁瑣，建議先看下方圖片並瞭解後，再動作</strong></p><p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service postgresql <span class="keyword">start</span></span><br><span class="line">$ pg_lsclusters</span><br><span class="line"></span><br><span class="line"><span class="comment"># pg_lscluster &lt;version&gt; &lt;cluster&gt; start</span></span><br><span class="line">$ pg_ctlcluster <span class="number">11</span> <span class="keyword">main</span> <span class="keyword">start</span></span><br><span class="line"></span><br><span class="line">$ sudo service postgresql restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo -u postgres createuser &lt;username&gt;</span></span><br><span class="line">$ sudo -u postgres createuser river</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo -u postgres createdb &lt;database_name&gt;</span></span><br><span class="line">$ sudo -u postgres createdb river</span><br><span class="line"></span><br><span class="line">$ sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libpq-dev</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/zSe6Fyb.png" alt></p><p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ sudo -u postgres -i</span><br><span class="line">$ psql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例：</span></span><br><span class="line"><span class="comment">#= ALTER USER username CREATEDB;</span></span><br><span class="line"><span class="comment"># 我的：</span></span><br><span class="line">= <span class="keyword">ALTER</span> <span class="keyword">USER</span> river CREATEDB;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 範例：</span></span><br><span class="line"><span class="comment">#= GRANT ALL PRIVILEGES ON  DATABASE database_name to new_user;</span></span><br><span class="line"><span class="comment"># 我的：</span></span><br><span class="line">= <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span>  <span class="keyword">DATABASE</span> river <span class="keyword">to</span> river;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL 語法以 = 表示，從 = 後面開始輸入</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/BI29e7j.png" alt></p><p>參考：<br><a href="https://tecadmin.net/install-postgresql-server-on-ubuntu/" target="_blank" rel="noopener">How to Install PostgreSQL 11 on Ubuntu 18.04 &amp; 16.04 LTS</a></p><hr><h1>Q &amp; A</h1><h2>為何不用 Ubuntu 的 Git 而要安裝 Git Bash ?</h2><p>我也想都在 Ubuntu 上操作就好 (吶喊<br>但 <code>$ git push</code> 時，會遇到即使輸入正確的帳號密碼，仍會說驗證錯誤，無法上傳 <a href="https://github.com/River-Ye" target="_blank" rel="noopener">GitHub</a> 啊...<br>撇除 push 功能外， Ubuntu 上的 Git 功能還是可以用喔~</p><h2>Ubuntu 路徑名稱太長，如何縮短 ?</h2><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>修改約第 60 - 62 行 <code>$color_prompt</code> 的內容</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 修改前</span><br><span class="line">if [ &quot;$color_prompt&quot; = yes ]; then</span><br><span class="line">    PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &apos;</span><br><span class="line">else</span><br><span class="line">    PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h:\w\$ &apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 修改後</span><br><span class="line">if [ &quot;$color_prompt&quot; = yes ]; then</span><br><span class="line">    PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\[[\033[01;32m\]\w\[\033[00m\]]\$ &apos;</span><br><span class="line">else</span><br><span class="line">    PS1=&apos;$&#123;debian_chroot:+($debian_chroot)&#125;\$ &apos;</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/G0RGtU4.png" alt></p><p>修改儲存離開後，輸入：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>即可看到修改狀態 (免重開 Ubuntu)</p><p><img src="https://i.imgur.com/Nm2JFfz.png" alt></p><p>參考：<br><a href="https://blog.csdn.net/jimson_zhu/article/details/81281972" target="_blank" rel="noopener">Ubuntu（Linux）命令行终端命令提示符过长和提示符颜色显示等效果设置</a></p><h2>Ubuntu 的游標消失，該怎辦?</h2><ol><li><p>將 Windows 預設輸入模式從「中文模式」改為「英數模式」，並重開 Ubuntu。<img src="https://i.imgur.com/nXTMCW9.png" alt></p></li><li><p>在 Ubuntu 中若不小心切換到中文模式並輸入任意鍵時，游標又會消失，解決方法為<strong>在 Ubuntu 中輸入任意中文字後並按確認</strong> (並非送出指令喔)，此時游標再次出現，接著切換回「英數模式」即可。 (中英文切換快捷鍵：Shift 按一下)</p></li></ol><h2>Ubuntu 顯示的顏色調整</h2><p>Ubuntu 中文字、背景、字型、字型大小等全都可以修改，修方方法如下：<br><strong>滑鼠右鍵點選 Ubuntu 左上角 Logo，選擇「內容」即可進入修改。</strong></p><p>個人 Ubuntu 終端機設定可供參考：</p><p><img src="https://i.imgur.com/ZDWO51Z.png" alt><img src="https://i.imgur.com/x0KyibK.png" alt><img src="https://i.imgur.com/rjAD3In.png" alt></p><hr><h2>參考</h2><ol><li><a href="https://railsbook.tw/chapters/02-environment-setup.html" target="_blank" rel="noopener">為你自己學 Ruby on Rails - 環境設定</a></li><li><a href="https://gitbook.tw/chapters/environment/install-git-in-windows.html" target="_blank" rel="noopener">為你自己學 Git - 安裝在 Windows 作業系統</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一口氣將常用的軟體建置起來&lt;br&gt;
包含 Ubuntu、Ruby、rvm、Rails、Node.js、npm、Git、postgresql...等&lt;br&gt;
實用度滿分的大補帖~~&lt;/p&gt;
&lt;h1&gt;環境建置&lt;/h1&gt;
&lt;h2&gt;環境介紹&lt;/h2&gt;
&lt;p&gt;作業系統環境：&lt;br&gt;

      
    
    </summary>
    
    
      <category term="環境建置" scheme="https://riverye.com/categories/%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE/"/>
    
    
      <category term="Rails" scheme="https://riverye.com/tags/Rails/"/>
    
      <category term="Ruby" scheme="https://riverye.com/tags/Ruby/"/>
    
      <category term="Node.js" scheme="https://riverye.com/tags/Node-js/"/>
    
      <category term="Git" scheme="https://riverye.com/tags/Git/"/>
    
      <category term="postgresql" scheme="https://riverye.com/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>Day30-完賽是這種感覺啊</title>
    <link href="https://riverye.com/2019/10/09/Day30-%E5%AE%8C%E8%B3%BD%E6%98%AF%E9%80%99%E7%A8%AE%E6%84%9F%E8%A6%BA%E5%95%8A/"/>
    <id>https://riverye.com/2019/10/09/Day30-完賽是這種感覺啊/</id>
    <published>2019-10-08T16:00:00.000Z</published>
    <updated>2019-10-24T09:37:58.231Z</updated>
    
    <content type="html"><![CDATA[<p>且戰且走 30 天，老實說過程中 N 的 N 次方次想放棄，<br>要同時忙作業、複習、專案、生活等，<br>好幾次在失衡的邊緣，快撐不下去，<br>看著一起學習的夥伴比我還努力時，<br><strong>(同儕、mentor 超重要!!!)</strong><br>「不甘心」三個字會從中燃起鬥志，<br>同時得調適自己心情，擁抱自己的低潮、焦慮，<br>(像是做不出來、一直有新 bug、花很長時間研究別人卻是秒解..等)<br>甚至會忙到沒時間想東想西..</p><hr><p>如今 30 天終於結束了，人生好像多了一丁點自我成就，開心一下子，<br>接著繼續面對生活，還有許多要學習、要做的事情<br>感性什麼的，之後再說吧~</p><hr><p>最後來聽首歌結束這回合吧(灑花<br><a href="https://youtu.be/KZbswFDOOsY" target="_blank" rel="noopener">毛不易 - 消愁</a></p><p><a href="https://www.youtube.com/watch?v=KZbswFDOOsY" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/KZbswFDOOsY/0.jpg" alt="Yes"></a></p><h2>謝謝大家</h2><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;且戰且走 30 天，老實說過程中 N 的 N 次方次想放棄，&lt;br&gt;
要同時忙作業、複習、專案、生活等，&lt;br&gt;
好幾次在失衡的邊緣，快撐不下去，&lt;br&gt;
看著一起學習的夥伴比我還努力時，&lt;br&gt;
&lt;strong&gt;(同儕、mentor 超重要!!!)&lt;/strong&gt;&lt;br
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day29 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/08/Day29-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/08/Day29-Codewars-刷題/</id>
    <published>2019-10-07T16:00:00.000Z</published>
    <updated>2019-10-08T16:53:43.452Z</updated>
    
    <content type="html"><![CDATA[<p>挑戰 <a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV3 題目</p><hr><p><a href="https://www.codewars.com/kata/calculator/train/ruby" target="_blank" rel="noopener">題目(Calculator)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Create a simple calculator that given a string of operators (), +, -, *, <span class="regexp">/ and numbers separated by spaces returns the value of that expression</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Example:</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Calculator.new.evaluate("2 /</span> <span class="number">2</span> + <span class="number">3</span> * <span class="number">4</span> - <span class="number">6</span><span class="string">") # =&gt; 7</span></span><br><span class="line"><span class="string">Remember about the order of operations! Multiplications and divisions have a higher priority and should be performed left-to-right. Additions and subtractions have a lower priority and should also be performed left-to-right.</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">evaluate</span><span class="params">(string)</span></span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">calc = Calculator.new</span><br><span class="line"></span><br><span class="line">Test.assert_equals(calc.evaluate(<span class="string">"4 + 5"</span>), <span class="number">9</span>)</span><br><span class="line">Test.assert_equals(calc.evaluate(<span class="string">"4 * 5"</span>), <span class="number">20</span>)</span><br><span class="line">Test.assert_equals(calc.evaluate(<span class="string">"4 / 5"</span>), <span class="number">0</span>.<span class="number">8</span>)</span><br><span class="line">Test.assert_equals(calc.evaluate(<span class="string">"4 - 5"</span>), -<span class="number">1</span>)</span><br><span class="line">Test.assert_equals(calc.evaluate(<span class="string">"4 + 5 * 6"</span>), <span class="number">34</span>)</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=l5QOXpqxj0I" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/l5QOXpqxj0I/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Calculator</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">evaluate</span><span class="params">(string)</span></span></span><br><span class="line">    [<span class="string">'+'</span>, <span class="string">'-'</span>, <span class="string">'*'</span>, <span class="string">'/'</span>].each <span class="keyword">do</span> <span class="params">|cal|</span></span><br><span class="line">      <span class="keyword">if</span> string.<span class="keyword">include</span>?(cal)</span><br><span class="line">        <span class="keyword">return</span> string.split(cal).map&#123; <span class="params">|x|</span> evaluate(x) &#125;.inject(cal.strip)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    string.to_f</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;挑戰 &lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV3 題目&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/k
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day28 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/07/Day28-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/07/Day28-Codewars-刷題/</id>
    <published>2019-10-06T16:00:00.000Z</published>
    <updated>2019-10-08T17:15:07.804Z</updated>
    
    <content type="html"><![CDATA[<p>先補上昨天未解完 <a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV4 的答案，<br>時間複雜度沒有解決，若有更好解法可在下方留言讓我知道喔~~</p><p>到 LV4 解起來花的時間比平常更久，<br>過程中會一直找方法，和專案蠻像的，<br>遇到問題，想辦法解決它。</p><hr><p><a href="https://www.codewars.com/kata/55983863da40caa2c900004e/train/ruby" target="_blank" rel="noopener">題目(Next bigger number with the same digits)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">You have to create a function that takes a positive integer number <span class="keyword">and</span> returns the <span class="keyword">next</span> bigger number formed by the same <span class="symbol">digits:</span></span><br><span class="line"></span><br><span class="line"><span class="number">12</span> ==&gt; <span class="number">21</span></span><br><span class="line"><span class="number">513</span> ==&gt; <span class="number">531</span></span><br><span class="line"><span class="number">2017</span> ==&gt; <span class="number">2071</span></span><br><span class="line">If no bigger number can be composed using those digits, <span class="keyword">return</span> -<span class="number">1</span><span class="symbol">:</span></span><br><span class="line"></span><br><span class="line"><span class="number">9</span> ==&gt; -<span class="number">1</span></span><br><span class="line"><span class="number">111</span> ==&gt; -<span class="number">1</span></span><br><span class="line"><span class="number">531</span> ==&gt; -<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_bigger</span><span class="params">(n)</span></span></span><br><span class="line">  <span class="comment">#your code here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">12</span>),<span class="number">21</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">513</span>),<span class="number">531</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">2017</span>),<span class="number">2071</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">414</span>),<span class="number">441</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">144</span>),<span class="number">414</span>)</span><br></pre></td></tr></table></figure></p><p><a href="https://www.codewars.com/kata/most-frequently-used-words-in-a-text/train/ruby" target="_blank" rel="noopener">題目(Most frequently used words in a text)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Write a function that, given a string of text (possibly with punctuation <span class="keyword">and</span> line-breaks), returns an array of the top-<span class="number">3</span> most occurring words, <span class="keyword">in</span> descending order of the number of occurrences.</span><br><span class="line"></span><br><span class="line"><span class="symbol">Assumptions:</span></span><br><span class="line">A word is a string of letters (A to Z) optionally containing one <span class="keyword">or</span> more apostrophes (<span class="string">') in ASCII. (No need to handle fancy punctuation.)</span></span><br><span class="line"><span class="string">Matches should be case-insensitive, and the words in the result should be lowercased.</span></span><br><span class="line"><span class="string">Ties may be broken arbitrarily.</span></span><br><span class="line"><span class="string">If a text contains fewer than three unique words, then either the top-2 or top-1 words should be returned, or an empty array if a text contains no words.</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">top_3_words("In a village of La Mancha, the name of which I have no desire to call to</span></span><br><span class="line"><span class="string">mind, there lived not long since one of those gentlemen that keep a lance</span></span><br><span class="line"><span class="string">in the lance-rack, an old buckler, a lean hack, and a greyhound for</span></span><br><span class="line"><span class="string">coursing. An olla of rather more beef than mutton, a salad on most</span></span><br><span class="line"><span class="string">nights, scraps on Saturdays, lentils on Fridays, and a pigeon or so extra</span></span><br><span class="line"><span class="string">on Sundays, made away with three-quarters of his income.")</span></span><br><span class="line"><span class="string"># =&gt; ["a", "of", "on"]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">top_3_words("e e e e DDD ddd DdD: ddd ddd aa aA Aa, bb cc cC e e e")</span></span><br><span class="line"><span class="string"># =&gt; ["e", "ddd", "aa"]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">top_3_words("  //wont won'</span>t won<span class="string">'t")</span></span><br><span class="line"><span class="string"># =&gt; ["won'</span>t<span class="string">", "</span>wont<span class="string">"]</span></span><br><span class="line"><span class="string">Bonus points (not really, but just for fun):</span></span><br><span class="line"><span class="string">Avoid creating an array whose memory footprint is roughly as big as the input text.</span></span><br><span class="line"><span class="string">Avoid sorting the entire array of unique words.</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">top_3_words</span><span class="params">(text)</span></span></span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"a a a  b  c c  d d d d  e e e e e"</span>), [<span class="string">"e"</span>, <span class="string">"d"</span>, <span class="string">"a"</span>])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"e e e e DDD ddd DdD: ddd ddd aa aA Aa, bb cc cC e e e"</span>), [<span class="string">"e"</span>, <span class="string">"ddd"</span>, <span class="string">"aa"</span>])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"  //wont won't won't "</span>), [<span class="string">"won't"</span>, <span class="string">"wont"</span>])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"  , e   .. "</span>), [<span class="string">"e"</span>])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"  ...  "</span>), [])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"  '  "</span>), [])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">"  '''  "</span>), [])</span><br><span class="line">Test.assert_equals(top_3_words(<span class="string">""</span><span class="string">"In a village of La Mancha, the name of which I have no desire to call to</span></span><br><span class="line"><span class="string">mind, there lived not long since one of those gentlemen that keep a lance</span></span><br><span class="line"><span class="string">in the lance-rack, an old buckler, a lean hack, and a greyhound for</span></span><br><span class="line"><span class="string">coursing. An olla of rather more beef than mutton, a salad on most</span></span><br><span class="line"><span class="string">nights, scraps on Saturdays, lentils on Fridays, and a pigeon or so extra</span></span><br><span class="line"><span class="string">on Sundays, made away with three-quarters of his income."</span><span class="string">""</span>), [<span class="string">"a"</span>, <span class="string">"of"</span>, <span class="string">"on"</span>])</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=zvf6Nv3jlpQ" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/zvf6Nv3jlpQ/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Next bigger number with the same digits</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_bigger</span><span class="params">(n)</span></span></span><br><span class="line">  n.to_s.split(<span class="string">''</span>).permutation(n.to_s.length).map(&amp;<span class="symbol">:join</span>).select&#123; <span class="params">|x|</span> <span class="keyword">return</span> x.to_i <span class="keyword">if</span> x.to_i &gt; n &#125;</span><br><span class="line">  -<span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">next_bigger(<span class="number">1234567980</span>)</span><br><span class="line"><span class="comment">#會有時間複雜度喔</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Most frequently used words in a text</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">top_3_words</span><span class="params">(text)</span></span></span><br><span class="line">  text.scan(<span class="regexp">/[A-Za-z']+/</span>)</span><br><span class="line">      .select&#123; <span class="params">|x|</span> /[A-Za-z]/ =~ x &#125;</span><br><span class="line">      .group_by&#123; <span class="params">|x|</span> x.downcase &#125;</span><br><span class="line">      .sort_by&#123; <span class="params">|k, v|</span> -v.count &#125;</span><br><span class="line">      .first(<span class="number">3</span>)</span><br><span class="line">      .map(&amp;<span class="symbol">:first</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先補上昨天未解完 &lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV4 的答案，&lt;br&gt;
時間複雜度沒有解決，若有更好解法可在下方留言讓我知道喔~~&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day27 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/06/Day27-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/06/Day27-Codewars-刷題/</id>
    <published>2019-10-05T16:00:00.000Z</published>
    <updated>2019-10-08T17:14:52.782Z</updated>
    
    <content type="html"><![CDATA[<p>倒數三天強度不升級下怎行呢<br><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV4<br>打算一氣呵成寫完，結果後面卡住 (暈<br>正確解法明天補上~</p><hr><p><a href="https://www.codewars.com/kata/55983863da40caa2c900004e/train/ruby" target="_blank" rel="noopener">題目(Next bigger number with the same digits)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">You have to create a function that takes a positive integer number <span class="keyword">and</span> returns the <span class="keyword">next</span> bigger number formed by the same <span class="symbol">digits:</span></span><br><span class="line"></span><br><span class="line"><span class="number">12</span> ==&gt; <span class="number">21</span></span><br><span class="line"><span class="number">513</span> ==&gt; <span class="number">531</span></span><br><span class="line"><span class="number">2017</span> ==&gt; <span class="number">2071</span></span><br><span class="line">If no bigger number can be composed using those digits, <span class="keyword">return</span> -<span class="number">1</span><span class="symbol">:</span></span><br><span class="line"></span><br><span class="line"><span class="number">9</span> ==&gt; -<span class="number">1</span></span><br><span class="line"><span class="number">111</span> ==&gt; -<span class="number">1</span></span><br><span class="line"><span class="number">531</span> ==&gt; -<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_bigger</span><span class="params">(n)</span></span></span><br><span class="line">  <span class="comment">#your code here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">12</span>),<span class="number">21</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">513</span>),<span class="number">531</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">2017</span>),<span class="number">2071</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">414</span>),<span class="number">441</span>)</span><br><span class="line">Test.assert_equals(next_bigger(<span class="number">144</span>),<span class="number">414</span>)</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=kkYqoLFGJTE" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/kkYqoLFGJTE/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Next bigger number with the same digits</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_bigger</span><span class="params">(n)</span></span></span><br><span class="line">  n.to_s.split(<span class="string">''</span>).permutation(n.to_s.length).map(&amp;<span class="symbol">:join</span>).select&#123; <span class="params">|x|</span> <span class="keyword">return</span> x.to_i <span class="keyword">if</span> x.to_i &gt; n &#125;</span><br><span class="line">  -<span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">#非正確答案喔!!</span></span><br></pre></td></tr></table></figure></p><p><strong>下集待續..</strong></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;倒數三天強度不升級下怎行呢&lt;br&gt;
&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV4&lt;br&gt;
打算一氣呵成寫完，結果後面卡住 (暈&lt;br&gt;
正確解法明天補上
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>從 Hello World 開始</title>
    <link href="https://riverye.com/2019/10/06/%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B6%B2%E7%AB%99%E4%BA%86!!/"/>
    <id>https://riverye.com/2019/10/06/有自己的網站了!!/</id>
    <published>2019-10-05T16:00:00.000Z</published>
    <updated>2019-10-08T17:17:42.342Z</updated>
    
    <content type="html"><![CDATA[<h1>千呼萬喚使出來</h1><p>終於有自己的網域及部落格了，<br>前陣子卡住後就先擱置著，<br>卡在最後一關的部署，<br>對 Windows 環境真不友善，<br>但辦法是人想出來的，如今順利架設完成 (灑花</p><hr><h2>不管是什麼，都給我來一點</h2><p>這裡以技術文章、學習心得、筆記為主，有自己的部落格後，和用別人的平台，感受是截然不同的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;千呼萬喚使出來&lt;/h1&gt;
&lt;p&gt;終於有自己的網域及部落格了，&lt;br&gt;
前陣子卡住後就先擱置著，&lt;br&gt;
卡在最後一關的部署，&lt;br&gt;
對 Windows 環境真不友善，&lt;br&gt;
但辦法是人想出來的，如今順利架設完成 (灑花&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;不管是什麼，都給我來一
      
    
    </summary>
    
    
      <category term="網頁" scheme="https://riverye.com/categories/%E7%B6%B2%E9%A0%81/"/>
    
    
      <category term="Blog" scheme="https://riverye.com/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Day26 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/05/Day26-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/05/Day26-Codewars-刷題/</id>
    <published>2019-10-04T16:00:00.000Z</published>
    <updated>2019-10-08T17:14:33.180Z</updated>
    
    <content type="html"><![CDATA[<p>延續昨天的題目繼續解 <a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV5 題目，<br>參考網路大大寫法，以自己的方式說明。</p><hr><p><a href="https://www.codewars.com/kata/520b9d2ad5c005041100000f/train/ruby" target="_blank" rel="noopener">題目(Simple Pig Latin)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Move the first letter of each word to the <span class="keyword">end</span> of it, <span class="keyword">then</span> add <span class="string">"ay"</span> to the <span class="keyword">end</span> of the word. Leave punctuation marks untouched.</span><br><span class="line"></span><br><span class="line">Examples</span><br><span class="line">pig_it(<span class="string">'Pig latin is cool'</span>) <span class="comment"># igPay atinlay siay oolcay</span></span><br><span class="line">pig_it(<span class="string">'Hello world !'</span>)     <span class="comment"># elloHay orldway !</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pig_it</span> <span class="title">text</span></span></span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(pig_it(<span class="string">'Pig latin is cool'</span>),<span class="string">'igPay atinlay siay oolcay'</span>)</span><br><span class="line">Test.assert_equals(pig_it(<span class="string">'This is my string'</span>),<span class="string">'hisTay siay ymay tringsay'</span>);</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=Fr-j1zNiDkc" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/Fr-j1zNiDkc/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Simple Pig Latin</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pig_it</span> <span class="title">text</span></span></span><br><span class="line">  text.gsub(<span class="regexp">/(\w)(\w+)*/</span>, <span class="string">'\2\1ay'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">#非正確答案喔!!</span></span><br></pre></td></tr></table></figure></p><p><strong>下集待續..</strong></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;延續昨天的題目繼續解 &lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV5 題目，&lt;br&gt;
參考網路大大寫法，以自己的方式說明。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day25 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/04/Day25-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/04/Day25-Codewars-刷題/</id>
    <published>2019-10-03T16:00:00.000Z</published>
    <updated>2019-10-08T17:14:11.910Z</updated>
    
    <content type="html"><![CDATA[<p>寫 code 前，先讀懂題目是很重要的，<br>前面寫起來挺順的，實際丟 <a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV5 測試時，<br>代誌不是憨人想的那麼簡單，<br>例外訊息沒留意到，卡在後面搞懂問題及下關鍵字找答案，<br>為了不耽誤各位時間，<br>後半段解法明天繼續。</p><hr><p><a href="https://www.codewars.com/kata/520b9d2ad5c005041100000f/train/ruby" target="_blank" rel="noopener">題目(Simple Pig Latin)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Move the first letter of each word to the <span class="keyword">end</span> of it, <span class="keyword">then</span> add <span class="string">"ay"</span> to the <span class="keyword">end</span> of the word. Leave punctuation marks untouched.</span><br><span class="line"></span><br><span class="line">Examples</span><br><span class="line">pig_it(<span class="string">'Pig latin is cool'</span>) <span class="comment"># igPay atinlay siay oolcay</span></span><br><span class="line">pig_it(<span class="string">'Hello world !'</span>)     <span class="comment"># elloHay orldway !</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pig_it</span> <span class="title">text</span></span></span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(pig_it(<span class="string">'Pig latin is cool'</span>),<span class="string">'igPay atinlay siay oolcay'</span>)</span><br><span class="line">Test.assert_equals(pig_it(<span class="string">'This is my string'</span>),<span class="string">'hisTay siay ymay tringsay'</span>);</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=sRCBIYhhYow" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/sRCBIYhhYow/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Simple Pig Latin</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pig_it</span> <span class="title">text</span></span></span><br><span class="line">  text.split.map&#123; <span class="params">|x|</span> x.chars.rotate.insert(-<span class="number">1</span>, <span class="string">"ay"</span>).join &#125;.join<span class="string">' '</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">#非正確答案喔!!</span></span><br></pre></td></tr></table></figure></p><p><strong>下集待續..</strong></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;寫 code 前，先讀懂題目是很重要的，&lt;br&gt;
前面寫起來挺順的，實際丟 &lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV5 測試時，&lt;br&gt;
代誌不是憨人
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day24 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/03/Day24-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/03/Day24-Codewars-刷題/</id>
    <published>2019-10-02T16:00:00.000Z</published>
    <updated>2019-10-08T17:13:58.843Z</updated>
    
    <content type="html"><![CDATA[<p>題目看起來好理解，想下及翻閱 API 後，<br>透過組合技便能完成題目。</p><p><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV6</p><hr><p><a href="https://www.codewars.com/kata/write-number-in-expanded-form/train/ruby" target="_blank" rel="noopener">題目(Write Number in Expanded Form)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Write Number <span class="keyword">in</span> Expanded Form</span><br><span class="line">You will be given a number <span class="keyword">and</span> you will need to <span class="keyword">return</span> it as a string <span class="keyword">in</span> Expanded Form. For <span class="symbol">example:</span></span><br><span class="line"></span><br><span class="line">expanded_form(<span class="number">12</span>); <span class="comment"># Should return '10 + 2'</span></span><br><span class="line">expanded_form(<span class="number">42</span>); <span class="comment"># Should return '40 + 2'</span></span><br><span class="line">expanded_form(<span class="number">70304</span>); <span class="comment"># Should return '70000 + 300 + 4'</span></span><br><span class="line"><span class="symbol">NOTE:</span> All numbers will be whole numbers greater than <span class="number">0</span>.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">expanded_form</span><span class="params">(num)</span></span></span><br><span class="line">  <span class="comment"># Your code here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">it <span class="string">"Example cases"</span> <span class="keyword">do</span></span><br><span class="line">  Test.assert_equals(expanded_form(<span class="number">12</span>), <span class="string">'10 + 2'</span>)</span><br><span class="line">  Test.assert_equals(expanded_form(<span class="number">42</span>), <span class="string">'40 + 2'</span>)</span><br><span class="line">  Test.assert_equals(expanded_form(<span class="number">70304</span>), <span class="string">'70000 + 300 + 4'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=CnN_tSVbUhI" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/CnN_tSVbUhI/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Write Number in Expanded Form</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">expanded_form</span><span class="params">(num)</span></span></span><br><span class="line">  num.to_s</span><br><span class="line">     .reverse</span><br><span class="line">     .chars</span><br><span class="line">     .map.with_index&#123;<span class="params">| x, i |</span> x == <span class="string">'0'</span> ? <span class="literal">nil</span> : x + <span class="string">'0'</span> * i &#125;.compact</span><br><span class="line">     .reverse</span><br><span class="line">     .join<span class="string">' + '</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;題目看起來好理解，想下及翻閱 API 後，&lt;br&gt;
透過組合技便能完成題目。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV6&lt;/p&gt;
&lt;hr
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day23 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/02/Day23-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/02/Day23-Codewars-刷題/</id>
    <published>2019-10-01T16:00:00.000Z</published>
    <updated>2019-10-08T17:13:50.263Z</updated>
    
    <content type="html"><![CDATA[<p>昨天 (正確來說是今天凌晨) 趕專案到 3 點多<br>還能一早錄影鐵人賽覺得活著真好 xd</p><p><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV6</p><hr><p><a href="https://www.codewars.com/kata/camelcase-method/train/ruby" target="_blank" rel="noopener">題目(CamelCase Method)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Write simple .camelCase method (camel_case function <span class="keyword">in</span> PHP, CamelCase <span class="keyword">in</span> C<span class="comment"># or camelCase in Java) for strings. All words must have their first letter capitalized without spaces.</span></span><br><span class="line"></span><br><span class="line">For <span class="symbol">instance:</span></span><br><span class="line"></span><br><span class="line"><span class="string">'hello case'</span>.camelcase =&gt; HelloCase</span><br><span class="line"><span class="string">'camel case word'</span>.camelcase =&gt; CamelCaseWord</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line">  <span class="comment">#your cool code here...</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(<span class="string">'test case'</span>.camelcase, <span class="string">'TestCase'</span>)</span><br><span class="line">Test.assert_equals(<span class="string">'camel case method'</span>.camelcase, <span class="string">'CamelCaseMethod'</span>)</span><br><span class="line">Test.assert_equals(<span class="string">'say hello '</span>.camelcase, <span class="string">'SayHello'</span>)</span><br><span class="line">Test.assert_equals(<span class="string">' camel case word'</span>.camelcase, <span class="string">'CamelCaseWord'</span>)</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=9bTBJF7rH7s" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/9bTBJF7rH7s/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CamelCase Method</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">camelcase</span></span></span><br><span class="line">    <span class="keyword">self</span>.split.map&#123; <span class="params">|x|</span> x.capitalize &#125;.join</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天 (正確來說是今天凌晨) 趕專案到 3 點多&lt;br&gt;
還能一早錄影鐵人賽覺得活著真好 xd&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day22 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/10/01/Day22-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/10/01/Day22-Codewars-刷題/</id>
    <published>2019-09-30T16:00:00.000Z</published>
    <updated>2019-10-08T17:13:36.121Z</updated>
    
    <content type="html"><![CDATA[<p>出門前刷一波<br>讓自己不用一直惦記著鐵人賽還沒寫 xd</p><p><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV8x1、LV7x1</p><hr><p><a href="https://www.codewars.com/kata/convert-number-to-reversed-array-of-digits/train/ruby" target="_blank" rel="noopener">題目(Convert number to reversed array of digits)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Convert number to reversed array of digits</span><br><span class="line">Given a random <span class="symbol">number:</span></span><br><span class="line"></span><br><span class="line">C<span class="comment">#: long;</span></span><br><span class="line">C++: unsigned long;</span><br><span class="line">You have to <span class="keyword">return</span> the digits of this number within an array <span class="keyword">in</span> reverse order.</span><br><span class="line"></span><br><span class="line"><span class="symbol">Example:</span></span><br><span class="line"><span class="number">348597</span> =&gt; [<span class="number">7</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">digitize</span><span class="params">(n)</span></span></span><br><span class="line">  <span class="comment">#your code here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(digitize(<span class="number">35231</span>),[<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>])</span><br></pre></td></tr></table></figure></p><p><a href="https://www.codewars.com/kata/highest-and-lowest/train/ruby" target="_blank" rel="noopener">題目(Highest and Lowest)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">In this little assignment you are given a string of space separated numbers, <span class="keyword">and</span> have to <span class="keyword">return</span> the highest <span class="keyword">and</span> lowest number.</span><br><span class="line"></span><br><span class="line"><span class="symbol">Example:</span></span><br><span class="line"></span><br><span class="line">high_and_low(<span class="string">"1 2 3 4 5"</span>)  <span class="comment"># return "5 1"</span></span><br><span class="line">high_and_low(<span class="string">"1 2 -3 4 5"</span>) <span class="comment"># return "5 -3"</span></span><br><span class="line">high_and_low(<span class="string">"1 9 3 4 -5"</span>) <span class="comment"># return "9 -5"</span></span><br><span class="line"><span class="symbol">Notes:</span></span><br><span class="line"></span><br><span class="line">All numbers are valid Int32, no need to validate them.</span><br><span class="line">There will always be at least one number <span class="keyword">in</span> the input string.</span><br><span class="line">Output string must be two numbers separated by a single space, <span class="keyword">and</span> highest number is first.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">high_and_low</span><span class="params">(numbers)</span></span></span><br><span class="line">  <span class="comment">#your code here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(high_and_low(<span class="string">"4 5 29 54 4 0 -214 542 -64 1 -3 6 -6"</span>), <span class="string">"542 -214"</span>)</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=blHTszPwWrY" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/blHTszPwWrY/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Convert number to reversed array of digits</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">digitize</span><span class="params">(n)</span></span></span><br><span class="line">  n.to_s.chars.map&#123;<span class="params">|x|</span> x.to_i&#125;.reverse</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Highest and Lowest</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">high_and_low</span><span class="params">(numbers)</span></span></span><br><span class="line">  max = numbers.split.map&#123;<span class="params">|x|</span> x.to_i&#125;.max</span><br><span class="line">  min = numbers.split.map&#123;<span class="params">|x|</span> x.to_i&#125;.min</span><br><span class="line">  <span class="string">"<span class="subst">#&#123;max&#125;</span> <span class="subst">#&#123;min&#125;</span>"</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;出門前刷一波&lt;br&gt;
讓自己不用一直惦記著鐵人賽還沒寫 xd&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV8x1、LV7x1&lt;/p&gt;
&lt;hr
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day21 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/09/30/Day21-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/09/30/Day21-Codewars-刷題/</id>
    <published>2019-09-29T16:00:00.000Z</published>
    <updated>2019-10-08T17:13:17.793Z</updated>
    
    <content type="html"><![CDATA[<p>假日來塊蛋糕<br>複習下二進制及 Ruby 內建好用方法</p><p><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV7</p><hr><p><a href="https://www.codewars.com/kata/binary-addition/train/ruby" target="_blank" rel="noopener">題目(Binary Addition)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Implement a function that adds two numbers together <span class="keyword">and</span> returns their sum <span class="keyword">in</span> binary. The conversion can be done before, <span class="keyword">or</span> after the addition.</span><br><span class="line"></span><br><span class="line">The binary number returned should be a string.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_binary</span><span class="params">(a,b)</span></span></span><br><span class="line">  <span class="comment">#your code here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(add_binary(<span class="number">1</span>,<span class="number">1</span>),<span class="string">"10"</span>)</span><br><span class="line">Test.assert_equals(add_binary(<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1"</span>)</span><br><span class="line">Test.assert_equals(add_binary(<span class="number">1</span>,<span class="number">0</span>),<span class="string">"1"</span>)</span><br><span class="line">Test.assert_equals(add_binary(<span class="number">2</span>,<span class="number">2</span>),<span class="string">"100"</span>)</span><br><span class="line">Test.assert_equals(add_binary(<span class="number">51</span>,<span class="number">12</span>),<span class="string">"111111"</span>)</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=wdTs0vwfF6g" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/wdTs0vwfF6g/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Binary Addition</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_binary</span><span class="params">(a,b)</span></span></span><br><span class="line">  (a + b).to_s(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;假日來塊蛋糕&lt;br&gt;
複習下二進制及 Ruby 內建好用方法&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV7&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day20 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/09/29/Day20-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/09/29/Day20-Codewars-刷題/</id>
    <published>2019-09-28T16:00:00.000Z</published>
    <updated>2019-10-08T17:16:39.594Z</updated>
    
    <content type="html"><![CDATA[<p>2/3 過去了，發了 20 篇廢文<br>再 10 天就結束了，同時也是最忙的階段<br>一起把鐵人賽完賽吧!!</p><p><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV8</p><hr><p><a href="https://www.codewars.com/kata/fake-binary/train/ruby" target="_blank" rel="noopener">題目(Fake Binary)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Given a string of digits, you should replace any digit below <span class="number">5</span> with <span class="string">'0'</span> <span class="keyword">and</span> any digit <span class="number">5</span> <span class="keyword">and</span> above with <span class="string">'1'</span>. Return the resulting string.</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fake_bin</span><span class="params">(s)</span></span></span><br><span class="line">  <span class="comment"># Insert you code here...</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">describe <span class="string">"Basic test"</span> <span class="keyword">do</span></span><br><span class="line">  it <span class="string">"should test for something"</span> <span class="keyword">do</span></span><br><span class="line">    Test.assert_equals(fake_bin(<span class="string">'45385593107843568'</span>), <span class="string">'01011110001100111'</span>);</span><br><span class="line">    Test.assert_equals(fake_bin(<span class="string">'509321967506747'</span>), <span class="string">'101000111101101'</span>);</span><br><span class="line">    Test.assert_equals(fake_bin(<span class="string">'366058562030849490134388085'</span>), <span class="string">'011011110000101010000011011'</span>);</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=6JAHce9uql0" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/6JAHce9uql0/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fake Binary</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fake_bin</span><span class="params">(s)</span></span></span><br><span class="line">  <span class="comment"># 方法1</span></span><br><span class="line">  s.tr(<span class="string">'123456789'</span>, <span class="string">'000011111'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 方法2</span></span><br><span class="line">  s.chars.map&#123; <span class="params">|i|</span> i.to_i &lt; <span class="number">5</span> ? <span class="number">0</span> : <span class="number">1</span>&#125;.join</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 方法3</span></span><br><span class="line">  s.gsub(<span class="regexp">/[1234]/</span>, <span class="string">'0'</span>).gsub(<span class="regexp">/[56789]/</span>, <span class="string">'1'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2/3 過去了，發了 20 篇廢文&lt;br&gt;
再 10 天就結束了，同時也是最忙的階段&lt;br&gt;
一起把鐵人賽完賽吧!!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Code
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day19 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/09/28/Day19-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/09/28/Day19-Codewars-刷題/</id>
    <published>2019-09-27T16:00:00.000Z</published>
    <updated>2019-10-08T17:16:39.594Z</updated>
    
    <content type="html"><![CDATA[<p>即便是假日也閒不下來<br>不停地學習及做專案<br>再忙也要擠出一點時間鐵人賽一下</p><p><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV7</p><hr><p><a href="https://www.codewars.com/kata/century-from-year/train/ruby" target="_blank" rel="noopener">題目(Century From Year)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Usually <span class="keyword">when</span> you buy something, you<span class="string">'re asked whether your credit card number, phone number or answer to your most secret question is still correct. However, since someone could look over your shoulder, you don'</span>t want that shown on your screen. Instead, we mask it.</span><br><span class="line"></span><br><span class="line">Your task is to write a function maskify, which changes all but the last four characters into <span class="string">'#'</span>.</span><br><span class="line"></span><br><span class="line">Examples</span><br><span class="line">maskify(<span class="string">'4556364607935616'</span>) <span class="comment"># should return '############5616'</span></span><br><span class="line">maskify(<span class="string">'64607935616'</span>)      <span class="comment"># should return '#######5616'</span></span><br><span class="line">maskify(<span class="string">'1'</span>)                <span class="comment"># should return '1'</span></span><br><span class="line">maskify(<span class="string">''</span>)                 <span class="comment"># should return ''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># "What was the name of your first pet?"</span></span><br><span class="line">maskify(<span class="string">'Skippy'</span>)                                   <span class="comment"># should return '##ippy'</span></span><br><span class="line">maskify(<span class="string">'Nananananananananananananananana Batman!'</span>) <span class="comment"># should return '####################################man!'</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maskify</span><span class="params">(cc)</span></span></span><br><span class="line">  <span class="comment"># your beautiful code goes here</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Test.assert_equals(maskify(<span class="string">'4556364607935616'</span>), <span class="string">'############5616'</span>)</span><br><span class="line">Test.assert_equals(maskify(<span class="string">'1'</span>), <span class="string">'1'</span>)</span><br><span class="line">Test.assert_equals(maskify(<span class="string">'11111'</span>), <span class="string">'#1111'</span>)</span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=wG9BX_f8iVU" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/wG9BX_f8iVU/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Credit Card Mask</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maskify</span><span class="params">(cc)</span></span></span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line"><span class="keyword">return</span> cc <span class="keyword">if</span> cc.length &lt;= <span class="number">4</span></span><br><span class="line"><span class="string">'#'</span> * (cc.length - <span class="number">4</span>) + cc[-<span class="number">4</span>..-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">cc.gsub(<span class="regexp">/.(?=....)/</span>, <span class="string">'#'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;即便是假日也閒不下來&lt;br&gt;
不停地學習及做專案&lt;br&gt;
再忙也要擠出一點時間鐵人賽一下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Codewars&lt;/a&gt; LV7&lt;/
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day18 - Codewars 刷題</title>
    <link href="https://riverye.com/2019/09/27/Day18-Codewars-%E5%88%B7%E9%A1%8C/"/>
    <id>https://riverye.com/2019/09/27/Day18-Codewars-刷題/</id>
    <published>2019-09-26T16:00:00.000Z</published>
    <updated>2019-10-08T17:16:39.594Z</updated>
    
    <content type="html"><![CDATA[<p>今天整個忙翻<br>擠出時間刷一題簡單的題目<br>示範如果對 Ruby 不熟時<br>可以如何下關鍵字、測試方法是否正確<br><a href="https://www.codewars.com/" target="_blank" rel="noopener">Codewars</a> LV8 小品一下</p><hr><p><a href="https://www.codewars.com/kata/century-from-year/train/ruby" target="_blank" rel="noopener">題目(Century From Year)</a>：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Introduction</span><br><span class="line">The first century spans from the year <span class="number">1</span> up to <span class="keyword">and</span> including the year <span class="number">100</span>, The second - from the year <span class="number">101</span> up to <span class="keyword">and</span> including the year <span class="number">200</span>, etc.</span><br><span class="line"></span><br><span class="line">Task <span class="symbol">:</span></span><br><span class="line">Given a year, <span class="keyword">return</span> the century it is <span class="keyword">in</span>.</span><br><span class="line"></span><br><span class="line">Input , Output Examples <span class="symbol">:</span><span class="symbol">:</span></span><br><span class="line">centuryFromYear(<span class="number">1705</span>)  returns (<span class="number">18</span>)</span><br><span class="line">centuryFromYear(<span class="number">1900</span>)  returns (<span class="number">19</span>)</span><br><span class="line">centuryFromYear(<span class="number">1601</span>)  returns (<span class="number">17</span>)</span><br><span class="line">centuryFromYear(<span class="number">2000</span>)  returns (<span class="number">20</span>)</span><br><span class="line">Hope you enjoy it .. Awaiting <span class="keyword">for</span> Best Practice Codes</span><br><span class="line"></span><br><span class="line">Enjoy Learning !!!</span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">century</span><span class="params">(year)</span></span></span><br><span class="line">  <span class="comment"># Your solution goes here, warrior</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">describe <span class="string">"Solution"</span> <span class="keyword">do</span></span><br><span class="line">  it <span class="string">"should return the proper century for each year"</span> <span class="keyword">do</span></span><br><span class="line">    Test.assert_equals(century(<span class="number">1705</span>), <span class="number">18</span>, <span class="string">'Testing for year 1705'</span>);</span><br><span class="line">    Test.assert_equals(century(<span class="number">1900</span>), <span class="number">19</span>, <span class="string">'Testing for year 1900'</span>);</span><br><span class="line">    Test.assert_equals(century(<span class="number">1601</span>), <span class="number">17</span>, <span class="string">'Testing for year 1601'</span>);</span><br><span class="line">    Test.assert_equals(century(<span class="number">2000</span>), <span class="number">20</span>, <span class="string">'Testing for year 2000'</span>);</span><br><span class="line">    Test.assert_equals(century(<span class="number">89</span>), <span class="number">1</span>, <span class="string">'Testing for year 89'</span>);</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><hr><p>影片解題：<a href="https://www.youtube.com/watch?v=h6iBLN2biJk" target="_blank" rel="noopener"><img src="https://img.youtube.com/vi/h6iBLN2biJk/0.jpg" alt="Yes"></a></p><hr><p>答案：</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Century From Year</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">century</span><span class="params">(year)</span></span></span><br><span class="line">  year.ceil(-<span class="number">2</span>)/<span class="number">100</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>本文同步發布於 <a href="https://riverye.com/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天整個忙翻&lt;br&gt;
擠出時間刷一題簡單的題目&lt;br&gt;
示範如果對 Ruby 不熟時&lt;br&gt;
可以如何下關鍵字、測試方法是否正確&lt;br&gt;
&lt;a href=&quot;https://www.codewars.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="11th鐵人賽" scheme="https://riverye.com/tags/11th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
</feed>
