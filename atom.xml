<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://riverye.com/"/>
  <updated>2021-09-30T15:44:14.057Z</updated>
  <id>https://riverye.com/</id>
  
  <author>
    <name>River-Ye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Day28 - 如何埋 GA (Google Analytics)</title>
    <link href="https://riverye.com/2021/10/11/Day28-%E5%A6%82%E4%BD%95%E5%9F%8B-GA-Google-Analytics/"/>
    <id>https://riverye.com/2021/10/11/Day28-如何埋-GA-Google-Analytics/</id>
    <published>2021-10-10T16:00:00.000Z</published>
    <updated>2021-09-30T15:44:14.057Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p><a href="https://ithelp.ithome.com.tw/articles/10274871" target="_blank" rel="noopener">前篇教學</a>已經能讓 Google 搜尋到網站，接下來若想做流量分析的話，需要埋 <a href="https://analytics.google.com/analytics/" target="_blank" rel="noopener">Google Analytics</a> (簡稱: GA)</p><h2><span id="如何使用">如何使用</span></h2><p>首先要有 Google 帳號，接著到這裡<a href="https://analytics.google.com/analytics/web/?authuser=0#provision/SignUp/" target="_blank" rel="noopener">註冊 Google Analytics</a>，照著網頁提示註冊即可</p><p><img src="https://i.imgur.com/sMLU5ab.png" alt></p><h3><span id="註冊完-ga-後點選網站">註冊完 GA 後，點選「網站」</span></h3><p><img src="https://i.imgur.com/ldU3Eyz.png" alt></p><h3><span id="網站網址-串流名稱要填寫">網站網址、串流名稱，要填寫</span></h3><p><img src="https://i.imgur.com/fhDTNYX.png" alt></p><h3><span id="這邊以全域網站代碼為例">這邊以「全域網站代碼」為例</span></h3><p>Google 會提供一組 HTML HEAD，貼到自己專案中的 HTML HEAD 中，並部署</p><p><img src="https://i.imgur.com/5rX52XW.png" alt></p><h3><span id="檢查自己專案是否有埋成功">檢查自己專案是否有埋成功</span></h3><p>可透過開發者工具 (快捷鍵 F12)，並搜尋 <code>GoogleAnalyticsObject</code> ，看是否有找到對應的 code</p><p><img src="https://i.imgur.com/2trPhLC.jpg" alt></p><h3><span id="回到-ga-檢查是否有流量">回到 GA 檢查是否有流量</span></h3><p>上個步驟檢查有的話，理論上就大功告成了</p><p><img src="https://i.imgur.com/YfPhJQ1.png" alt></p><h2><span id="小結">小結</span></h2><p>對行銷人來說，這是非常基本的事情，但對於初次接觸且不熟行銷的人來說，會需要稍微了解下</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10275551" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10275551</a><br>medium 文章連結：<a href="https://link.medium.com/c5HrqkbCYjb" target="_blank" rel="noopener">https://link.medium.com/c5HrqkbCYjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/11/Day28-%E5%A6%82%E4%BD%95%E5%9F%8B-GA-Google-Analytics/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10274871&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;前篇教學&lt;/a&gt;已經能讓 Goo
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day27 - 如何讓 Google 搜尋到你的網站</title>
    <link href="https://riverye.com/2021/10/10/Day27-%E5%A6%82%E4%BD%95%E8%AE%93-Google-%E6%90%9C%E5%B0%8B%E5%88%B0%E4%BD%A0%E7%9A%84%E7%B6%B2%E7%AB%99/"/>
    <id>https://riverye.com/2021/10/10/Day27-如何讓-Google-搜尋到你的網站/</id>
    <published>2021-10-09T16:00:00.000Z</published>
    <updated>2021-09-29T15:18:39.937Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>網站上線後，希望給更多人能找到的話，通常會用 <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">Google Search Console</a>，讓自己的網站可以被 Google 搜尋的到</p><p>note: 已經會設定的人，可以左轉離開了~</p><h2><span id="如何使用">如何使用</span></h2><p>到 <a href="https://search.google.com/search-console/about" target="_blank" rel="noopener">https://search.google.com/search-console/about</a> ，Google 很貼心提供中文介面，基本上就是照著步驟做，網站下方也有提供教學影片</p><p><img src="https://i.imgur.com/RpyQpgS.png" alt></p><h3><span id="可以選擇輸入網域或網址前置字元以下兩種驗證方式會不同會各別示範">可以選擇輸入「網域」或「網址前置字元」，以下兩種驗證方式會不同，會各別示範</span></h3><p><img src="https://i.imgur.com/LHMz0BC.png" alt></p><h3><span id="網址前置字元提供以下幾種驗證">「網址前置字元」提供以下幾種驗證</span></h3><ol><li>HTML 檔案 (建議用這個)</li><li>HTML 標記</li><li>Google Analytics (分析)</li><li>Google 代碼管理工具</li><li>網域名稱供應商</li></ol><p>Google 會提供 HTML 檔案，跟著放到專案(部落格)中，一起部署後，就能在回到這頁做驗證了</p><p>note: 驗證成功後，也不能移除喔~</p><p><img src="https://i.imgur.com/tYV9oet.png" alt></p><h3><span id="網域驗證">「網域」驗證</span></h3><p>我自己是在 <a href="https://www.gandi.net/" target="_blank" rel="noopener">Gandi.net</a> 買網域的</p><p>直接輸入網域後，會跳出如下視窗，接著進行第三方驗證即可</p><p><img src="https://i.imgur.com/7UKU3rc.png" alt></p><h3><span id="網域驗證完成畫面如下">「網域」驗證完成畫面如下</span></h3><p><img src="https://i.imgur.com/bovQvOo.png" alt></p><h3><span id="接著等待-google-資料處理約一天時間通常會更快">接著等待 Google 資料處理，約一天時間(通常會更快)</span></h3><p>一天後再來看，就能知道是否設定成功了<br><img src="https://i.imgur.com/KXiW8qD.png" alt></p><h3><span id="可用之後的畫面">可用之後的畫面</span></h3><p><img src="https://i.imgur.com/Gp3tfz4.png" alt></p><h2><span id="小結">小結</span></h2><p>這篇是定位在完全不知道如何讓自己網站被 Google 搜尋到的小白看的，被搜尋到只是剛起步，後續如何導流量、SEO、使用者體驗...等，可在自行研究或請益身邊的行銷好友們~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10274871" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10274871</a><br>medium 文章連結：<a href="https://link.medium.com/LgXnsCqVWjb" target="_blank" rel="noopener">https://link.medium.com/LgXnsCqVWjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/10/Day27-%E5%A6%82%E4%BD%95%E8%AE%93-Google-%E6%90%9C%E5%B0%8B%E5%88%B0%E4%BD%A0%E7%9A%84%E7%B6%B2%E7%AB%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;網站上線後，希望給更多人能找到的話，通常會用 &lt;a href=&quot;https://search.google.com/search-console/about&quot; target=&quot;_blank&quot; rel=&quot;noo
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day26 - 用 Ruby on Rails 寫分析股票的技術指標</title>
    <link href="https://riverye.com/2021/10/09/Day26-%E7%94%A8-Ruby-on-Rails-%E5%AF%AB%E5%88%86%E6%9E%90%E8%82%A1%E7%A5%A8%E7%9A%84%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/"/>
    <id>https://riverye.com/2021/10/09/Day26-用-Ruby-on-Rails-寫分析股票的技術指標/</id>
    <published>2021-10-08T16:00:00.000Z</published>
    <updated>2021-09-27T13:46:21.599Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在做選股之前，可透過技術指標來分析，像是可以用 KD、均線、量價...等</p><h2><span id="說明">說明</span></h2><p>這邊要申明下，這邊是以技術交流為主，不會有任何投資建議，當自己寫了一套選股策略後，除了要做回測外，要知道沒有 100% 勝率且永遠有效的方法，如果有，請私訊讓我知道 xDD</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/stock.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stock</span> &lt; ApplicationRecord</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">specify_date</span><span class="params">(date)</span></span></span><br><span class="line">    daily_quotes.find_by(<span class="symbol">transaction_date:</span> date.to_date)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">simple_moving_average</span><span class="params">(code, number)</span></span></span><br><span class="line">    stock = <span class="keyword">self</span>.find_by!(<span class="symbol">code:</span> code)</span><br><span class="line">    stock.simple_moving_average(number)</span><br><span class="line">  <span class="keyword">rescue</span> ActiveRecord::RecordNotFound =&gt; e</span><br><span class="line">    puts <span class="string">"無此股票代號: <span class="subst">#&#123;code&#125;</span>"</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">simple_moving_average</span><span class="params">(number)</span></span></span><br><span class="line">    result = daily_quotes.order(<span class="string">"transaction_date DESC"</span>).limit(number).select(<span class="symbol">:closing_price</span>)</span><br><span class="line">    <span class="keyword">if</span> result.size == number</span><br><span class="line">      (result.sum(&amp;<span class="symbol">:closing_price</span>) / number).round(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="number">0</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，成交量前幾名的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">top_ranks_trade_volume</span><span class="params">(number, date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    <span class="keyword">self</span>.latest_transaction_date(date)</span><br><span class="line">        .order(<span class="string">"daily_quotes.trade_volume DESC"</span>)</span><br><span class="line">        .limit(number)</span><br><span class="line">        .select(<span class="symbol">:name</span>, <span class="symbol">:code</span>, <span class="string">"daily_quotes.trade_volume"</span>)</span><br><span class="line">        .map &#123; <span class="params">|stock|</span> &#123; <span class="string">"股票名稱"</span> =&gt; stock.name, <span class="string">"股票代號"</span> =&gt; stock.code, <span class="string">"成交量(張)"</span> =&gt; stock.trade_volume / <span class="number">1000</span> &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，成交量破XXXX張的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">volume_broke_lot</span><span class="params">(number, date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    <span class="keyword">self</span>.latest_transaction_date(date)</span><br><span class="line">        .where(<span class="string">"daily_quotes.trade_volume &gt; ?"</span>, number * <span class="number">1000</span>)</span><br><span class="line">        .order(<span class="string">"daily_quotes.trade_volume DESC"</span>)</span><br><span class="line">        .select(<span class="symbol">:name</span>, <span class="symbol">:code</span>, <span class="string">"daily_quotes.trade_volume"</span>)</span><br><span class="line">        .map &#123; <span class="params">|stock|</span> &#123; <span class="string">"股票名稱"</span> =&gt; stock.name, <span class="string">"股票代號"</span> =&gt; stock.code, <span class="string">"成交量(張)"</span> =&gt; stock.trade_volume / <span class="number">1000</span> &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，漲停的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_limit_up_stocks</span><span class="params">(date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    latest_transaction_date = find_latest_transaction_dates(<span class="number">2</span>, date)</span><br><span class="line">    candidate_stocks = find_ups_and_downs(latest_transaction_date)</span><br><span class="line">    candidate_stocks.select <span class="keyword">do</span> <span class="params">|key, values|</span></span><br><span class="line">      latest_info = <span class="literal">nil</span></span><br><span class="line">      yesterday_info = <span class="literal">nil</span></span><br><span class="line">      values.each <span class="keyword">do</span> <span class="params">|value|</span></span><br><span class="line">        <span class="keyword">if</span> value.transaction_date == latest_transaction_date[<span class="number">0</span>]</span><br><span class="line">          latest_info = value</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          yesterday_info = value</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">next</span> <span class="keyword">if</span> latest_info.ups_and_downs != <span class="string">"+"</span> <span class="params">||</span> latest_info.closing_price != latest_info.highest_price</span><br><span class="line"></span><br><span class="line">      latest_info.closing_price &gt;= yesterday_info.closing_price * <span class="number">1.095</span></span><br><span class="line">    <span class="keyword">end</span>.keys</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出指定日期，跌停的股票</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_limit_down_stocks</span><span class="params">(date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    latest_transaction_date = find_latest_transaction_dates(<span class="number">2</span>, date)</span><br><span class="line">    candidate_stocks = find_ups_and_downs(latest_transaction_date)</span><br><span class="line">    candidate_stocks.select <span class="keyword">do</span> <span class="params">|key, values|</span></span><br><span class="line">      latest_info = <span class="literal">nil</span></span><br><span class="line">      yesterday_info = <span class="literal">nil</span></span><br><span class="line">      values.each <span class="keyword">do</span> <span class="params">|value|</span></span><br><span class="line">        <span class="keyword">if</span> value.transaction_date == latest_transaction_date[<span class="number">0</span>]</span><br><span class="line">          latest_info = value</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          yesterday_info = value</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">next</span> <span class="keyword">if</span> latest_info.ups_and_downs != <span class="string">"-"</span> <span class="params">||</span> latest_info.closing_price != latest_info.lowest_price</span><br><span class="line"></span><br><span class="line">      latest_info.closing_price &lt;= yesterday_info.closing_price / <span class="number">1.095</span></span><br><span class="line">    <span class="keyword">end</span>.keys</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  private</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 找出最新 X 天的交易日期</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_latest_transaction_dates</span><span class="params">(number, date = <span class="literal">nil</span>)</span></span></span><br><span class="line">    <span class="keyword">if</span> date</span><br><span class="line">      DailyQuote.where(<span class="string">"transaction_date &lt;= ?"</span>, date.to_date)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      DailyQuote</span><br><span class="line">    <span class="keyword">end</span>.select(<span class="symbol">:transaction_date</span>).order(<span class="string">"transaction_date DESC"</span>).distinct.limit(number).pluck(<span class="symbol">:transaction_date</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">find_ups_and_downs</span><span class="params">(latest_transaction_date)</span></span></span><br><span class="line">    <span class="keyword">self</span>.joins(<span class="symbol">:daily_quotes</span>)</span><br><span class="line">        .where(<span class="symbol">daily_quotes:</span> &#123; <span class="symbol">transaction_date:</span> latest_transaction_date[-<span class="number">1</span>]..latest_transaction_date[<span class="number">0</span>] &#125;)</span><br><span class="line">        .order(<span class="string">"daily_quotes.trade_volume DESC"</span>)</span><br><span class="line">        .select(<span class="symbol">:code</span>, <span class="symbol">:name</span>,</span><br><span class="line">                <span class="string">"daily_quotes.transaction_date"</span>, <span class="string">"daily_quotes.opening_price"</span>, <span class="string">"daily_quotes.closing_price"</span>,</span><br><span class="line">                <span class="string">"daily_quotes.highest_price"</span>, <span class="string">"daily_quotes.lowest_price"</span>, <span class="string">"daily_quotes.ups_and_downs"</span>,</span><br><span class="line">               )</span><br><span class="line">        .group_by &#123; <span class="params">|stock|</span> &#123; <span class="string">"股票名稱"</span> =&gt; stock.name, <span class="string">"股票代號"</span> =&gt; stock.code &#125; &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="實際執行畫面">實際執行畫面</span></h2><p><img src="https://i.imgur.com/8FSCAhq.png" alt></p><h2><span id="小結">小結</span></h2><p>每當寫完一個技術指標後，如何驗證自己寫的是否正確呢?</p><p>我的做法是去用其他平台，然後看結果是否與我一樣 XD</p><p>有更好的方法或發現有寫錯的地方，歡迎和我說喔</p><p>與「臺灣證券交易所」有關的系列文，這邊告一段落了，後面還有 4 篇鐵人賽文章要寫 (掩面哭，怎還沒結束 QAQ)</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10273425" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10273425</a><br>medium 文章連結：<a href="https://link.medium.com/G7zXw5NuTjb" target="_blank" rel="noopener">https://link.medium.com/G7zXw5NuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/09/Day26-%E7%94%A8-Ruby-on-Rails-%E5%AF%AB%E5%88%86%E6%9E%90%E8%82%A1%E7%A5%A8%E7%9A%84%E6%8A%80%E8%A1%93%E6%8C%87%E6%A8%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在做選股之前，可透過技術指標來分析，像是可以用 KD、均線、量價...等&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這邊要申明下，這邊是以技術交流為主，不會有任何投資建議
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day25 - 透過 Rake 自動下載處理臺灣證券交易所的資料</title>
    <link href="https://riverye.com/2021/10/08/Day25-%E9%80%8F%E9%81%8E-Rake-%E8%87%AA%E5%8B%95%E4%B8%8B%E8%BC%89%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E8%B3%87%E6%96%99/"/>
    <id>https://riverye.com/2021/10/08/Day25-透過-Rake-自動下載處理臺灣證券交易所的資料/</id>
    <published>2021-10-07T16:00:00.000Z</published>
    <updated>2021-09-27T13:46:04.272Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>已經能從「臺灣證券交易所」抓資料、存入 DB，接下來要做自動化處理</p><h2><span id="說明">說明</span></h2><p>由於我電腦沒有 24 小時開著，加上專案也不會一直開著，需要時才會手動下 Rake 執行，因此沒有寫在 schedule，這部分可因需求，自行調整，這邊以 Rake 為例</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lib/tasks/twse.rake</span></span><br><span class="line"></span><br><span class="line">namespace <span class="symbol">:twse</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"auto execute all"</span></span><br><span class="line">  task <span class="symbol">auto:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Rake::Task[<span class="string">"twse:download_all"</span>].invoke</span><br><span class="line">    Rake::Task[<span class="string">"twse:save_all"</span>].invoke</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"download twse ALLBUT0999、TWT49U data"</span></span><br><span class="line">  task <span class="symbol">download_all:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Rake::Task[<span class="string">"twse:download_file"</span>].invoke</span><br><span class="line">    Rake::Task[<span class="string">"twse:download_dr_file"</span>].invoke</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"download twse ALLBUT0999 每日收盤行情(全部(不含權證、牛熊證、可展延牛熊證)) data"</span></span><br><span class="line">  task <span class="symbol">download_file:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Allbut0999::Download.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"download twse TWT49U 除權除息計算結果表 data"</span></span><br><span class="line">  task <span class="symbol">download_dr_file:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Twt49u::Download.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"ALLBUT0999、TWT49U CVS save to database"</span></span><br><span class="line">  task <span class="symbol">save_all:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Rake::Task[<span class="string">"twse:save_dr_to_db"</span>].invoke</span><br><span class="line">    Rake::Task[<span class="string">"twse:save_to_db"</span>].invoke</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"ALLBUT0999 CVS save to database"</span></span><br><span class="line">  task <span class="symbol">save_to_db:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Allbut0999::SaveToDb.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  desc <span class="string">"TWT49U CVS save to database"</span></span><br><span class="line">  task <span class="symbol">save_dr_to_db:</span> <span class="symbol">:environment</span> <span class="keyword">do</span></span><br><span class="line">    Twse::Twt49u::SaveToDb.new.execute</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>在 Terminal 輸入</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rake twse:auto</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"></span><br><span class="line">bundle <span class="built_in">exec</span> rake twse:auto</span><br></pre></td></tr></table></figure></p><h2><span id="實際執行畫面">實際執行畫面</span></h2><p><img src="https://i.imgur.com/g9jp0O0.png" alt></p><h2><span id="小結">小結</span></h2><p>現在只需要手動下一行 code 就會自動下載、存入 DB、上傳到 GitHub，非常的方便</p><p>工程師的特性，發現要做重複的事情時，會想辦法做成自動化處理~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10273391" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10273391</a><br>medium 文章連結：<a href="https://link.medium.com/wzKY4dNuTjb" target="_blank" rel="noopener">https://link.medium.com/wzKY4dNuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/08/Day25-%E9%80%8F%E9%81%8E-Rake-%E8%87%AA%E5%8B%95%E4%B8%8B%E8%BC%89%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E8%B3%87%E6%96%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;已經能從「臺灣證券交易所」抓資料、存入 DB，接下來要做自動化處理&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;由於我電腦沒有 24 小時開著，加上專案也不會一直開著，需要
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day24 - 將臺灣證券交易所的除權除息計算結果表存入 DB</title>
    <link href="https://riverye.com/2021/10/07/Day24-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8%E5%AD%98%E5%85%A5-DB/"/>
    <id>https://riverye.com/2021/10/07/Day24-將臺灣證券交易所的除權除息計算結果表存入-DB/</id>
    <published>2021-10-06T16:00:00.000Z</published>
    <updated>2021-09-27T13:45:51.674Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>前面已經知道如何抓「臺灣證券交易所」的除權除息計算結果表 CSV 檔，接下來要處理資料，並存入 DB</p><h2><span id="說明">說明</span></h2><p>需要考量的情境，與<a href="https://ithelp.ithome.com.tw/articles/10272899" target="_blank" rel="noopener">前一篇</a>是一樣的 (描述越來越精簡 XD)</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/twt_49u/save_to_db.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Twt49u</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">SaveToDb</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      start_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;start_time.to_s&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">      latest_data_date = find_latest_data_date</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> latest_data_date == start_time.to_date</span><br><span class="line"></span><br><span class="line">      is_linux = <span class="string">`uname -a`</span>[<span class="regexp">/Linux/</span>].present?</span><br><span class="line">      file_paths = Dir[<span class="string">"data/twse/TWT49U/*"</span>]</span><br><span class="line">      file_paths.each <span class="keyword">do</span> <span class="params">|file_path|</span></span><br><span class="line">        rows = decode_data(file_path, is_linux)</span><br><span class="line">        first_year, end_year = time_range(rows)</span><br><span class="line">        row_index, end_index = rows_range(rows)</span><br><span class="line">        all_rows, data_date_infos = filter_rows(rows, row_index, end_index)</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> not_process?(data_date_infos, latest_data_date)</span><br><span class="line"></span><br><span class="line">        filtered_stocks = filter_by_stocks(all_rows)</span><br><span class="line">        Stock.import(filtered_stocks) <span class="keyword">if</span> filtered_stocks.present?</span><br><span class="line"></span><br><span class="line">        import_ex_stocks(all_rows)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - start_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_data_date</span></span></span><br><span class="line">      ExStock.latest_data_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">time_range</span><span class="params">(rows)</span></span></span><br><span class="line">      first_year, first_month, first_day, end_year, end_month, end_day = rows[<span class="number">0</span>].scan(<span class="regexp">/\d+/</span>)</span><br><span class="line">      [first_year, end_year].each_with_index <span class="keyword">do</span> <span class="params">|year, index|</span></span><br><span class="line">        year = <span class="string">"20"</span> + (year.to_i + <span class="number">11</span>).to_s[<span class="number">1</span>..<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">if</span> index.zero?</span><br><span class="line">          first_year = year</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          end_year =year</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> [first_year, end_year]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rows_range</span><span class="params">(rows)</span></span></span><br><span class="line">      row_index = <span class="literal">nil</span></span><br><span class="line">      rows.each_with_index <span class="keyword">do</span> <span class="params">|row, index|</span></span><br><span class="line">        <span class="keyword">if</span> row.<span class="keyword">include</span>?(<span class="string">"資料日期"</span>)</span><br><span class="line">          row_index = index</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      end_index = <span class="literal">nil</span></span><br><span class="line">      rows.each_with_index <span class="keyword">do</span> <span class="params">|row, index|</span></span><br><span class="line">        <span class="keyword">if</span> row.<span class="keyword">include</span>?(<span class="string">"公式"</span>)</span><br><span class="line">          end_index = index</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> [row_index, end_index]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_rows</span><span class="params">(rows, row_index, end_index)</span></span></span><br><span class="line">      all_rows = []</span><br><span class="line">      data_date_infos = []</span><br><span class="line">      rows[(row_index + <span class="number">1</span>)..(end_index - <span class="number">1</span>)].each <span class="keyword">do</span> <span class="params">|row_string|</span></span><br><span class="line">        row_item = []</span><br><span class="line">        row_string.split(<span class="string">'",'</span>).each &#123; <span class="params">|row|</span> row_item &lt;&lt; row.gsub(<span class="regexp">/[=|,|"]/</span>, <span class="string">''</span>) &#125;</span><br><span class="line"></span><br><span class="line">        year, month, day = row_item[<span class="number">0</span>].scan(<span class="regexp">/\d+/</span>)</span><br><span class="line">        year = <span class="string">"20"</span> + (year.to_i + <span class="number">11</span>).to_s[<span class="number">1</span>..<span class="number">2</span>]</span><br><span class="line">        data_date = year + month + day</span><br><span class="line">        row_item[<span class="number">0</span>] = data_date.to_date</span><br><span class="line">        all_rows &lt;&lt; row_item</span><br><span class="line">        data_date_infos &lt;&lt; row_item[<span class="number">0</span>]</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> [all_rows, data_date_infos]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">not_process?</span><span class="params">(data_date_infos, latest_data_date)</span></span></span><br><span class="line">      data_date_infos.uniq!</span><br><span class="line">      latest_data_date.present? &amp;&amp; data_date_infos.max &lt;= latest_data_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_by_stocks</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stock_infos = []</span><br><span class="line">      all_rows.each &#123; <span class="params">|rows|</span> stock_infos &lt;&lt; &#123; <span class="symbol">code:</span> rows[<span class="number">1</span>], <span class="symbol">name:</span> rows[<span class="number">2</span>] &#125; &#125;</span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_stocks = []</span><br><span class="line">      stock_infos.each <span class="keyword">do</span> <span class="params">|stock_info|</span></span><br><span class="line">        stock = stocks[stock_info[<span class="symbol">:code</span>]]</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> stock</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> need_create_stocks.any? &#123; <span class="params">|item|</span> item.code == stock_info[<span class="symbol">:code</span>] &#125;</span><br><span class="line"></span><br><span class="line">        need_create_stocks &lt;&lt; Stock.new(<span class="symbol">code:</span> stock_info[<span class="symbol">:code</span>], <span class="symbol">name:</span> stock_info[<span class="symbol">:name</span>])</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      need_create_stocks</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">import_ex_stocks</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_ex_stocks = []</span><br><span class="line">      all_rows.each <span class="keyword">do</span> <span class="params">|row|</span></span><br><span class="line">        stock = stocks[row[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        need_create_ex_stocks &lt;&lt; stock.exs.new(</span><br><span class="line">          <span class="symbol">data_date:</span> row[<span class="number">0</span>],</span><br><span class="line">          <span class="symbol">closing_price_before:</span> row[<span class="number">3</span>],</span><br><span class="line">          <span class="symbol">reference_price:</span> row[<span class="number">4</span>],</span><br><span class="line">          <span class="symbol">dr_value:</span> row[<span class="number">5</span>],</span><br><span class="line">          <span class="symbol">dividend_right:</span> ExStock::DIVIDEND_RIGHT[row[<span class="number">6</span>]],</span><br><span class="line">          <span class="symbol">limit_up:</span> row[<span class="number">7</span>],</span><br><span class="line">          <span class="symbol">limit_down:</span> row[<span class="number">8</span>],</span><br><span class="line">          <span class="symbol">opening_reference_price:</span> row[<span class="number">9</span>],</span><br><span class="line">          <span class="symbol">ex_dividend_reference_price:</span> row[<span class="number">10</span>],</span><br><span class="line">          <span class="symbol">reporting_day:</span> row[<span class="number">12</span>],</span><br><span class="line">          <span class="symbol">price_book:</span> row[<span class="number">13</span>],</span><br><span class="line">          <span class="symbol">eps:</span> row[<span class="number">14</span>],</span><br><span class="line">        )</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      ExStock.import(need_create_ex_stocks) <span class="keyword">if</span> need_create_ex_stocks.present?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="檢查是否有存入-db">檢查是否有存入 DB</span></h2><p><img src="https://i.imgur.com/fTpuAHD.png" alt></p><h2><span id="小結">小結</span></h2><p>我猜看到這，已經不少人看不懂或沒在看了 (笑)</p><p>說明越寫越精簡，想說 code 已經直接貼出來了，直接看 code 比較快，若發現有更好的寫法，歡迎留言和我說~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272913" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272913</a><br>medium 文章連結：<a href="https://link.medium.com/VfJfmvMuTjb" target="_blank" rel="noopener">https://link.medium.com/VfJfmvMuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/07/Day24-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8%E5%AD%98%E5%85%A5-DB/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;前面已經知道如何抓「臺灣證券交易所」的除權除息計算結果表 CSV 檔，接下來要處理資料，並存入 DB&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;需要考量的情境，與&lt;a h
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day23 - 將臺灣證券交易所的每日收盤行情存入 DB</title>
    <link href="https://riverye.com/2021/10/06/Day23-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85%E5%AD%98%E5%85%A5-DB/"/>
    <id>https://riverye.com/2021/10/06/Day23-將臺灣證券交易所的每日收盤行情存入-DB/</id>
    <published>2021-10-05T16:00:00.000Z</published>
    <updated>2021-09-27T13:45:39.444Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>前面已經知道如何抓「臺灣證券交易所」的每日收盤行情 CSV 檔，接下來要處理資料，並存入 DB</p><h2><span id="說明">說明</span></h2><p>在處理過程中，需要考量，可能會有新上市的公司，若有的話，要建立 <code>Stock</code>，至於已經下市的公司，則應該要軟刪除 (這部分還沒做，可自行研究)</p><p>同一天的資料，若執行多次，應該要判斷是否已在 DB 建立過，不應該重複建立</p><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/allbut_0999/save_to_db.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Allbut0999</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">SaveToDb</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      start_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;start_time.to_s&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">      end_transaction_date = find_latest_transaction_date</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> end_transaction_date == start_time</span><br><span class="line"></span><br><span class="line">      is_linux = <span class="string">`uname -a`</span>[<span class="regexp">/Linux/</span>].present?</span><br><span class="line">      file_paths = Dir[<span class="string">"data/twse/ALLBUT0999/*/*/*"</span>]</span><br><span class="line">      file_paths.each <span class="keyword">do</span> <span class="params">|file_path|</span></span><br><span class="line">        rows = decode_data(file_path, is_linux)</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> not_process?(rows, end_transaction_date)</span><br><span class="line"></span><br><span class="line">        row_index = find_rows_index(rows)</span><br><span class="line">        all_rows = filter_rows(rows, row_index)</span><br><span class="line">        filtered_stocks = filter_by_stocks(all_rows)</span><br><span class="line">        Stock.import(filtered_stocks) <span class="keyword">if</span> filtered_stocks.present?</span><br><span class="line"></span><br><span class="line">        import_daily_quotes(all_rows)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - start_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_transaction_date</span></span></span><br><span class="line">      DailyQuote.latest_transaction_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">not_process?</span><span class="params">(rows, end_transaction_date)</span></span></span><br><span class="line">      year, month, day = rows[<span class="number">0</span>].scan(<span class="regexp">/\d+/</span>)</span><br><span class="line">      year = <span class="string">"20"</span> + (year.to_i + <span class="number">11</span>).to_s[<span class="number">1</span>..<span class="number">2</span>]</span><br><span class="line">      @file_date = year + month + day</span><br><span class="line">      end_transaction_date.present? &amp;&amp; @file_date.to_date &lt;= end_transaction_date</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_rows_index</span><span class="params">(rows)</span></span></span><br><span class="line">      row_index = <span class="literal">nil</span></span><br><span class="line">      rows.each_with_index &#123; <span class="params">|row, index|</span> row_index = index <span class="keyword">if</span> row.<span class="keyword">include</span>?(<span class="string">"證券代號"</span>) &#125;</span><br><span class="line">      row_index</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_rows</span><span class="params">(rows, row_index)</span></span></span><br><span class="line">      all_rows = []</span><br><span class="line">      rows[(row_index + <span class="number">1</span>)..-<span class="number">1</span>].each <span class="keyword">do</span> <span class="params">|row_string|</span></span><br><span class="line">        row_item = []</span><br><span class="line">        row_string.split(<span class="string">',"'</span>).each &#123; <span class="params">|row|</span> row_item &lt;&lt; row.gsub(<span class="regexp">/[=|,|"]/</span>, <span class="string">''</span>) &#125;</span><br><span class="line">        all_rows &lt;&lt; row_item</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      all_rows</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">filter_by_stocks</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stock_infos = []</span><br><span class="line">      all_rows.each &#123; <span class="params">|rows|</span> stock_infos &lt;&lt; &#123; <span class="symbol">code:</span> rows[<span class="number">0</span>], <span class="symbol">name:</span> rows[<span class="number">1</span>] &#125; &#125;</span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_stocks = []</span><br><span class="line">      stock_infos.each <span class="keyword">do</span> <span class="params">|stock_info|</span></span><br><span class="line">        stock = stocks[stock_info[<span class="symbol">:code</span>]]</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> stock</span><br><span class="line"></span><br><span class="line">        need_create_stocks &lt;&lt; Stock.new(<span class="symbol">code:</span> stock_info[<span class="symbol">:code</span>], <span class="symbol">name:</span> stock_info[<span class="symbol">:name</span>])</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      need_create_stocks</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">import_daily_quotes</span><span class="params">(all_rows)</span></span></span><br><span class="line">      stocks = Stock.all.select(<span class="symbol">:code</span>).index_by(&amp;<span class="symbol">:code</span>)</span><br><span class="line"></span><br><span class="line">      need_create_daily_quotes = []</span><br><span class="line">      all_rows.each <span class="keyword">do</span> <span class="params">|row|</span></span><br><span class="line">        stock = stocks[row[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">        need_create_daily_quotes &lt;&lt; stock.daily_quotes.new(</span><br><span class="line">          <span class="symbol">transaction_date:</span> @file_date.to_date,</span><br><span class="line">          <span class="symbol">trade_volume:</span> row[<span class="number">2</span>],</span><br><span class="line">          <span class="symbol">number_of_transactions:</span> row[<span class="number">3</span>],</span><br><span class="line">          <span class="symbol">trade_price:</span> row[<span class="number">4</span>],</span><br><span class="line">          <span class="symbol">opening_price:</span> row[<span class="number">5</span>],</span><br><span class="line">          <span class="symbol">highest_price:</span> row[<span class="number">6</span>],</span><br><span class="line">          <span class="symbol">lowest_price:</span> row[<span class="number">7</span>],</span><br><span class="line">          <span class="symbol">closing_price:</span> row[<span class="number">8</span>],</span><br><span class="line">          <span class="symbol">ups_and_downs:</span> row[<span class="number">9</span>],</span><br><span class="line">          <span class="symbol">price_difference:</span> row[<span class="number">10</span>],</span><br><span class="line">          <span class="symbol">last_best_bid_price:</span> row[<span class="number">11</span>],</span><br><span class="line">          <span class="symbol">last_best_bid_volume:</span> row[<span class="number">12</span>],</span><br><span class="line">          <span class="symbol">last_best_ask_price:</span> row[<span class="number">13</span>],</span><br><span class="line">          <span class="symbol">last_best_ask_volume:</span> row[<span class="number">14</span>],</span><br><span class="line">          <span class="symbol">price_earning_ratio:</span> row[<span class="number">15</span>],</span><br><span class="line">        )</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      DailyQuote.import(need_create_daily_quotes) <span class="keyword">if</span> need_create_daily_quotes.present?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="檢查是否有存入-db">檢查是否有存入 DB</span></h2><p><img src="https://i.imgur.com/0BmUTWQ.png" alt></p><h2><span id="小結">小結</span></h2><p>現在看別人寫好的 code ，應該會覺得蠻簡單的，當下自己在做的時候，並沒有範例的 code 可以參考，邊摸索邊做出來的，過程的酸甜苦辣只有自己知道，唯有自己做過，才會知道~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272899" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272899</a><br>medium 文章連結：<a href="https://link.medium.com/HmmocOLuTjb" target="_blank" rel="noopener">https://link.medium.com/HmmocOLuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/06/Day23-%E5%B0%87%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E7%9A%84%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85%E5%AD%98%E5%85%A5-DB/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;前面已經知道如何抓「臺灣證券交易所」的每日收盤行情 CSV 檔，接下來要處理資料，並存入 DB&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在處理過程中，需要考量，可能會有
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day22 - 用 Ruby on Rails 處理臺灣證券交易所資料-DB 設計</title>
    <link href="https://riverye.com/2021/10/05/Day22-%E7%94%A8-Ruby-on-Rails-%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-DB-%E8%A8%AD%E8%A8%88/"/>
    <id>https://riverye.com/2021/10/05/Day22-用-Ruby-on-Rails-處理臺灣證券交易所資料-DB-設計/</id>
    <published>2021-10-04T16:00:00.000Z</published>
    <updated>2021-09-27T13:45:22.931Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>有了前 2 篇從「臺灣證券交易所」取得 CSV 檔後，接著要把資料存入 DB，在存入前，需要先有 DB，本篇以 DB 設計為主</p><h2><span id="說明">說明</span></h2><p>預期會有</p><ol><li>一個 Model 紀錄股票名稱、代號 (<code>Stock</code>)</li><li>一個 Model 紀錄每日收盤行情相關資訊 (<code>DailyQuote</code>)</li><li>一個 Model 紀錄除權除息計算結果表 (<code>ExStock</code>)</li><li><code>Stock</code> 與 <code>DailyQuote</code> 為一對多關聯</li><li><code>Stock</code> 與 <code>ExStock</code> 為一對多關聯</li></ol><h2><span id="實作">實作</span></h2><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateStocks</span> &lt; ActiveRecord::Migration[6.1]</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    create_table <span class="symbol">:stocks</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">      t.string   <span class="symbol">:name</span>, <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.string   <span class="symbol">:code</span>, <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.datetime <span class="symbol">:deleted_at</span></span><br><span class="line"></span><br><span class="line">      t.timestamps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    add_index <span class="symbol">:stocks</span>, <span class="symbol">:code</span>, <span class="symbol">unique:</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateDailyQuotes</span> &lt; ActiveRecord::Migration[6.1]</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    create_table <span class="symbol">:daily_quotes</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">      t.string  <span class="symbol">:code</span>, <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.date    <span class="symbol">:transaction_date</span>, <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 收盤日期</span></span><br><span class="line">      t.bigint  <span class="symbol">:trade_volume</span>                  <span class="comment"># 成交股數</span></span><br><span class="line">      t.bigint  <span class="symbol">:number_of_transactions</span>        <span class="comment"># 成交筆數</span></span><br><span class="line">      t.bigint  <span class="symbol">:trade_price</span>                   <span class="comment"># 成交金額</span></span><br><span class="line">      t.float   <span class="symbol">:opening_price</span>                 <span class="comment"># 開盤價</span></span><br><span class="line">      t.float   <span class="symbol">:highest_price</span>                 <span class="comment"># 最高價</span></span><br><span class="line">      t.float   <span class="symbol">:lowest_price</span>                  <span class="comment"># 最低價</span></span><br><span class="line">      t.float   <span class="symbol">:closing_price</span>                 <span class="comment"># 收盤價</span></span><br><span class="line">      t.string  <span class="symbol">:ups_and_downs</span>                 <span class="comment"># 漲跌</span></span><br><span class="line">      t.float   <span class="symbol">:price_difference</span>              <span class="comment"># 價差</span></span><br><span class="line">      t.float   <span class="symbol">:last_best_bid_price</span>           <span class="comment"># 最後揭示買價</span></span><br><span class="line">      t.bigint  <span class="symbol">:last_best_bid_volume</span>          <span class="comment"># 最後揭示買量</span></span><br><span class="line">      t.float   <span class="symbol">:last_best_ask_price</span>           <span class="comment"># 最後揭示賣價</span></span><br><span class="line">      t.bigint  <span class="symbol">:last_best_ask_volume</span>          <span class="comment"># 最後揭示賣量</span></span><br><span class="line">      t.float   <span class="symbol">:price_earning_ratio</span>           <span class="comment"># 本益比</span></span><br><span class="line"></span><br><span class="line">      t.timestamps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    add_index <span class="symbol">:daily_quotes</span>, %i[code transaction_date], <span class="symbol">unique:</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateExStocks</span> &lt; ActiveRecord::Migration[6.1]</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">change</span></span></span><br><span class="line">    create_table <span class="symbol">:ex_stocks</span> <span class="keyword">do</span> <span class="params">|t|</span></span><br><span class="line">      t.string  <span class="symbol">:code</span>,                        <span class="symbol">null:</span> <span class="literal">false</span></span><br><span class="line">      t.date    <span class="symbol">:data_date</span>,                   <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 資料日期</span></span><br><span class="line">      t.float   <span class="symbol">:closing_price_before</span>,        <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 除權息前收盤價</span></span><br><span class="line">      t.float   <span class="symbol">:reference_price</span>,             <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 除權息參考價</span></span><br><span class="line">      t.float   <span class="symbol">:dr_value</span>,                    <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 權值+息值</span></span><br><span class="line">      t.integer <span class="symbol">:dividend_right</span>,              <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 權/息</span></span><br><span class="line">      t.float   <span class="symbol">:limit_up</span>,                    <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 漲停價格</span></span><br><span class="line">      t.float   <span class="symbol">:limit_down</span>,                  <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 跌停價格</span></span><br><span class="line">      t.float   <span class="symbol">:opening_reference_price</span>,     <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 開盤競價基準</span></span><br><span class="line">      t.float   <span class="symbol">:ex_dividend_reference_price</span>, <span class="symbol">null:</span> <span class="literal">false</span> <span class="comment"># 減除股利參考價</span></span><br><span class="line">      t.string  <span class="symbol">:reporting_day</span>                            <span class="comment"># 最近一次申報資料 季別/日期</span></span><br><span class="line">      t.float   <span class="symbol">:price_book</span>                               <span class="comment"># 最近一次申報每股 (單位)淨值</span></span><br><span class="line">      t.float   <span class="symbol">:eps</span>                                      <span class="comment"># 最近一次申報每股 (單位)盈餘</span></span><br><span class="line"></span><br><span class="line">      t.timestamps</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    add_index <span class="symbol">:ex_stocks</span>, %i[code data_date], <span class="symbol">unique:</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/stock.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stock</span> &lt; ApplicationRecord</span></span><br><span class="line">  validates <span class="symbol">:name</span>, <span class="symbol">:code</span>, <span class="symbol">presence:</span> <span class="literal">true</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">uniqueness:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  has_many <span class="symbol">:daily_quotes</span>,               <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></span><br><span class="line">  has_many <span class="symbol">:exs</span>, <span class="symbol">class_name:</span> <span class="string">"ExStock"</span>, <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span></span><br><span class="line">  </span><br><span class="line">  scope <span class="symbol">:latest_transaction_date</span>, -&gt; (date = <span class="literal">nil</span>) <span class="keyword">do</span></span><br><span class="line">    date = date ? date.to_date : DailyQuote.latest_transaction_date</span><br><span class="line">    <span class="keyword">self</span>.joins(<span class="symbol">:daily_quotes</span>).where(<span class="symbol">daily_quotes:</span> &#123; <span class="symbol">transaction_date:</span> date &#125;)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/daily_quote.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DailyQuote</span> &lt; ApplicationRecord</span></span><br><span class="line">  acts_as_paranoid</span><br><span class="line"></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">:transaction_date</span>, <span class="symbol">presence:</span> <span class="literal">true</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">uniqueness:</span> &#123; <span class="symbol">scope:</span> <span class="symbol">:transaction_date</span>,</span><br><span class="line">    <span class="symbol">message:</span> <span class="string">"該收盤日期已有紀錄"</span> &#125;</span><br><span class="line"></span><br><span class="line">  belongs_to <span class="symbol">:stock</span>, <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span></span><br><span class="line"></span><br><span class="line">  scope <span class="symbol">:latest_transaction_date</span>, -&gt; &#123; maximum(<span class="symbol">:transaction_date</span>) &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/models/ex_stock.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExStock</span> &lt; ApplicationRecord</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">:data_date</span>, <span class="symbol">:closing_price_before</span>, <span class="symbol">:reference_price</span>, <span class="symbol">:dr_value</span>,</span><br><span class="line">            <span class="symbol">:dividend_right</span>, <span class="symbol">:limit_up</span>, <span class="symbol">:limit_down</span>, <span class="symbol">:opening_reference_price</span>, <span class="symbol">:ex_dividend_reference_price</span>,</span><br><span class="line">            <span class="symbol">presence:</span> <span class="literal">true</span></span><br><span class="line">  validates <span class="symbol">:code</span>, <span class="symbol">uniqueness:</span> &#123; <span class="symbol">scope:</span> <span class="symbol">:data_date</span>, <span class="symbol">message:</span> <span class="string">"該資料日期已有紀錄"</span> &#125;</span><br><span class="line"></span><br><span class="line">  belongs_to <span class="symbol">:stock</span>, <span class="symbol">foreign_key:</span> <span class="symbol">:code</span>, <span class="symbol">primary_key:</span> <span class="symbol">:code</span></span><br><span class="line"></span><br><span class="line">  DIVIDEND_RIGHT = &#123;</span><br><span class="line">    <span class="string">"息"</span>   =&gt; <span class="string">"xd"</span>,</span><br><span class="line">    <span class="string">"權"</span>   =&gt; <span class="string">"xr"</span>,</span><br><span class="line">    <span class="string">"權息"</span> =&gt; <span class="string">"dr"</span>,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  enum <span class="symbol">dividend_right:</span> &#123;</span><br><span class="line">    <span class="symbol">xd:</span> <span class="number">0</span>, <span class="comment"># 除息 (Exclude Dividend)</span></span><br><span class="line">    <span class="symbol">xr:</span> <span class="number">1</span>, <span class="comment"># 除權 (Exclude Right)</span></span><br><span class="line">    <span class="symbol">dr:</span> <span class="number">2</span>, <span class="comment"># 除權除息(同時) (DR (Dividend + Right))</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  scope <span class="symbol">:latest_data_date</span>, -&gt; &#123; maximum(<span class="symbol">:data_date</span>) &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>設計建立好 DB 後，接下來的兩篇會示範把前兩篇抓下來的資料存到 DB~</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272854" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272854</a><br>medium 文章連結：<a href="https://link.medium.com/s8TWR4KuTjb" target="_blank" rel="noopener">https://link.medium.com/s8TWR4KuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/05/Day22-%E7%94%A8-Ruby-on-Rails-%E8%99%95%E7%90%86%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-DB-%E8%A8%AD%E8%A8%88/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;有了前 2 篇從「臺灣證券交易所」取得 CSV 檔後，接著要把資料存入 DB，在存入前，需要先有 DB，本篇以 DB 設計為主&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day21 - 用 Ruby on Rails 抓臺灣證券交易所資料-除權除息計算結果表</title>
    <link href="https://riverye.com/2021/10/04/Day21-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8/"/>
    <id>https://riverye.com/2021/10/04/Day21-用-Ruby-on-Rails-抓臺灣證券交易所資料-除權除息計算結果表/</id>
    <published>2021-10-03T16:00:00.000Z</published>
    <updated>2021-09-27T13:45:08.250Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>這篇主要以抓「臺灣證券交易所」的「除權除息計算結果表」為主</p><h2><span id="取得除權除息計算結果表csv-檔">取得「除權除息計算結果表」CSV 檔</span></h2><p>目標是從臺灣證券交易所的「<a href="https://www.twse.com.tw/zh/page/trading/exchange/TWT49U.html" target="_blank" rel="noopener">除權除息計算結果表</a>」取得每日的 CSV 檔</p><p>note: 本資訊自民國92年5月5日起提供</p><p><img src="https://i.imgur.com/tpjTZSx.png" alt></p><h3><span id="下載的檔案內容如下">下載的檔案內容如下</span></h3><p>從上面已經知道，只提供 2003-05-05 之後的檔案</p><p><img src="https://i.imgur.com/10vPfTk.png" alt></p><h2><span id="實作">實作</span></h2><p>下載「<a href="https://www.twse.com.tw/zh/page/trading/exchange/TWT49U.html" target="_blank" rel="noopener">除權除息計算結果表</a>」時，資料日期可以直接從 2003-05-05 直接抓到最新一天，需留意時間範圍太大時，可能會遇到 <code>read_timeout</code> ，可選擇時間範圍別抓這麼廣，或把 <code>read_timeout</code> 時間拉長</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/twt_49u/download.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Twt49u</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Download</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      current_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;current_time.to_s&#125;</span>"</span></span><br><span class="line">      start_date = find_latest_data_date(current_time)</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> start_date == <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      data_path = Rails.root.join(<span class="string">"data/twse/TWT49U"</span>)</span><br><span class="line">      file_path = data_path.join(<span class="string">"TWT49U_<span class="subst">#&#123;start_date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>_<span class="subst">#&#123;current_time.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>.csv"</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> File.exists?(file_path)</span><br><span class="line"></span><br><span class="line">      FileUtils.mkdir_p(data_path) <span class="keyword">unless</span> File.directory?(data_path)</span><br><span class="line"></span><br><span class="line">      download_file(start_date, current_time, data_path, file_path)</span><br><span class="line">      upload_to_github</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - current_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, backtrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_data_date</span><span class="params">(current_time)</span></span></span><br><span class="line">      latest_data_date = ExStock.latest_data_date</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> latest_data_date</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> latest_data_date == current_time</span><br><span class="line"></span><br><span class="line">        latest_data_date + <span class="number">1</span>.day</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        Date.parse(<span class="string">"2003-05-05"</span>) <span class="comment"># 僅支援抓 2003-05-05 之後的資料</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_file</span><span class="params">(start_date, current_time, data_path, file_path)</span></span></span><br><span class="line">      remote_file = Down::NetHttp.download(</span><br><span class="line">        <span class="string">"<span class="subst">#&#123;BASE_URL&#125;</span>exchangeReport/TWT49U?response=csv&amp;strDate=<span class="subst">#&#123;start_date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>&amp;endDate=<span class="subst">#&#123;current_time.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>"</span>,</span><br><span class="line">        <span class="symbol">read_timeout:</span> <span class="number">120</span>,</span><br><span class="line">      )</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> remote_file.size &lt; <span class="number">3</span></span><br><span class="line">        FileUtils.rm_rf(remote_file.path)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        FileUtils.mv(remote_file.path, data_path.join(file_path.basename.to_s))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p><code>find_latest_data_date</code> 中的 <code>ExStock</code> 為建立的 Model，這篇可以先略過，下一篇會說明 DB 的設計</p><p>有了處理「每日收盤行情」的經驗後，在處理類似的資料時，會比較快些</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272820" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272820</a><br>medium 文章連結：<a href="https://link.medium.com/FasXk7JuTjb" target="_blank" rel="noopener">https://link.medium.com/FasXk7JuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/04/Day21-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E9%99%A4%E6%AC%8A%E9%99%A4%E6%81%AF%E8%A8%88%E7%AE%97%E7%B5%90%E6%9E%9C%E8%A1%A8/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這篇主要以抓「臺灣證券交易所」的「除權除息計算結果表」為主&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;取得除權除息計算結果表csv-檔&quot;&gt;取得「除權除息計算結果表」CSV 檔&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;目標是從
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day20 - 用 Ruby on Rails 抓臺灣證券交易所資料-每日收盤行情</title>
    <link href="https://riverye.com/2021/10/03/Day20-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85/"/>
    <id>https://riverye.com/2021/10/03/Day20-用-Ruby-on-Rails-抓臺灣證券交易所資料-每日收盤行情/</id>
    <published>2021-10-02T16:00:00.000Z</published>
    <updated>2021-09-27T13:44:57.661Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>這篇開始會有幾篇是與「臺灣證券交易所」有關，示範如何用 Ruby on Rails 來爬蟲將資料抓回來處理，並自己建立 DB，方便自己在 Local 可以測試</p><p>這部分起，不提供 sample pr or repo (個人有放 GitHub private，目前沒打算公開)</p><p>預計會示範如何抓「每日收盤行情」、「除權除息計算結果表」、設計 DB 架構、寫點簡易的技術指標選股</p><p>謎之音: 其實是原本規劃的題目，寫到膩了，想調整下內容 <s>(才不承認是拿之前自己做的 Side Project 來擠牙膏)</s></p><h2><span id="說明">說明</span></h2><p>這邊不會教股票相關的知識，我也只是一隻小菜鳥，會以技術實作層面呈現，若有寫錯或更好的寫法，歡迎不吝指教</p><h2><span id="取得每日收盤行情csv-檔">取得「每日收盤行情」CSV 檔</span></h2><p>目標是從臺灣證券交易所的「<a href="https://www.twse.com.tw/zh/page/trading/exchange/MI_INDEX.html" target="_blank" rel="noopener">每日收盤行情</a>」取得每日的 CSV 檔</p><p>note: 本資訊自民國93年2月11日起提供</p><p><img src="https://i.imgur.com/cjRuwPh.png" alt></p><h3><span id="下載的檔案內容如下">下載的檔案內容如下</span></h3><p>從上面已經知道，只提供 2004-02-11 之後的檔案</p><p><img src="https://i.imgur.com/tGEidr8.jpg" alt></p><h2><span id="實作">實作</span></h2><p>預計會用到以下 3 個 Gem，分別是 <a href="https://rubygems.org/gems/iconv" target="_blank" rel="noopener">iconv</a>、<a href="https://rubygems.org/gems/down" target="_blank" rel="noopener">down</a>、<a href="https://rubygems.org/gems/activerecord-import" target="_blank" rel="noopener">activerecord-import</a></p><p>note: Mac 的話，<code>iconv</code> 可以不用裝，最初是在 Windows 上寫的，後來變成在兩種作業系統輪流寫 XD</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'iconv'</span>, <span class="string">'~&gt; 1.0'</span>, <span class="string">'&gt;= 1.0.8'</span></span><br><span class="line">gem <span class="string">'down'</span>, <span class="string">'~&gt; 5.2'</span>, <span class="string">'&gt;= 5.2.2'</span></span><br><span class="line">gem <span class="string">'activerecord-import'</span>, <span class="string">'~&gt; 1.1'</span></span><br></pre></td></tr></table></figure></p><p>由於已經知道下載、儲存 DB 會有許多方法是共用的，因此這邊直接抽 <code>helpers</code></p><p>note: 剛開始做的時候不知道，邊做邊重構，慢慢整理的，其中 <code>decode_data</code> 這方法會在存 DB 時才會用到，因此可先忽略</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/helpers.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse</span></span></span><br><span class="line">  <span class="class"><span class="keyword">module</span> <span class="title">Helpers</span></span></span><br><span class="line"></span><br><span class="line">    BASE_URL = <span class="string">"https://www.twse.com.tw/"</span>.freeze</span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----- download start -----</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">upload_to_github</span></span></span><br><span class="line">      need_update_github = <span class="string">`cd data/twse &amp;&amp; git remote -v`</span></span><br><span class="line"></span><br><span class="line">      system(<span class="string">'cd data/twse &amp;&amp; git add . &amp;&amp; git commit -m "update data" &amp;&amp; git push'</span>) <span class="keyword">if</span> need_update_github.present?</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment"># ----- download end -----</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ----- save_to_db start -----</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode_data</span><span class="params">(file_path, is_linux)</span></span></span><br><span class="line">      <span class="keyword">if</span> is_linux</span><br><span class="line">        <span class="comment"># for windows Ubuntu</span></span><br><span class="line">        file = File.open(file_path, <span class="string">"r:UTF-8"</span>)</span><br><span class="line">        decoded_data = Iconv.iconv(<span class="string">"utf-8"</span>, <span class="string">"big-5"</span>, file.read)</span><br><span class="line">        decoded_data[<span class="number">0</span>].split(<span class="string">"\r\n"</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="comment"># for mac</span></span><br><span class="line">        file = File.open(file_path, <span class="string">"r:BIG5"</span>)</span><br><span class="line">        decoded_data = file.read</span><br><span class="line">        decoded_data.split(<span class="string">"\r\n"</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment"># ----- save_to_db end -----</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>下載每日收盤行情中的「每日收盤行情(全部(不含權證、牛熊證、可展延牛熊證))」</p><p>note: 不能太密集的抓資料，會被 Bang，至於間隔幾秒怎麼知道的，trial and error 是一個方法</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/twse/allbut_0999/download.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Twse::Allbut0999</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Download</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> Twse::Helpers</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      current_time = Time.current</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, start_time: <span class="subst">#&#123;current_time.to_s&#125;</span>"</span></span><br><span class="line">      data_path = Rails.root.join(<span class="string">"data/twse/ALLBUT0999"</span>)</span><br><span class="line">      start_date = find_latest_transaction_date(current_time)</span><br><span class="line">      <span class="keyword">return</span> puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, 已經是最新的資料"</span> <span class="keyword">if</span> start_date == <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      (start_date..Date.current).each <span class="keyword">do</span> <span class="params">|date|</span></span><br><span class="line">        month_path = data_path.join(date.year.to_s, date.month.to_s)</span><br><span class="line">        file_path = month_path.join(<span class="string">"MI_INDEX_ALLBUT0999_<span class="subst">#&#123;date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>.csv"</span>)</span><br><span class="line">        <span class="keyword">next</span> <span class="keyword">if</span> File.exists?(file_path) <span class="params">||</span> date.sunday?</span><br><span class="line"></span><br><span class="line">        FileUtils.mkdir_p(month_path) <span class="keyword">unless</span> File.directory?(month_path)</span><br><span class="line"></span><br><span class="line">        download_file(date, month_path)</span><br><span class="line">        sleep <span class="number">3</span> <span class="comment"># 太密集抓資料會被 bang</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      upload_to_github</span><br><span class="line">      puts <span class="string">"<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span>, done_time:<span class="subst">#&#123;Time.current&#125;</span>, <span class="subst">#&#123;(Time.current - current_time).to_s&#125;</span> sec"</span></span><br><span class="line">    <span class="keyword">rescue</span> StandardError =&gt; e</span><br><span class="line">      puts <span class="string">"errors: <span class="subst">#&#123;e.inspect&#125;</span>, backtrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_latest_transaction_date</span><span class="params">(current_time)</span></span></span><br><span class="line">      latest_transaction_date = DailyQuote.latest_transaction_date</span><br><span class="line">      <span class="keyword">if</span> latest_transaction_date</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span> <span class="keyword">if</span> latest_transaction_date == current_time</span><br><span class="line"></span><br><span class="line">        latest_transaction_date + <span class="number">1</span>.day</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        Date.parse(<span class="string">"2004-02-11"</span>) <span class="comment"># 僅支援抓 2014-02-11 之後的資料</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download_file</span><span class="params">(date, month_path)</span></span></span><br><span class="line">      remote_file = Down.download(<span class="string">"<span class="subst">#&#123;BASE_URL&#125;</span>exchangeReport/MI_INDEX?response=csv&amp;date=<span class="subst">#&#123;date.strftime(<span class="string">"%Y%m%d"</span>)&#125;</span>&amp;type=ALLBUT0999"</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> remote_file.size.zero?</span><br><span class="line">        FileUtils.rm_rf(remote_file.path)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        FileUtils.mv(remote_file.path, month_path.join(remote_file.original_filename))</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>製作的過程，踩到蠻多雷的 (ex: 下載要間隔幾秒、如何處理資料...等)，可能與一開始在 Windows 上開發有關，逐一解決遇到的問題，還蠻好玩的，主要是享受開發的過程</p><p>上面有寫 <code>upload_to_github</code> 這方法，將抓下來的資料，自動上傳到 GitHub repo，若只是想單純試看看，沒有要自己建 repo 的話，這段可移除</p><p><code>find_latest_transaction_date</code> 中的 <code>DailyQuote</code> 為建立的 Model，這篇可以先略過，後面會有一篇文章說明 DB 的設計</p><p>另外也可以到「<a href="https://openapi.twse.com.tw/" target="_blank" rel="noopener">臺灣證券交易所 OpenAPI</a>」打 API 取資料，這邊就不多闡述了</p><p>下一篇會示範如何抓「除權除息計算結果表」的資料</p><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272778" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272778</a><br>medium 文章連結：<a href="https://link.medium.com/DtL2qRIuTjb" target="_blank" rel="noopener">https://link.medium.com/DtL2qRIuTjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/03/Day20-%E7%94%A8-Ruby-on-Rails-%E6%8A%93%E8%87%BA%E7%81%A3%E8%AD%89%E5%88%B8%E4%BA%A4%E6%98%93%E6%89%80%E8%B3%87%E6%96%99-%E6%AF%8F%E6%97%A5%E6%94%B6%E7%9B%A4%E8%A1%8C%E6%83%85/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這篇開始會有幾篇是與「臺灣證券交易所」有關，示範如何用 Ruby on Rails 來爬蟲將資料抓回來處理，並自己建立 DB，方便自己在 Local 可以測試&lt;/p&gt;
&lt;p&gt;這部分起，不提供 sample p
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day19 - 匯入 excel-測試篇</title>
    <link href="https://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/"/>
    <id>https://riverye.com/2021/10/02/Day19-匯入-excel-測試篇/</id>
    <published>2021-10-01T16:00:00.000Z</published>
    <updated>2021-09-26T09:37:08.545Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>繼<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">上篇</a>匯入 Excel 實作，這篇以撰寫測試為主</p><h2><span id="實作">實作</span></h2><p>測試的寫法有蠻多種，這邊以其中一種為例，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/9" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/parser_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe ShopsExcel::Parser <span class="keyword">do</span></span><br><span class="line">  describe <span class="string">'execute'</span> <span class="keyword">do</span></span><br><span class="line">    let(<span class="symbol">:excel_file</span>) &#123; Tempfile.new(<span class="string">%w[shops_import .xlsx]</span>) &#125;</span><br><span class="line">    let(<span class="symbol">:excel</span>) <span class="keyword">do</span></span><br><span class="line">      file = excel_file</span><br><span class="line">      file.binmode</span><br><span class="line"></span><br><span class="line">      xlsx = Axlsx::Package.new</span><br><span class="line">      workbook = xlsx.workbook</span><br><span class="line">      workbook.add_worksheet(<span class="symbol">name:</span> <span class="string">'商家清單'</span>) <span class="keyword">do</span> <span class="params">|sheet|</span></span><br><span class="line">        sheet.add_row(excel_titles)</span><br><span class="line">        sheet.add_row(content_array1)</span><br><span class="line">        sheet.add_row(content_array2)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      xlsx.use_shared_strings = <span class="literal">true</span></span><br><span class="line">      xlsx.serialize(file)</span><br><span class="line"></span><br><span class="line">      file.rewind</span><br><span class="line">      file</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    let(<span class="symbol">:excel_titles</span>) &#123; ShopsExcel::Generator::TITLES &#125;</span><br><span class="line">    let(<span class="symbol">:content_array1</span>) &#123; [<span class="string">'shop_name_1'</span>, <span class="string">'river@riverye.com'</span>, <span class="string">'hello'</span>] &#125;</span><br><span class="line">    let(<span class="symbol">:content_array2</span>) &#123; [<span class="string">'shop_name_2'</span>, <span class="string">'test@riverye.com'</span>,  <span class="string">'world'</span>] &#125;</span><br><span class="line"></span><br><span class="line">    subject &#123; described_class.new.execute(excel) &#125;</span><br><span class="line"></span><br><span class="line">    context <span class="string">'create shops successfully'</span> <span class="keyword">do</span></span><br><span class="line">      it <span class="string">'data correctly'</span> <span class="keyword">do</span></span><br><span class="line">        expect &#123; subject &#125;.to change &#123; Shop.count &#125;.by(<span class="number">2</span>)</span><br><span class="line">        [content_array1, content_array2].each <span class="keyword">do</span> <span class="params">|content_array|</span></span><br><span class="line">          shop1 = Shop.find_by(<span class="symbol">name:</span> content_array[<span class="number">0</span>])</span><br><span class="line">          expect(shop1).to have_attributes(</span><br><span class="line">            <span class="symbol">name:</span> content_array[<span class="number">0</span>],</span><br><span class="line">            <span class="symbol">email:</span> content_array[<span class="number">1</span>],</span><br><span class="line">            <span class="symbol">note:</span> content_array[<span class="number">2</span>],</span><br><span class="line">          )</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    context <span class="string">'when return error'</span> <span class="keyword">do</span></span><br><span class="line">      let(<span class="symbol">:logger</span>) &#123; double &#125;</span><br><span class="line"></span><br><span class="line">      before <span class="keyword">do</span></span><br><span class="line">        allow(Rails).to receive(<span class="symbol">:logger</span>).and_return(logger)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">expect_error_message</span><span class="params">(error_message)</span></span></span><br><span class="line">        expect(logger).to receive(<span class="symbol">:error</span>).with(<span class="regexp">/\[ShopsExcel::Parser Error\] <span class="subst">#&#123;error_message&#125;</span>/</span>)</span><br><span class="line">        expect &#123; subject &#125;.to change &#123; Shop.count &#125;.by(<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when title is empty'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:excel_titles</span>) &#123; [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'輸入資料有誤，比對 Excel 標頭與預期不同'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when data is empty'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:content_array1</span>) &#123; [<span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; content_array1 &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'無資料'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when data is duplicate'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; content_array1 &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">'有重複的商家名稱，請檢查'</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      context <span class="string">'when shop exists'</span> <span class="keyword">do</span></span><br><span class="line">        let(<span class="symbol">:shop</span>) &#123; create(<span class="symbol">:shop</span>) &#125;</span><br><span class="line">        let(<span class="symbol">:content_array1</span>) &#123; [shop.name, shop.email, shop.note] &#125;</span><br><span class="line">        let(<span class="symbol">:content_array2</span>) &#123; [<span class="string">'shop_name_2'</span>, <span class="string">'test@riverye.com'</span>, <span class="string">'world'</span>] &#125;</span><br><span class="line">        let(<span class="symbol">:error_message</span>) &#123; <span class="string">"有 1 筆已建立過: <span class="subst">#&#123;shop.name&#125;</span>"</span> &#125;</span><br><span class="line"></span><br><span class="line">        it &#123; expect_error_message(error_message) &#125;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>這篇其實是與<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">上篇</a>一起先寫好 code ，接著才開始寫文章，在寫測試過程中，有發現原本寫的方法要微調，這也是撰寫測試的好處，能發現一些沒留意到的眉眉角角 <s>(說這麼多，就是擠牙膏嘛)</s></p><p>若有更好的寫法，歡迎留言和我說~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/roo-rb/roo" target="_blank" rel="noopener">Roo GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272599" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272599</a><br>medium 文章連結：<a href="https://link.medium.com/sYWyCHbyRjb" target="_blank" rel="noopener">https://link.medium.com/sYWyCHbyRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/02/Day19-%E5%8C%AF%E5%85%A5-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;繼&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10272591&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上篇&lt;/a&gt;匯入 Excel 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day18 - 匯入 excel-應用篇</title>
    <link href="https://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/"/>
    <id>https://riverye.com/2021/10/01/Day18-匯入-excel-應用篇/</id>
    <published>2021-09-30T16:00:00.000Z</published>
    <updated>2021-09-26T09:37:14.886Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>使用者除了有匯出報表的需求外，也會有需要大量匯入的情境，匯入會更需要驗證輸入的資料，有可能是空的資料、跟預期輸入 Excel 完全不同、重複的資料 (需看情境是否接受重複的資料)、部分資料輸入錯誤...等</p><h2><span id="實作">實作</span></h2><p>這邊會需要使用到 <a href="https://rubygems.org/gems/roo" target="_blank" rel="noopener">roo</a> 和 <a href="https://rubygems.org/gems/roo-xls" target="_blank" rel="noopener">roo-xls</a> 這 2 個 Gem ，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/8" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'roo'</span>, <span class="string">'~&gt; 2.8'</span>, <span class="string">'&gt;= 2.8.3'</span></span><br><span class="line">gem <span class="string">'roo-xls'</span>, <span class="string">'~&gt; 1.2'</span></span><br></pre></td></tr></table></figure></p><p>以下範例有做簡單的驗證，像是判斷輸入的 Excel 標題列是否一樣、是否有資料、是否有重複的資料、是否與 DB 資料重複</p><p>大量匯入時，可改用 <code>activerecord-import</code> 處理，可參考這篇<a href="https://ithelp.ithome.com.tw/articles/10264572" target="_blank" rel="noopener">文章</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/parser.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ShopsExcel</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">ParseError</span> &lt; StandardError;</span> <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Parser</span></span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(file_path)</span></span></span><br><span class="line">      list = read_excel(file_path)</span><br><span class="line">      sheet = list.sheet(<span class="number">0</span>)</span><br><span class="line">      validate_title_names!(sheet)</span><br><span class="line">      validate_shop_names!(sheet)</span><br><span class="line">      process_shops(sheet)</span><br><span class="line">    <span class="keyword">rescue</span> ParseError =&gt; e</span><br><span class="line">      subject = <span class="string">"[<span class="subst">#&#123;<span class="keyword">self</span>.<span class="keyword">class</span>&#125;</span> Error] <span class="subst">#&#123;e.message&#125;</span>, \nbacktrace: <span class="subst">#&#123;e.backtrace&#125;</span>"</span></span><br><span class="line">      Rails.logger.error subject</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_excel</span><span class="params">(file_path)</span></span></span><br><span class="line">      Roo::Spreadsheet.open(file_path)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_title_names!</span><span class="params">(sheet)</span></span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> sheet.row(<span class="number">1</span>) == ShopsExcel::Generator::TITLES</span><br><span class="line"></span><br><span class="line">      raise ParseError, <span class="string">'輸入資料有誤，比對 Excel 標頭與預期不同'</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validate_shop_names!</span><span class="params">(sheet)</span></span></span><br><span class="line">      all_shop_names = sheet.column(<span class="number">1</span>)[<span class="number">1</span>..-<span class="number">1</span>]</span><br><span class="line">      raise ParseError, <span class="string">'無資料'</span> <span class="keyword">if</span> all_shop_names.blank?</span><br><span class="line">      raise ParseError, <span class="string">'有重複的商家名稱，請檢查'</span> <span class="keyword">if</span> all_shop_names.uniq.size != all_shop_names.size</span><br><span class="line"></span><br><span class="line">      existed_shop_names = Shop.where(<span class="symbol">name:</span> all_shop_names).pluck(<span class="symbol">:name</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">if</span> existed_shop_names.blank?</span><br><span class="line"></span><br><span class="line">      raise ParseError, <span class="string">"有 <span class="subst">#&#123;existed_shop_names.size&#125;</span> 筆已建立過: <span class="subst">#&#123;existed_shop_names.join(<span class="string">', '</span>)&#125;</span>"</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_shops</span><span class="params">(sheet)</span></span></span><br><span class="line">      shops = []</span><br><span class="line">      (<span class="number">2</span>..sheet.last_row).each <span class="keyword">do</span> <span class="params">|index|</span></span><br><span class="line">        col_values = sheet_row(sheet, index)</span><br><span class="line">        shop = Shop.new(col_values)</span><br><span class="line">        shops &lt;&lt; shop</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      Shop.import(shops)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sheet_row</span><span class="params">(sheet, index)</span></span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="symbol">name:</span> sheet.row(index)[<span class="number">0</span>],  <span class="comment"># 商家名稱</span></span><br><span class="line">        <span class="symbol">email:</span> sheet.row(index)[<span class="number">1</span>], <span class="comment"># 信箱</span></span><br><span class="line">        <span class="symbol">note:</span> sheet.row(index)[<span class="number">2</span>],  <span class="comment"># 備註</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>在 <code>rails console</code> 輸入以下</p><p><a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/%E5%95%86%E5%AE%B6%E7%B8%BD%E8%A1%A8.xlsx" target="_blank" rel="noopener">範例的 Excel 檔</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">file = Rails.root.join(<span class="string">"data/商家總表.xlsx"</span>).to_s</span><br><span class="line">ShopsExcel::Parser.new.execute(file)</span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>匯入要做的基本驗證蠻多的，需考量各種情境，並盡可能地去預防處理，和匯出一樣，建議都是放 sidekiq 處理，完成後再寄信給使用者，告知匯入結果</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/roo-rb/roo" target="_blank" rel="noopener">Roo GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272591" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272591</a><br>medium 文章連結：<a href="https://link.medium.com/Teq2MzayRjb" target="_blank" rel="noopener">https://link.medium.com/Teq2MzayRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/10/01/Day18-%E5%8C%AF%E5%85%A5-excel-%E6%87%89%E7%94%A8%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;使用者除了有匯出報表的需求外，也會有需要大量匯入的情境，匯入會更需要驗證輸入的資料，有可能是空的資料、跟預期輸入 Excel 完全不同、重複的資料 (需看情境是否接受重複的資料)、部分資料輸入錯誤...等&lt;/
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day17 - 匯出 excel-測試篇</title>
    <link href="https://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/"/>
    <id>https://riverye.com/2021/09/30/Day17-匯出-excel-測試篇/</id>
    <published>2021-09-29T16:00:00.000Z</published>
    <updated>2021-09-26T05:37:18.497Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p><a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">上篇</a>題到如何製作產 Excel 檔，這篇以撰寫測試為主</p><h2><span id="說明">說明</span></h2><p>延續<a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">上篇</a>完成的補寫測試，這邊還有額外安裝 <code>factory_bot_rails</code> <a href="https://rubygems.org/gems/factory_bot_rails" target="_blank" rel="noopener">Gem</a> 使用，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/7" target="_blank" rel="noopener">pr</a></p><h2><span id="實作">實作</span></h2><p>主要測試內容為: 工作列表名稱 (worksheet)、Excel 標題列、內容，確認資料正確性</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spec/services/shops_excel/generator_spec.rb</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rails_helper'</span></span><br><span class="line"></span><br><span class="line">RSpec.describe ShopsExcel::Generator <span class="keyword">do</span></span><br><span class="line">  subject &#123; described_class.new.execute &#125;</span><br><span class="line"></span><br><span class="line">  before <span class="keyword">do</span></span><br><span class="line">    @shop = create(<span class="symbol">:shop</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  it <span class="string">'generate rows correctly'</span> <span class="keyword">do</span></span><br><span class="line">    xlsx = subject</span><br><span class="line">    first_sheet = xlsx.workbook.worksheets[<span class="number">0</span>]</span><br><span class="line">    expect(first_sheet.name).to eq(<span class="string">'商家清單'</span>)</span><br><span class="line">    expect(first_sheet.rows[<span class="number">0</span>].cells.map(&amp;<span class="symbol">:value</span>)).to match_array(</span><br><span class="line">      <span class="string">%w[商家名稱 信箱 備註]</span></span><br><span class="line">    )</span><br><span class="line">    expect(first_sheet.rows[<span class="number">1</span>].cells.map(&amp;<span class="symbol">:value</span>)).to match_array(</span><br><span class="line">      [@shop.name, @shop.email, @shop.note]</span><br><span class="line">    )</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>一開始不熟悉時，會做比較慢，蠻正常的，因為沒做過所以也沒頭緒，多做幾次後，就會逐漸上手，慢慢的就能變成先寫完測試，再開始實作內容了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/thoughtbot/factory_bot_rails" target="_blank" rel="noopener">factory_bot_rails GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272496" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272496</a><br>medium 文章連結：<a href="https://link.medium.com/H7KaCZbhRjb" target="_blank" rel="noopener">https://link.medium.com/H7KaCZbhRjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/30/Day17-%E5%8C%AF%E5%87%BA-excel-%E6%B8%AC%E8%A9%A6%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10272151&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;上篇&lt;/a&gt;題到如何製作產 Ex
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day16 - 匯出 excel-應用篇</title>
    <link href="https://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/"/>
    <id>https://riverye.com/2021/09/29/Day16-匯出-excel-應用篇/</id>
    <published>2021-09-28T16:00:00.000Z</published>
    <updated>2021-09-25T15:00:35.135Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>不論是產各式報表，都與 Excel 脫離不了關係，產 Excel 屬於必備技能之一，以下示範如何產 Excel 檔</p><h2><span id="實作">實作</span></h2><p>這邊以 <a href="https://rubygems.org/gems/axlsx" target="_blank" rel="noopener">axlsx</a> Gem 做範例，也有其他 Gem 也能做到，像是 <a href="https://rubygems.org/gems/xlsxtream" target="_blank" rel="noopener">xlsxtream</a> 等，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/6" target="_blank" rel="noopener">pr</a></p><p>直接用 <a href="https://rubygems.org/gems/axlsx" target="_blank" rel="noopener">axlsx</a> 最新版本直接 bundle 的話，會踩到雷，詳情，自己裝看看就知道了 XD</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'rubyzip'</span>, <span class="string">'~&gt; 2.3'</span>, <span class="string">'&gt;= 2.3.2'</span></span><br><span class="line">gem <span class="string">'axlsx_rails'</span>, <span class="string">'~&gt; 0.6.1'</span></span><br><span class="line">gem <span class="string">'axlsx'</span>, <span class="symbol">git:</span> <span class="string">"https://github.com/randym/axlsx.git"</span>,</span><br><span class="line">             <span class="symbol">ref:</span> <span class="string">"c8ac844572b25fda358cc01d2104720c4c42f450"</span></span><br></pre></td></tr></table></figure></p><p>將產 Excel 寫在 services，方便之後共用</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/shops_excel/generator.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ShopsExcel</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span></span><br><span class="line">    TITLES = <span class="string">%w[商家名稱 信箱 備註]</span>.freeze</span><br><span class="line">    ROW_TYPES = %i[string string string].freeze</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span></span></span><br><span class="line">      shops = Shop.all</span><br><span class="line">      xlsx = Axlsx::Package.new</span><br><span class="line">      workbook = xlsx.workbook</span><br><span class="line">      workbook.add_worksheet(<span class="symbol">name:</span> <span class="string">'商家清單'</span>) <span class="keyword">do</span> <span class="params">|sheet|</span></span><br><span class="line">        sheet.add_row(TITLES)</span><br><span class="line">        shops.find_each <span class="keyword">do</span> <span class="params">|shop|</span></span><br><span class="line">          sheet.add_row(shop_row_data(shop), <span class="symbol">types:</span> ROW_TYPES)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      xlsx</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shop_row_data</span><span class="params">(shop)</span></span></span><br><span class="line">      [</span><br><span class="line">        shop.name,</span><br><span class="line">        shop.email,</span><br><span class="line">        shop.note</span><br><span class="line">      ]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/routes.rb</span></span><br><span class="line"></span><br><span class="line">get <span class="symbol">:export_shops_xlsx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># app/controllers/shops_controller.rb</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">export_shops_xlsx</span></span></span><br><span class="line">  <span class="comment"># 實務上，並不建議直接在 controller 直接產 Excel，若資料很多的話，使用者體驗會不好 (會等很久)</span></span><br><span class="line">  xlsx = ShopsExcel::Generator.new.execute</span><br><span class="line"></span><br><span class="line">  send_data(xlsx.to_stream.read, <span class="symbol">type:</span> <span class="string">'application/xlsx'</span>, <span class="symbol">filename:</span> <span class="string">'商家總表.xlsx'</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>若只是單純產一次就不會再產的話，可以在 <code>rails console</code> 直接下 code，如下</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">xlsx = ShopsExcel::Generator.new.execute</span><br><span class="line">xlsx.use_shared_strings = <span class="literal">true</span></span><br><span class="line">xlsx_file = Rails.root.join(<span class="string">"data/test.xlsx"</span>)</span><br><span class="line">xlsx.serialize(xlsx_file)</span><br></pre></td></tr></table></figure></p><h3><span id="從網頁下載">從網頁下載</span></h3><p><img src="https://i.imgur.com/5hX8wyY.png" alt></p><h3><span id="產的-excel-內容">產的 Excel 內容</span></h3><p><img src="https://i.imgur.com/Y3Wu9vj.png" alt></p><h2><span id="小結">小結</span></h2><p>產 Excel 其實不難，難的是產的資料內容過於複雜且多時，可能會關聯超多 Model 、多個工作表 (worksheet)，還要考量是否會 Memory Bloat</p><p>實務上並不建議直接在 controller 直接產 Excel ，資料太多的話，使用者體驗會不好，會等很久，通常會放 sidekiq 處理，完成後，再寄信給使用者</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/randym/axlsx" target="_blank" rel="noopener">Axlsx GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10272151" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10272151</a><br>medium 文章連結：<a href="https://link.medium.com/GmNaDhwgQjb" target="_blank" rel="noopener">https://link.medium.com/GmNaDhwgQjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/29/Day16-%E5%8C%AF%E5%87%BA-excel-%E6%87%89%E7%94%A8%E7%AF%87/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;不論是產各式報表，都與 Excel 脫離不了關係，產 Excel 屬於必備技能之一，以下示範如何產 Excel 檔&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;實作&quot;&gt;實作&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;這邊以 &lt;a
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day15 - 匯出(下載) PDF</title>
    <link href="https://riverye.com/2021/09/28/Day15-%E5%8C%AF%E5%87%BA-%E4%B8%8B%E8%BC%89-PDF/"/>
    <id>https://riverye.com/2021/09/28/Day15-匯出-下載-PDF/</id>
    <published>2021-09-27T16:00:00.000Z</published>
    <updated>2021-09-25T10:08:58.920Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>使用者在操作頁面或輸入網址後，要下載檔案(不局限於 PDF 檔案)，可以使用 Ruby on Rails 內建的 <code>send_file</code> 來處理</p><h2><span id="實作">實作</span></h2><p>下載的檔案不局限於 PDF 檔，可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/5" target="_blank" rel="noopener">pr</a><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/routes.rb</span></span><br><span class="line"></span><br><span class="line">resources <span class="symbol">:shops</span> <span class="keyword">do</span></span><br><span class="line">  collection <span class="keyword">do</span></span><br><span class="line">    get <span class="symbol">:download_pdf</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># app/controllers/shops_controller.rb</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_pdf</span></span></span><br><span class="line">  pdf_path = Rails.root.join(<span class="string">'data/river_demo_pdf.pdf'</span>)</span><br><span class="line"></span><br><span class="line">  send_file pdf_path</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># spec/requests/shops_spec.rb</span></span><br><span class="line"></span><br><span class="line">describe <span class="string">"GET /download_pdf"</span> <span class="keyword">do</span></span><br><span class="line">  subject &#123; get download_pdf_shops_path, <span class="symbol">params:</span> &#123; <span class="symbol">format:</span> <span class="symbol">:text</span> &#125; &#125;</span><br><span class="line"></span><br><span class="line">  it <span class="string">"send correct file"</span> <span class="keyword">do</span></span><br><span class="line">    allow_any_instance_of(ShopsController).to receive(<span class="symbol">:send_file</span>).with(Rails.root.join(<span class="string">'data/river_demo_pdf.pdf'</span>))</span><br><span class="line">    subject</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h3><span id="實際畫面">實際畫面</span></h3><p><img src="https://i.imgur.com/1ftFejA.png" alt></p><h2><span id="小結">小結</span></h2><p>一開始不知道時，會想說該如何實作，才能讓使用者可以下載檔案，後來發現 Ruby on Rails 已經幫我們做了許多事情，讓我們在實作上，可以簡單幾行便實現該功能，真的非常快速又方便~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://apidock.com/rails/ActionController/DataStreaming/send_file" target="_blank" rel="noopener">apidock#send_file</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10271932" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10271932</a><br>medium 文章連結：<a href="https://link.medium.com/91hPYYFVPjb" target="_blank" rel="noopener">https://link.medium.com/91hPYYFVPjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/28/Day15-%E5%8C%AF%E5%87%BA-%E4%B8%8B%E8%BC%89-PDF/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;使用者在操作頁面或輸入網址後，要下載檔案(不局限於 PDF 檔案)，可以使用 Ruby on Rails 內建的 &lt;code&gt;send_file&lt;/code&gt; 來處理&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;實作
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day14 - PDF 加浮水印</title>
    <link href="https://riverye.com/2021/09/27/Day14-PDF-%E5%8A%A0%E6%B5%AE%E6%B0%B4%E5%8D%B0/"/>
    <id>https://riverye.com/2021/09/27/Day14-PDF-加浮水印/</id>
    <published>2021-09-26T16:00:00.000Z</published>
    <updated>2021-09-25T10:08:51.034Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>工作上在處理 API 取得的 PDF 後，要在上面增加浮水印，進而研究與紀錄的處理方式</p><h2><span id="實作">實作</span></h2><p>會需要用到 <a href="https://rubygems.org/gems/combine_pdf" target="_blank" rel="noopener">combine_pdf</a> 和 <a href="https://rubygems.org/gems/prawn" target="_blank" rel="noopener">prawn</a> 這兩個 Gem 處理</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gemfile</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">'combine_pdf'</span>, <span class="string">'~&gt; 1.0'</span>, <span class="string">'&gt;= 1.0.21'</span></span><br><span class="line">gem <span class="string">'prawn'</span>, <span class="string">'~&gt; 2.4'</span></span><br></pre></td></tr></table></figure></p><p>將增加浮水寫成一個方法，範例的 <a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/river_demo_watermark.pdf" target="_blank" rel="noopener">PDF</a> ，和實作的 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/4" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/features/pdf/add_watermark_pdf.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">Pdf</span></span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">AddWatermarkPdf</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># input_file = Rails.root.join('data/river_demo_watermark.pdf')</span></span><br><span class="line">    <span class="comment"># output_file = input_file.dirname.join('done.pdf')</span></span><br><span class="line">    <span class="comment"># watermark_texts = %w[river_1 river_2 river_3]</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">execute</span><span class="params">(input_file, output_file, watermark_texts = [])</span></span></span><br><span class="line">      tmp_watermark_file(input_file)              <span class="comment"># 暫存的浮水印 PDF path</span></span><br><span class="line">      generate_watermark_content(watermark_texts) <span class="comment"># 產浮水印的 PDF</span></span><br><span class="line">      combine_pdf(input_file, output_file)        <span class="comment"># 將 input_file 與浮水印 PDF 合併</span></span><br><span class="line">      FileUtils.rm_rf(@tmp_watermark_file)        <span class="comment"># 移除暫存的浮水印 PDF</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tmp_watermark_file</span><span class="params">(input_file)</span></span></span><br><span class="line">      @tmp_watermark_file <span class="params">||</span>= input_file.dirname.join(<span class="string">'tmp_watermark.pdf'</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可自行設定字型大小、顏色等</span></span><br><span class="line">    <span class="comment"># Prawn Documentation: https://prawnpdf.org/api-docs</span></span><br><span class="line">    <span class="comment"># Prawn example: https://prawnpdf.org/manual.pdf</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate_watermark_content</span><span class="params">(watermark_texts)</span></span></span><br><span class="line">      position, amount_per_page = watermark_args</span><br><span class="line">      Prawn::Document.generate(@tmp_watermark_file) <span class="keyword">do</span></span><br><span class="line">        watermark_texts.each_with_index <span class="keyword">do</span> <span class="params">|watermark_text, index|</span></span><br><span class="line">          page = index / amount_per_page + <span class="number">1</span></span><br><span class="line">          coordinate = position[index % amount_per_page]</span><br><span class="line">          start_new_page <span class="keyword">if</span> page != <span class="number">1</span> &amp;&amp; (index % amount_per_page).zero?</span><br><span class="line">          go_to_page(page)</span><br><span class="line">          float <span class="keyword">do</span></span><br><span class="line">            bounding_box(coordinate, <span class="symbol">height:</span> <span class="number">14</span>, <span class="symbol">width:</span> <span class="number">48</span>) <span class="keyword">do</span></span><br><span class="line">              fill_color <span class="string">'000000'</span></span><br><span class="line">              fill_rectangle [<span class="number">0</span>, bounds.height], bounds.width, bounds.height</span><br><span class="line">              stroke_bounds</span><br><span class="line">              fill_color <span class="string">'FFFFFF'</span></span><br><span class="line">              text watermark_text.to_s, <span class="symbol">align:</span> <span class="symbol">:center</span>, <span class="symbol">valign:</span> <span class="symbol">:center</span>, <span class="symbol">size:</span> <span class="number">12</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 浮水印在頁面上的位置、每頁的數量</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watermark_args</span></span></span><br><span class="line">      position = [[<span class="number">0</span>, <span class="number">769</span>], [<span class="number">0</span>, <span class="number">392</span>]] <span class="comment"># xy 軸座標 (需自行計算適合的位置)</span></span><br><span class="line">      amount_per_page = <span class="number">2</span>             <span class="comment"># 每頁的浮水印數量</span></span><br><span class="line"></span><br><span class="line">      [position, amount_per_page]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">combine_pdf</span><span class="params">(input_file, output_file)</span></span></span><br><span class="line">      pdf_pages = CombinePDF.load(@tmp_watermark_file).pages</span><br><span class="line">      pdf = CombinePDF.load(input_file)</span><br><span class="line">      pdf.pages.each_with_index &#123; <span class="params">|page, index|</span> page &lt;&lt; pdf_pages[index] &#125;</span><br><span class="line">      pdf.save(output_file)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>完成上述步驟後，接著在 <code>rails console</code> 輸入以下，便大功告成</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">input_file = Rails.root.join(<span class="string">'data/river_demo_watermark.pdf'</span>)</span><br><span class="line">output_file = input_file.dirname.join(<span class="string">'done.pdf'</span>)</span><br><span class="line">watermark_texts = <span class="string">%w[river_1 river_2 river_3]</span></span><br><span class="line">Pdf::AddWatermarkPdf.new.execute(input_file, output_file, watermark_texts)</span><br></pre></td></tr></table></figure></p><h3><span id="示範的-pdf">示範的 PDF</span></h3><p><img src="https://i.imgur.com/9S6hPc1.png" alt></p><h3><span id="加上浮水印後">加上浮水印後</span></h3><p><img src="https://i.imgur.com/PcWDrRl.png" alt></p><h2><span id="小結">小結</span></h2><p>上面的範例為一頁有多處需要加浮水印，且每個位置的浮水印內容皆不一樣，因此在處理上會略為複雜些，若每頁只需加一處且浮水印內容一樣，處理上會簡單一點</p><p>目前想到在 PDF 上加浮水印的做法是，將來源的 PDF、浮水印的 PDF 合併，合併後再把暫存浮水印 PDF 刪除，若有更好的做法，歡迎留言和我說</p><p>至於如何知道浮水印的位置，「trial and error」會是一個好方法 xD</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/boazsegev/combine_pdf" target="_blank" rel="noopener">combine_pdf GitHub</a></li><li><a href="https://github.com/prawnpdf/prawn" target="_blank" rel="noopener">Prawn GitHub</a></li><li><a href="https://prawnpdf.org/manual.pdf" target="_blank" rel="noopener">Prawn example</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10271878" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10271878</a><br>medium 文章連結：<a href="https://link.medium.com/uqXuO7EVPjb" target="_blank" rel="noopener">https://link.medium.com/uqXuO7EVPjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/27/Day14-PDF-%E5%8A%A0%E6%B5%AE%E6%B0%B4%E5%8D%B0/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;工作上在處理 API 取得的 PDF 後，要在上面增加浮水印，進而研究與紀錄的處理方式&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;實作&quot;&gt;實作&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;會需要用到 &lt;a href=&quot;https
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day13 - PDF 加密、解密的處理</title>
    <link href="https://riverye.com/2021/09/26/Day13-PDF-%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86%E7%9A%84%E8%99%95%E7%90%86/"/>
    <id>https://riverye.com/2021/09/26/Day13-PDF-加密、解密的處理/</id>
    <published>2021-09-25T16:00:00.000Z</published>
    <updated>2021-09-25T10:08:41.965Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在處理 PDF 增加密碼 (加密) 、移除解密 (解密) 時，可以使用 Ghostscript 處理，若不熟悉，可以先看下 <a href="https://zh.wikipedia.org/zh-tw/Ghostscript" target="_blank" rel="noopener">wiki</a> 或<a href="https://www.ghostscript.com/" target="_blank" rel="noopener">官方文件</a>的介紹</p><h2><span id="實作">實作</span></h2><p>首先需要先安裝 <code>ghostscript</code></p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for macOS</span></span><br><span class="line">brew install ghostscript</span><br></pre></td></tr></table></figure></p><p>這邊提供<a href="https://github.com/River-Ye/ironman_13th_2021/blob/master/data/river_demo_pdf.pdf" target="_blank" rel="noopener">範例 PDF</a> ，和實作的 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/3" target="_blank" rel="noopener">pr</a>，參數細節設定，可以參考<a href="https://www.ghostscript.com/doc/current/Use.htm" target="_blank" rel="noopener">官方文件</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># app/services/processing_pdf.rb</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProcessingPdf</span></span></span><br><span class="line">  <span class="comment"># ghostscript Documentation: https://www.ghostscript.com/doc/current/Use.htm</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">encryption</span><span class="params">(pwd, input_file, output_file)</span></span></span><br><span class="line">    _stdout_str, _stderr_str, _status = Open3.capture3(<span class="string">"gs -sDEVICE=pdfwrite -dBATCH -dNOPAUSE -dNOPROMPT -dQUIET \</span></span><br><span class="line"><span class="string">                                                        -sOwnerPassword=<span class="subst">#&#123;pwd&#125;</span> -sUserPassword=manan \</span></span><br><span class="line"><span class="string">                                                        -sOutputFile=<span class="subst">#&#123;output_file&#125;</span> <span class="subst">#&#123;input_file&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line">    &#123; <span class="symbol">success:</span> <span class="literal">true</span>, <span class="symbol">msg:</span> <span class="string">'PDF加密完成'</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">decrypt</span><span class="params">(pwd, input_file, output_file)</span></span></span><br><span class="line">    _stdout_str, stderr_str, _status = Open3.capture3(<span class="string">"gs -q -sDEVICE=pdfwrite -dBATCH -dNOPAUSE \</span></span><br><span class="line"><span class="string">                                                       -SPDFPassword=<span class="subst">#&#123;pwd&#125;</span> -sOutputFile=<span class="subst">#&#123;output_file&#125;</span> \</span></span><br><span class="line"><span class="string">                                                       -c 30000000 setvmthreshold -f <span class="subst">#&#123;input_file&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="symbol">error_msgs:</span> stderr_str.remove(<span class="string">"\n"</span>) &#125; <span class="keyword">if</span> stderr_str.present?</span><br><span class="line"></span><br><span class="line">    &#123; <span class="symbol">success:</span> <span class="literal">true</span>, <span class="symbol">msg:</span> <span class="string">'PDF解密完成'</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>將加密、解密寫在 services，方便之後使用，以下為實際測試加解密 PDF</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rails console</span></span><br><span class="line"></span><br><span class="line">source_pdf = Rails.root.join(<span class="string">"data/river_demo_pdf.pdf"</span>)</span><br><span class="line">encryption_pdf = Rails.root.join(<span class="string">"data/set_password_river_demo_pdf.pdf"</span>)</span><br><span class="line">password = <span class="string">"river_test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密 PDF</span></span><br><span class="line">encryption_result = ProcessingPdf.encryption(password, source_pdf, encryption_pdf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密 PDF</span></span><br><span class="line">input_pdf = encryption_pdf</span><br><span class="line">output_pdf = Rails.root.join(<span class="string">"data/decrypt_river_demo_pdf.pdf"</span>)</span><br><span class="line">decrypt_result = ProcessingPdf.decrypt(password, input_pdf, output_pdf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 處理解密時，若遇到輸入密碼錯誤，要在自行處理</span></span><br></pre></td></tr></table></figure></p><h3><span id="示範的-pdf">示範的 PDF</span></h3><p><img src="https://i.imgur.com/gTSXilY.png" alt></p><h3><span id="加密後的-pdf-開啟時會要求輸入密碼">加密後的 PDF (開啟時，會要求輸入密碼)</span></h3><p><img src="https://i.imgur.com/l5nKb5a.png" alt></p><h2><span id="小結">小結</span></h2><p>之前不知道 Ghostscript 前，會找各種 Gems 看是否有好用的解決方案，後來得知這套知名的老牌軟體後，支援的平台挺廣泛的，直接用這套就能搞定了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://www.ghostscript.com/" target="_blank" rel="noopener">Ghostscript 官網</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10271819" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10271819</a><br>medium 文章連結：<a href="https://link.medium.com/JoYN5HDVPjb" target="_blank" rel="noopener">https://link.medium.com/JoYN5HDVPjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/26/Day13-PDF-%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86%E7%9A%84%E8%99%95%E7%90%86/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在處理 PDF 增加密碼 (加密) 、移除解密 (解密) 時，可以使用 Ghostscript 處理，若不熟悉，可以先看下 &lt;a href=&quot;https://zh.wikipedia.org/zh-tw/Gh
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day12 - 解析圖片中的 QR Code 資料</title>
    <link href="https://riverye.com/2021/09/25/Day12-%E8%A7%A3%E6%9E%90%E5%9C%96%E7%89%87%E4%B8%AD%E7%9A%84-QR-Code-%E8%B3%87%E6%96%99/"/>
    <id>https://riverye.com/2021/09/25/Day12-解析圖片中的-QR-Code-資料/</id>
    <published>2021-09-24T16:00:00.000Z</published>
    <updated>2021-09-24T16:07:08.583Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>前篇講解如何產二維條碼 QR Code，這篇則是示範如何解析(解碼) QR Code，類似工具有 <a href="https://github.com/ZBar/ZBar" target="_blank" rel="noopener">ZBar</a>、<a href="https://github.com/zxing/zxing" target="_blank" rel="noopener">ZXing</a>..等，本篇以 ZBar 做示範</p><h2><span id="說明">說明</span></h2><p>情境說明，打 API 取回的圖片、PDF 中，有包含 QR Code，需要解析 QR Code 的訊息內容 (這邊不示範如何截圖指定位置，可用 <a href="https://github.com/rmagick/rmagick" target="_blank" rel="noopener">RMagick</a> 處理)</p><h2><span id="實作">實作</span></h2><p>需要安裝 <code>zbar</code>，也可以用 <a href="https://rubygems.org/gems/zbar" target="_blank" rel="noopener">zbar Gem</a>，這邊以 Homebrew 安裝為例</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for macOS</span></span><br><span class="line">brew install zbar</span><br></pre></td></tr></table></figure></p><p>先產一個 QR Code 的圖片檔，接著再用 <code>zbar</code> 來解析(編碼)</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 產一個 qr_code.png</span></span><br><span class="line">qrcode = RQRCode::QRCode.new(<span class="string">"https://riverye.com/"</span>)</span><br><span class="line">png = qrcode.as_png(<span class="symbol">size:</span> <span class="number">300</span>, <span class="symbol">border_modules:</span> <span class="number">2</span>, <span class="symbol">module_px_size:</span> <span class="number">2</span>)</span><br><span class="line">qrcode_path = Rails.root.join(<span class="string">"qrcode.png"</span>)</span><br><span class="line">IO.binwrite(qrcode_path, png.to_s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解碼 qrcode.png</span></span><br><span class="line">qrcode_path = Rails.root.join(<span class="string">"qrcode.png"</span>)</span><br><span class="line">decoded_qrcode = <span class="string">`zbarimg <span class="subst">#&#123;qrcode_path&#125;</span>`</span>                    <span class="comment"># "QR-Code:https://riverye.com/\n"</span></span><br><span class="line">result = decoded_qrcode.gsub(<span class="string">"QR-Code:"</span>, <span class="string">""</span>).gsub(<span class="string">"/\n"</span>, <span class="string">""</span>) <span class="comment"># "https://riverye.com"</span></span><br></pre></td></tr></table></figure></p><h2><span id="範例-qr-code">範例 QR Code</span></h2><p><img src="https://i.imgur.com/IW55kwR.png" alt></p><h2><span id="操作範例">操作範例</span></h2><p><img src="https://i.imgur.com/aQimKjK.png" alt></p><h2><span id="小結">小結</span></h2><p>最初是使用 <a href="https://rubygems.org/gems/zxing_cpp" target="_blank" rel="noopener">zxing_cpp Gem</a> 處理，也能解決問題，但總下載次數與熱門 Gem 動輒數百萬、數千萬次數相比，算是比較冷門的 Gem。</p><p>ZBar 與 ZXing 都能找到類似的 <a href="https://rubygems.org/" target="_blank" rel="noopener">Gem</a> 使用，有需要時，可以看哪個用比較上手~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/ZBar/ZBar" target="_blank" rel="noopener">ZBar GitHub</a></li><li><a href="https://github.com/zxing/zxing" target="_blank" rel="noopener">ZXing GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264602" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264602</a><br>medium 文章連結：<a href="https://link.medium.com/MDSrOdpGOjb" target="_blank" rel="noopener">https://link.medium.com/MDSrOdpGOjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/25/Day12-%E8%A7%A3%E6%9E%90%E5%9C%96%E7%89%87%E4%B8%AD%E7%9A%84-QR-Code-%E8%B3%87%E6%96%99/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;前篇講解如何產二維條碼 QR Code，這篇則是示範如何解析(解碼) QR Code，類似工具有 &lt;a href=&quot;https://github.com/ZBar/ZBar&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day11 - Gem-rqrcode 或 barby 產 QR Code</title>
    <link href="https://riverye.com/2021/09/24/Day11-Gem-rqrcode-%E6%88%96-barby-%E7%94%A2-QR-Code/"/>
    <id>https://riverye.com/2021/09/24/Day11-Gem-rqrcode-或-barby-產-QR-Code/</id>
    <published>2021-09-23T16:00:00.000Z</published>
    <updated>2021-09-23T16:32:03.399Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>本篇會示範如何在 Ruby on Rails 中產 QR Code，可透過 <a href="https://github.com/whomwah/rqrcode" target="_blank" rel="noopener">rqrcode</a> 或 <a href="https://github.com/toretore/barby" target="_blank" rel="noopener">barby</a> 來實現</p><h2><span id="說明">說明</span></h2><p>以下範例為在 erb 檔中產 svg 格式的 QR code</p><h2><span id="實作-rqrcode">實作 rqrcode</span></h2><p>在 Gemfile 中加入 <a href="https://rubygems.org/gems/rqrcode" target="_blank" rel="noopener">rqrcode</a> ，範例可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/2/commits/1d4387ab6d98dd6fa8e0651601624fd3a1cd9123" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qrcode = RQRCode::QRCode.new(<span class="string">"https://riverye.com/"</span>)</span><br><span class="line">qrcode.as_svg(<span class="symbol">color:</span> <span class="symbol">:black</span>, <span class="symbol">offset:</span> <span class="number">15</span>, <span class="symbol">shape_rendering:</span> <span class="string">"optimizeSpeed"</span>, <span class="symbol">module_size:</span> <span class="number">10</span>).html_safe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更多參數設定，請參考官方文件</span></span><br></pre></td></tr></table></figure></p><h2><span id="實作-barby">實作 barby</span></h2><p>在 Gemfile 中加入 <a href="https://rubygems.org/gems/barby" target="_blank" rel="noopener">barby</a> ，範例可參考此 <a href="https://github.com/River-Ye/ironman_13th_2021/pull/2/commits/bb194544e772350747cb8db90a8ae2a804b87875" target="_blank" rel="noopener">pr</a></p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">"barby/barcode/qr_code"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"barby/outputter/svg_outputter"</span></span><br><span class="line"></span><br><span class="line">Barby::QrCode.new(<span class="string">"https://riverye.com/"</span>).to_svg(<span class="symbol">xdim:</span> <span class="number">12</span>).html_safe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更多參數設定，請參考官方文件</span></span><br></pre></td></tr></table></figure></p><h2><span id="呈現效果如下">呈現效果如下</span></h2><p><img src="https://i.imgur.com/A9HwrIg.png" alt></p><h2><span id="小結">小結</span></h2><p>主要是示範如何產 QR code，若想要產一維條碼的話， <a href="https://github.com/toretore/barby" target="_blank" rel="noopener">barby</a> 也能做到，可直接看官方文件 <a href="https://github.com/toretore/barby/wiki/Outputters" target="_blank" rel="noopener">wiki</a>，這邊就不多加闡述了~</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://github.com/whomwah/rqrcode" target="_blank" rel="noopener">rqrcode GitHub</a></li><li><a href="https://github.com/toretore/barby" target="_blank" rel="noopener">barby GitHub</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264600" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264600</a><br>medium 文章連結：<a href="https://link.medium.com/ray451o2Mjb" target="_blank" rel="noopener">https://link.medium.com/ray451o2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/24/Day11-Gem-rqrcode-%E6%88%96-barby-%E7%94%A2-QR-Code/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;本篇會示範如何在 Ruby on Rails 中產 QR Code，可透過 &lt;a href=&quot;https://github.com/whomwah/rqrcode&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day10 - 如何用手機連 Ruby on Rails Local 開發中的專案</title>
    <link href="https://riverye.com/2021/09/23/Day10-%E5%A6%82%E4%BD%95%E7%94%A8%E6%89%8B%E6%A9%9F%E9%80%A3-Ruby-on-Rails-Local-%E9%96%8B%E7%99%BC%E4%B8%AD%E7%9A%84%E5%B0%88%E6%A1%88/"/>
    <id>https://riverye.com/2021/09/23/Day10-如何用手機連-Ruby-on-Rails-Local-開發中的專案/</id>
    <published>2021-09-22T16:00:00.000Z</published>
    <updated>2021-09-23T16:31:50.371Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>在開發時，除了用 Chrome 開發者工具切成不同尺寸確認外，若想在手機上操作的話...</p><h2><span id="說明">說明</span></h2><h3><span id="1-首先電腦和手機都要在同區域網路-lan-白話意思就是連同個-wi-fi">1. 首先，電腦和手機都要在同 (白話意思就是連同個 Wi-Fi)</span></h3><h3><span id="2-電腦的-rails-server-要啟動著輸入以下">2. 電腦的 <code>rails server</code> 要啟動著，輸入以下</span></h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若想用別的 port 則把 4000 改掉</span></span><br><span class="line"></span><br><span class="line">rails s -p 4000 -b 0.0.0.0</span><br></pre></td></tr></table></figure></p><h3><span id="3-查詢電腦的區域網路的-ip-位址">3. 查詢電腦的區域網路的 IP 位址</span></h3><h4><span id="mac-查詢方式">Mac 查詢方式</span></h4><h5><span id="方法1">方法1</span></h5><p>在終端機輸入 <code>ipconfig getifaddr en0</code>，便會回傳 IP 位址</p><h5><span id="方法2">方法2</span></h5><p><img src="https://i.imgur.com/o515Uzn.png" alt></p><h4><span id="windows-查詢方式">Windows 查詢方式</span></h4><h5><span id="方法1">方法1</span></h5><p>在「命令提示字元」(cmd) 中，輸入 <code>ipconfig /all</code> ，找到「IPv4 位址」</p><p><img src="https://i.imgur.com/wphTCDU.png" alt></p><h5><span id="方法2">方法2</span></h5><p><img src="https://i.imgur.com/HIVn2P2.png" alt></p><h3><span id="4-手機輸入網址">4. 手機輸入網址</span></h3><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假設電腦的區域網路 IP 是 192.168.1.52</span></span><br><span class="line"></span><br><span class="line">http://192.168.1.52:4000/</span><br></pre></td></tr></table></figure></p><p>以上便大功告成，可以用手機連 Local 專案了</p><hr><p>若 routes 有設定特定 (constraints) 的 subdomain 才能連線的話，可以透過 <a href="https://nip.io/" target="_blank" rel="noopener">nip.io</a> 或 xip.io ...等 DNS services 處理，網址改輸入以下</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 無指定 subdomain</span></span><br><span class="line">http://192.168.1.52.nip.io:4000/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 subdomain</span></span><br><span class="line">http://river.192.168.1.52.nip.io:4000/</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment"># 都是指向 192.168.1.52</span></span><br><span class="line">        192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line">    www.192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line"> mysite.192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line">foo.bar.192.168.1.52.nip.io   resolves to   192.168.1.52</span><br><span class="line">        192.168.1.52.nip.io   resolves to   192.168.1.52</span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>在 Rails 6 以上，若遇到 Blocked host ，照著錯誤訊息提示跟著做便可解決，若都不驗證的話，直接加 <code>config.hosts.clear</code> 即可。</p><p>也可以使用 <a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok</a> 來實現同樣的目的</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config/environments/development.rb</span></span><br><span class="line"></span><br><span class="line">Rails.application.configure <span class="keyword">do</span></span><br><span class="line">  <span class="comment"># 增加特定白名單</span></span><br><span class="line">  config.hosts &lt;&lt; <span class="string">"river.192.168.1.52.nip.io"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 都不擋 </span></span><br><span class="line">  config.hosts.clear</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 改完 config 的檔案，railse server 要重啟</span></span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/wBQ8Ff1.png" alt></p><hr><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://stackoverflow.com/questions/2019884/how-to-connect-to-a-localhost-rails-site-via-mobile-device-locally" target="_blank" rel="noopener">How to connect to a localhost Rails site via mobile device locally?</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10195920" target="_blank" rel="noopener">第十七天：怎麼讓別人連到我作好的網站？</a></li><li><a href="https://ourcodeworld.com/articles/read/1510/xip-io-a-magic-domain-name-that-provides-wildcard-dns-for-any-ip-address" target="_blank" rel="noopener">XIP.IO: a magic domain name that provides wildcard DNS for any IP address</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264598" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264598</a><br>medium 文章連結：<a href="https://link.medium.com/wiiTrho2Mjb" target="_blank" rel="noopener">https://link.medium.com/wiiTrho2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/23/Day10-%E5%A6%82%E4%BD%95%E7%94%A8%E6%89%8B%E6%A9%9F%E9%80%A3-Ruby-on-Rails-Local-%E9%96%8B%E7%99%BC%E4%B8%AD%E7%9A%84%E5%B0%88%E6%A1%88/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;在開發時，除了用 Chrome 開發者工具切成不同尺寸確認外，若想在手機上操作的話...&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;說明&quot;&gt;說明&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;1-首先電腦和手
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>Day09 - Gem-jwt 介紹與應用</title>
    <link href="https://riverye.com/2021/09/22/Day09-Gem-jwt-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/"/>
    <id>https://riverye.com/2021/09/22/Day09-Gem-jwt-介紹與應用/</id>
    <published>2021-09-21T16:00:00.000Z</published>
    <updated>2021-09-23T16:30:54.765Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="前言">前言</span></h2><p>JWT 是 <a href="https://jwt.io/" target="_blank" rel="noopener">JSON Web Token</a> 的縮寫。在寫此篇時，發現已經有許多相關文章可參考，故本篇以實作為主，若想知道更深入部分，可直接看參考資料</p><h2><span id="jwt組成">JWT組成</span></h2><p>由 <code>Header</code> 、<code>Payload</code>、 <code>Signature</code> 所組成的字串，中間以 <code>.</code> 做間隔</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 寫成一行的話，組成如下</span></span><br><span class="line">Header.Payload.Signature</span><br><span class="line"></span><br><span class="line"><span class="comment"># 實際範例如下 (中間以 . 做間隔)</span></span><br><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>組成</th><th>說明</th></tr></thead><tbody><tr><td>Header</td><td>通常由演算法簽章、 Token 類型所組成的 JSON，再做 Base64 URL 編碼</td></tr><tr><td>Payload</td><td>需傳遞的資料放這</td></tr><tr><td>Signature</td><td>Header、Payload、密鑰 (secret) 透過雜湊演算法所產生</td></tr></tbody></table><h2><span id="最終資料呈現如下方圖左是一個字串">最終資料呈現如下方圖左，是一個字串</span></h2><p><img src="https://i.imgur.com/laWFn0S.png" alt></p><h2><span id="動手做看看">動手做看看</span></h2><p><a href="https://jwt.io/" target="_blank" rel="noopener">官方 JWT</a> 首頁已有範例，這邊以 Ruby 做演練</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 irb 中操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">"json"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"base64"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"openssl"</span></span><br><span class="line"></span><br><span class="line">header = &#123; <span class="string">"alg"</span> =&gt; <span class="string">"HS256"</span>, <span class="string">"typ"</span> =&gt; <span class="string">"JWT"</span> &#125;</span><br><span class="line">header_json = header.to_json <span class="comment"># or JSON(header)</span></span><br><span class="line">encoded_header = Base64.urlsafe_encode64(header_json, <span class="symbol">padding:</span> <span class="literal">false</span>) <span class="comment"># Base64 編碼 header</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &#123; <span class="string">"sub"</span> =&gt; <span class="string">"1234567890"</span>, <span class="string">"name"</span> =&gt; <span class="string">"John Doe"</span>, <span class="string">"iat"</span> =&gt; <span class="number">1516239022</span> &#125;</span><br><span class="line">payload_json = payload.to_json <span class="comment"># or JSON(payload)</span></span><br><span class="line">encoded_payload = Base64.urlsafe_encode64(payload_json, <span class="symbol">padding:</span> <span class="literal">false</span>) <span class="comment"># Base64 編碼 payload</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">secret_key = <span class="string">"your-256-bit-secret"</span></span><br><span class="line">data = <span class="string">"<span class="subst">#&#123;encoded_header&#125;</span>.<span class="subst">#&#123;encoded_payload&#125;</span>"</span></span><br><span class="line">digest = OpenSSL::Digest::SHA256.new <span class="comment"># 使用 SHA256 演算法</span></span><br><span class="line">signature = OpenSSL::HMAC.digest(digest, secret_key, data) <span class="comment"># 透過 HMAC 演算法簽章</span></span><br><span class="line">encoded_signature = Base64.urlsafe_encode64(signature, <span class="symbol">padding:</span> <span class="literal">false</span>) <span class="comment"># Base64 編碼 signature</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">token = <span class="string">"<span class="subst">#&#123;encoded_header&#125;</span>.<span class="subst">#&#123;encoded_payload&#125;</span>.<span class="subst">#&#123;encoded_signature&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 驗證，與 JWT 首頁範例一樣</span></span><br><span class="line">token == <span class="string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"</span></span><br></pre></td></tr></table></figure></p><h2><span id="使用-rubygems">使用 RubyGems</span></h2><p>上述為手動實作，透過實作能更清楚如何運作也可直接使用 <a href="https://rubygems.org/gems/jwt" target="_blank" rel="noopener">jwt gem</a> 來處理，一切變得簡單多了，有興趣可看下 <a href="https://github.com/jwt/ruby-jwt/blob/master/lib/jwt.rb" target="_blank" rel="noopener">source code</a> 部分</p><p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 ruby-jwt gem 實作</span></span><br><span class="line"></span><br><span class="line">hmac_secret = <span class="string">"your-256-bit-secret"</span></span><br><span class="line">payload = &#123; <span class="string">"sub"</span> =&gt; <span class="string">"1234567890"</span>, <span class="string">"name"</span> =&gt; <span class="string">"John Doe"</span>, <span class="string">"iat"</span> =&gt; <span class="number">1516239022</span> &#125;</span><br><span class="line"></span><br><span class="line">token = JWT.encode payload, hmac_secret, <span class="string">"HS256"</span></span><br><span class="line"></span><br><span class="line">decoded_token = JWT.decode token, hmac_secret, <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">"HS256"</span> &#125;</span><br><span class="line"><span class="comment"># # Array (payload + header)</span></span><br><span class="line"><span class="comment"># [</span></span><br><span class="line"><span class="comment">#   &#123;</span></span><br><span class="line"><span class="comment">#     "sub" =&gt; "1234567890",</span></span><br><span class="line"><span class="comment">#     "name" =&gt; "John Doe",</span></span><br><span class="line"><span class="comment">#     "iat" =&gt; 1516239022</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   &#123;</span></span><br><span class="line"><span class="comment">#     "alg" =&gt; "HS256"</span></span><br><span class="line"><span class="comment">#   &#125;</span></span><br><span class="line"><span class="comment"># ]</span></span><br></pre></td></tr></table></figure></p><h2><span id="小結">小結</span></h2><p>JWT 的特色有「JSON 通用性的關係，可跨語言使用」、「構造簡單，size 小，便於傳輸」...等</p><p>在使用 JWT 時，不建議把敏感資料放裡面，只要解碼 Base64 便能看到原本的資料</p><p>推薦下面參考資料可以都看過一輪</p><h2><span id="參考資料">參考資料</span></h2><ol><li><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></li><li><a href="https://en.wikipedia.org/wiki/JSON_Web_Token" target="_blank" rel="noopener">JSON Web Token Wiki</a></li><li><a href="https://github.com/jwt/ruby-jwt" target="_blank" rel="noopener">ruuby-jwt</a></li><li><a href="https://5xruby.tw/posts/what-is-jwt" target="_blank" rel="noopener">是誰在敲打我窗？什麼是 JWT ？</a></li><li><a href="https://dev.to/kevinluo201/jwt-27ng" target="_blank" rel="noopener">見令如見人，介紹 JWT</a></li><li><a href="https://link.medium.com/BFwUDzHKkib" target="_blank" rel="noopener">[筆記] 透過 JWT 實作驗證機制</a></li><li><a href="https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">JSON Web Token 入门教程</a></li><li><a href="https://mgleon08.github.io/blog/2018/07/16/jwt/" target="_blank" rel="noopener">JSON Web Token(JWT) 簡單介紹</a></li></ol><hr><p>鐵人賽文章連結：<a href="https://ithelp.ithome.com.tw/articles/10264580" target="_blank" rel="noopener">https://ithelp.ithome.com.tw/articles/10264580</a><br>medium 文章連結：<a href="https://link.medium.com/OYkJftn2Mjb" target="_blank" rel="noopener">https://link.medium.com/OYkJftn2Mjb</a><br>本文同步發布於 <a href="http://riverye.com/2021/09/22/Day09-Gem-jwt-%E4%BB%8B%E7%B4%B9%E8%88%87%E6%87%89%E7%94%A8/">小菜的 Blog</a> <a href="https://riverye.com/">https://riverye.com/</a></p><p>備註：之後文章修改更新，以個人部落格為主</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;JWT 是 &lt;a href=&quot;https://jwt.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JSON Web Token&lt;/a&gt; 的縮寫。在寫此篇時，發現已經有許多相關文章可
      
    
    </summary>
    
    
      <category term="鐵人賽" scheme="https://riverye.com/categories/%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
    
      <category term="13th鐵人賽" scheme="https://riverye.com/tags/13th%E9%90%B5%E4%BA%BA%E8%B3%BD/"/>
    
  </entry>
  
</feed>
